{"version":3,"sources":["menu.js","config.js","utils/axios.js","api/user.js","components/header.js","components/sidebar.js","api/permission.js","components/footer.js","components/upgrade_introduce/introduce_content.js","layouts/WelcomeContent.js","components/breadcrumb_path.js","api/cloud.js","components/cloud_resource/common/extra_info_modal.js","assets/Icons.js","components/cloud_resource/server_content.js","components/cloud_resource/rds_content.js","components/cloud_resource/kv_content.js","components/cloud_resource/slb_content.js","components/cloud_resource/account_content.js","api/daily_task.js","components/task/deploy_project_content.js","services/common.js","components/task/jobs_content.js","components/task/task_content.js","components/permissions/user_manager.js","api/role.js","components/permissions/role_manager.js","components/permissions/permission_manager.js","components/permissions/password_manager.js","components/data/sync_aliyun.js","api/data_api.js","components/cloud_resource/other_content.js","components/kubernetes/web_terminal.js","api/settings_api.js","components/system/settings_content.js","components/logout.js","api/system.js","components/system/feedback_manager.js","components/ci_cd/jenkins_jobs.js","api/jenkins.js","components/ci_cd/jenkins_job_detail.js","components/ci_cd/jenkins.js","api/kubernetes.js","utils/k8s_template.js","components/kubernetes/rc_detail.js","components/kubernetes/service_detail.js","components/kubernetes/pod_detail.js","components/kubernetes/container_log.js","components/kubernetes/node_detail.js","components/kubernetes/rs_detail.js","components/kubernetes/deployment_detail.js","components/kubernetes/namespaces.js","components/kubernetes/k8s_cluster.js","components/kubernetes/kubernetes.js","layouts/ContentLayout.js","layouts/AdminLayout.js","layouts/LoginLayout.js","layouts/ExceptionContent.js","router.js","layouts/main.js","serviceWorker.js","index.js"],"names":["Menus","topMenus","menuTitle","icon","subMenus","title","route","sideMenus","noAuthMenus","axios","interceptors","request","use","config","response","ServerBase","WSBase","defaults","headers","post","service","create","baseURL","timeout","withCredentials","getLocalToken","localStorage","getItem","Authorization","error","Promise","reject","httpStatus","status","console","log","message","window","location","href","this","props","history","push","utils_axios","url","param","resolve","method","params","then","res","catch","err","toLocaleString","data","toString","getUsersList","page","size","req","postUpdatePassword","Header","TextArea","OpsHeader","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","showFeedbackModal","bind","assertThisInitialized","handleOk","handleCancel","state","feedbackModalVisible","setState","_this2","form","validateFields","values","code","success","msg","getFieldDecorator","formItemLayout","labelCol","span","wrapperCol","menuContent","react_default","a","createElement","es_menu","map","menu","subMenu","Item","key","Link","to","hasOwnProperty","style","background","padding","color","paddingLeft","fontSize","es_icon","className","type","menuCollapsed","onClick","handleSiderMenu","cursor","float","width","textAlign","marginLeft","marginRight","dropdown","overlay","overlayStyle","popover","content","modal","destroyOnClose","visible","onOk","onCancel","es_form","label","rules","required","rows","rate","tooltips","Component","name","withRouter","Sider","SubMenu","OpsSider","authList","dataList","permissionUrlList","item","urlPath","subMenuList","_this3","result","indexOf","menuUrlPath","_this4","collapsed","backgroundSize","display","theme","mode","length","hasSubMenusAllowed","hasMenuAllowed","Footer","OpsFooter","Content","IntroduceContent","showIntroduceVersion","slidePrev","slideNext","modalVisible","carousel","prev","next","row","col","paddingTop","ref","autoplay","arrows","height","alertContent","react","es_button","margin","es_alert","closable","centered","footer","getVersionIntroduceContent","WelcomeContent","WelcomeContent_Content","introduce_content","OpsBreadcrumbPath","breadcrumb","pathData","path","defaultProps","getCloudServers","getCloudServerDetail","id","getCloudAccouts","postCloudAccouts","putCloudAccouts","deleteCloudAccouts","getCloudMonitorEcs","instanceId","timeDimension","metricDimension","getCloudMonitorRds","getCloudMonitorKv","getCloudMonitorSlb","getCloudRds","getCloudKv","getCloudSlb","getCloudRdsDetail","getCloudKvDetail","getCloudSlbDetail","getCloudOtherRes","moment","locale","EcsInfoForm","disabled","RdsInfoForm","KvInfoForm","ExtraInfoModal","switchChange","usersData","generateBaseInfoForm","value","renewSwitch","expiredTime","format","dbExpiredTime","kvExpiredTime","resetFields","disableInput","es_input","date_picker","updateMode","resType","twoItemFormLayout","formItem","index","offsetNum","offset","assign","getInputItem","divider","orientation","marginTop","gutter","WindowsSvg","t","viewBox","version","xmlns","p-id","d","fill","LinuxSvg","StatusDoneSvg","StatusProgressSvg","K8sContainerIconSvg","TabPane","tabs","Text","Paragraph","Option","es_select","ServerInfoModal","cloudAccountList","that","accounts","accountOptions","accountName","server_info_modal_visible","handlePostServerInfoSubmit","handlePostServerInfoCancel","okText","cancelText","initialValue","input_number","ServerContent","refreshTableData","tableLoading","queryParams","pagination","pageSize","queryExpiredTime","queryKeyword","queryCloudAccount","total","parseInt","showTotal","objectSpread","tableData","i","ID","Memory","Cpu","HostName","InstanceId","InnerIpAddress","PublicIpAddress","PrivateIpAddress","InternetMaxBandwidthIn","InternetMaxBandwidthOut","InternetChargeType","InstanceName","OSType","ZoneId","OSName","ExpiredTime","Status","CloudAccountName","DataStatus","showChart","myChart","echarts","init","document","getElementById","option","tooltip","trigger","axisPointer","backgroundColor","xAxis","boundaryGap","chartXData","yAxis","axisLabel","formatter","chartFormat","textStyle","series","itemStyle","normal","lineStyle","shadowColor","shadowBlur","areaStyle","chartYData","setOption","openMonitorDrawer","drawerVisible","currentServerDetail","refreshMonitorData","timeTagValue","metricTagValue","refreshSeverDetail","chartLoading","warn","dataPoints","JSON","parse","e","serverDetailLoading","changePage","current","onCloseDrawer","handleTimeTagChange","target","handleMetricTagChange","onExpiredDateChange","keywordOnChange","handleCloudAccountChange","handleUserDefineGroupChange","queryDefineGroup","handleManageUserChange","queryManageUser","handleAdd","ecsId","handleQuery","onSelectChange","selectedRowKeys","handleExtraInfoOk","handleExtraInfoCancel","onShowSizeChange","operWidth","isSuperAdmin","columns","dataIndex","render","ellipsis","textWrap","record","innerContent","privateContent","publicContent","marginBottom","copyable","cpuContent","memoryContent","trafficType","trafficOutContent","align","Icons_WindowsSvg","badge","position","top","Icons_LinuxSvg","fixed","text","serverEdit","popconfirm","onConfirm","serverDelete","webSocketReady","showSizeChanger","pageSizeOptions","showQuickJumper","concat","onChange","drawerPlacement","msgContent","idsList","loadCloudAccountsData","extraInfoModalVisible","resFrom","extraInfoFormRef","setFieldsValue","innerIpAddress","publicIpAddress","privateIpAddress","instanceName","cpu","memory","resForm","_this5","targetId","String","join","putCloudServer","_this6","_this7","serverInfoFormRef","createTime","undefined","_this8","rowSelection","server_content_Content","breadcrumb_path","defaultValue","placeholder","server_content_ServerInfoModal","wrappedComponentRef","extra_info_modal","drawer","placement","onClose","defaultActiveKey","tabPosition","tab","spin","tip","spinning","lineHeight","es_radio","Group","Button","descriptions","bordered","column","Description","CreationTime","ImageId","InstanceChargeType","InstanceNetworkType","InstanceType","table","dataSource","scroll","x","loading","rowClassName","RdsInfoModal","rds_content_Option","rds_info_modal_visible","handlePostRdsInfoSubmit","handlePostRdsInfoCancel","RdsContent","DBInstanceId","DBInstanceDescription","DBInstanceType","Engine","ExpireTime","DBInstanceStatus","ConnectionString","Port","DBInstanceMemory","DBInstanceStorage","rdsId","handleBatchUpdate","idList","rds_content_Text","rds_content_Paragraph","diskContent","rdsEdit","rdsDelete","dbInstanceDescription","dbMemory","dbInstanceStorage","putCloudRds","rdsInfoFormRef","expireTime","rds_content_Content","rds_content_RdsInfoModal","rds_content_TabPane","CreateTime","EngineVersion","Category","KvInfoModal","kv_content_Option","kv_info_modal_visible","handlePostKvInfoSubmit","handlePostKvInfoCancel","KvContent","ConnectionDomain","EndTime","InstanceStatus","Capacity","QPS","Bandwidth","Connections","kvId","kv_content_Text","kv_content_Paragraph","kvEdit","kvDelete","renewStatus","renewSiteId","bankAccount","manageUser","cost","costType","kvInstanceName","kvBandwidth","kvCapacity","putCloudKv","kvInfoFormRef","endTime","kv_content_Content","showIcon","banner","kv_content_KvInfoModal","kv_content_TabPane","ArchitectureType","PrivateIp","SlbContent","LoadBalancerId","LoadBalancerName","Address","LoadBalancerStatus","slb_content_Text","slb_content_Paragraph","slbDelete","slbId","userDefineInfoFormRef","userRemark","UserRemark","userDefineGroup","UserDefineGroup","userDefineInfoModalVisible","slb_content_Option","slb_content_Content","slb_content_TabPane","PayType","AddressIPVersion","CloudContent","confirm","handleDeleteAccountInfo","showAddAccountModal","current_data_id","add_new_account_visible","handleAddAccountSubmit","preventDefault","handleAddAccountCancel","handleEditAccountInfo","accountType","accountPwd","accountKey","accountSecret","accountRegion","bankAccountId","account_content_Text","account_content_Paragraph","superOper","account_content_Content","account_content_Option","getDailyJobs","putDailyJob","putDailyJobExecutorUser","Step","es_steps","options","children","ConfigTemplate","","field","errorMessage","日常工作-协助","KvIput","addNewConfig","configCount","configData","splice","configItem","grid_col","addonBefore","handleKeyChange","handleValueChange","shape","deleteConfigItem","JobBaseInfo","deptData","deploy_project_content_Content","cascader","buttonStyle","JobConfigInfo","getFormInputContent","input","deploy_project_content_TextArea","deploy_project_content_Option","deploy_project_content_KvIput","configDataForm","jobType","card","headStyle","fontWeight","Deploy_project_content","submitJobForm","stepStatus","jobTypeStr","form1Data","form2Data","submitLoading","baseInfo","form3Data","configInfo","reqData","open_deploy_auto_config","stringify","_this9","dots","effect","adaptiveHeight","deploy_project_content_JobBaseInfo","deploy_project_content_JobConfigInfo","loadConfigDataTemplateSpin","getCurrentUserId","token","jwt_decode","NULL_TIMESTAMP","Jobs_content","handlerChangeExecutorCommit","changeToUserId","jobId","jobChangeId","changeUserId","changeExecutorModalVisible","handlerRefuseJobCommit","refuseId","refuseReason","action","refuseJobModalVisible","queryCreateTime","job_name","job_type","important_degree","creator_user_name","executor_user_name","create_time","accept_time","end_time","approve_id","approve_content","refuse_reason","isExecutorChangable","isGetEnable","isFinishEnable","isDeleteEnable","isRefuseEnable","onDrawerClose","onQueryDateChange","downloadFile","ChangeExecutorSelect","changeRefuseReason","autoCreateJob","jobs_content_Text","tag","getStatusText","showJobDetail","startJob","finishJob","refuseJob","deleteJob","drawerSpinning","opsUsersList","job_file","currentJob","currentJobDetail","open","encodeURIComponent","setItem","pathname","waitContent","m1","m2","du","duration","humanize","k8sConfigContent","jobs_content_Paragraph","refuseContent","titleContent","jobs_content_Content","stmayle","jobs_content_TextArea","task_content","minHeight","Layout","Task_content","task_content_Content","Switch","Route","component","columnStyle","overFlow","textOverflow","UserModal","userModalVisible","handleAddUserSubmit","handleAddUserCancel","UserManager","username","email","active","user_manager_Text","updateUserActiveStatus","current_user","detailDrawerVisible","addUserFormRef","activeStatus","user_manager_Content","user_manager_UserModal","deleteRole","deleteAuthLink","getRolesList","getRoleResourceList","roleId","resourceType","getPermissionsList","RoleModal","roleActionType","roleModalVisible","handleAddRole","handleEditRole","handleCancelAddRole","UserManagerModal","filterOption","inputValue","inGroupData","allGroupData","transferLodding","loadRoleUsersData","getRoleUserList","all","forEach","in","targetKeys","direction","moveKeys","userIdList","hideModal","currentRoleName","userManagerModalVisible","handleConfirmUserManager","handleCancelUserManager","transfer","showSearch","itemUnit","itemsUnit","searchPlaceholder","handleTransferChange","listStyle","operations","ResourceManagerModal","ecsFilterOption","instance_name","ip","rdsFilterOption","db_instance_description","db_instance_id","kvFilterOption","connection_domain","slbFilterOption","load_balance_name","address","otherResFilterOption","handleTabClick","handleConfirmRoleResourceManager","tabSpinning","ecsInGroupData","ecsAllGroupData","rdsInGroupData","rdsAllGroupData","kvInGroupData","kvAllGroupData","slbInGroupData","slbAllGroupData","otherAllGroupData","otherInGroupData","loadRoleEcsData","loadRoleRdsData","loadRoleKvData","loadRoleSlbData","loadRoleOtherResData","ecsTransferLodding","rdsTransferLodding","kvTransferLodding","slbTransferLodding","_this10","otherResTransferLodding","res_type","ResType","_this11","ecsIdList","rdsIdList","kvIdList","slbIdList","otherIdList","resourceManagerModalVisible","handleCancelResourceManager","onTabClick","role_manager_TabPane","handleResTransferChange","AuthLinkManagerModal","_this12","url_path","loadRoleAuthLinksData","_this13","getRoleAuthLinks","Id","_this14","authLinkIdList","authLinkManagerModalVisible","handleCancelAuthLinkManager","RolesManager","_this15","managerUser","confirmDeleteRole","okType","managerResource","managerAuthLink","description","createRole","roleEdit","editRoleId","_this16","roleModal","roleName","_this17","addRoleForm","setFields","errors","Error","_this18","_this19","role_manager_Content","role_manager_RoleModal","role_manager_UserManagerModal","role_manager_ResourceManagerModal","role_manager_AuthLinkManagerModal","AuthLinkModal","handleAddAuthLink","_this$props","authLinkModalVisible","handleCancelAddAuthLink","PermissionsManager","confirmDeleteAuthLink","createAuthLink","permission_manager_Content","permission_manager_AuthLinkModal","PasswordManager","compareToFirstPassword","rule","callback","getFieldValue","updatePassword","password","confirm_password","password_manager_Content","onSubmit","hasFeedback","validator","htmlType","SyncAliyunContent","syncAliyunEcs","syncAliyunRds","syncAliyunKv","syncAliyunSlb","syncEcsLoading","syncRdsLoading","syncKvLoading","syncSlbLoading","syncAliyunStatisData","ecsCount","rdsCount","kvCount","slbCount","defineProperty","sync_aliyun_Content","statistic","precision","OtherInfoModal","sitesData","loadCloudAccountData","other_content_Option","actionName","actionType","attachAddon","OtherContent","queryResType","CloudAccountId","Region","RenewStatus","RenewSiteId","BankAccount","handlePostOtherInfoSubmit","handlePostOtherInfoCancel","handleResTypeChange","other_content_Text","other_content_Paragraph","editId","other_info_modal_visible","otherInfoFormRef","cloudAccountId","connections","region","engine","bandwidth","putCloudOtherRes","other_content_Content","other_content_OtherInfoModal","putSettingsValue","RangePicker","SettingsContent","onChangeAllowRenewConfirm","dateOnChange","handleSetExpireDateSubmit","handleSetExpireDateCancel","expireSettingModalVisible","isOpenRenewConfirm","expireStartDate","expireEndDate","loadAllowRenewConfirmStatus","key_name","date","dateString","settings_content_Content","es_switch","checked","LogoutContent","removeItem","getUserFeedbackList","UserFeedbackManager","score","feedback_manager_Content","JenkinsJobsContent","jumpJobDetail","jobs","loadJenkinsAllJobs","jobName","jenkins_jobs_Content","Grid","Jenkins_job_detail","startBuildJob","refreshJobInfo","disableJob","enableJob","loadJenkinsJobBuildList","buildInfo","buildConsoleLog","logLoading","jobBuilding","refreshInfoLoading","buildLog","start","timer","progressLoading","nextBuildNumber","buildName","getJenkinsJobBuildList","clearTimeout","buildId","setTimeout","showBuildConsoleLog","ableBuild","ableContent","jenkins_job_detail_Content","displayName","jenkins_job_detail_Text","whiteSpace","list","header","renderItem","buildTag","timeTag","timestamp","actionContent","fullDisplayName","JenkinsContent","jenkins_Content","getNodeMetrics","K8sTemplate","rc","rs","deployment","statefull_rs","daemon_set","config_map","secret_map","RcDetailContent","rcDetail","labels","metadata","selectors","spec","selector","images","containersData","template","containers","rc_detail_Content","namespace","creationTimestamp","replicas","readyReplicas","ServiceDetailContent","serviceDetail","portsList","ports","portContent","service_detail_Content","clusterIP","sessionAffinity","MemoryChart","createG2","chart","alias","line","CpuChart","PodDetailContent","loadPodLog","handleCancelLogModal","openWebTerminal","memoryChartData","cpuChartData","containerName","phase","podName","logModalVisible","cpuQuery","query","points","parseFloat","memoryQuery","containersList","borderBottom","itemLayout","Meta","avatar","Icons_K8sContainerIconSvg","pod_detail_Text","image","pod_detail_Content","tabChange","pod_detail_TabPane","hostIP","podIP","forceFit","WebTerminalContent","goBack","rws","ReconnectingWebSocket","terminal","Terminal","cursorBlink","cursorStyle","bellStyle","prompt","write","containerDetail","connectionStatus","writeln","initWsConnection","AttachAddon","loadAddon","focus","send","clusterId","close","dispose","addEventListener","connectContent","web_terminal_Content","bodyStyle","ContainerLogContent","syncLogs","containerInfo","logContent","scrollToBottom","panel","scrollTop","scrollHeight","container_log_Content","overflow","DiskChart","NodeDetailContent","nodeDetail","diskChartData","annotations","addresses","addressesData","node_detail_Text","node_detail_Content","node_detail_TabPane","daemonEndpoints","kubeletEndpoint","nodeInfo","containerRuntimeVersion","kubeletVersion","kubeProxyVersion","operatingSystem","architecture","node_detail_MemoryChart","node_detail_CpuChart","RsDetailContent","rsDetail","matchLabels","rs_detail_Content","DeploymentDetailContent","deployment_detail_Content","Panel","customPanelStyle","borderRadius","border","K8sNamespacesContent","showLoading","refreshDataLoading","getColumnSearchProps","filterDropdown","_ref","setSelectedKeys","selectedKeys","clearFilters","node","searchInput","onPressEnter","handleSearch","handleReset","filterIcon","filtered","onFilter","toLowerCase","includes","onFilterDropdownVisibleChange","select","dist_main_default","highlightStyle","searchWords","searchText","autoEscape","textToHighlight","refreshNamespaceResources","selectChange","yarmCreateK8sResource","selectTemplateChange","handleYamlDetailCancel","handleScaleCancel","handleScaleCommit","onInputNumberChange","handleConfigCancel","nodeColumns","showDetail","conditions","rcColumns","Icons_StatusDoneSvg","Icons_StatusProgressSvg","rel","autoScaleHandler","deleteHandler","showYamlHandler","rsColumns","serviceColumns","deploymentColumns","podColumns","statusContent","containerStatuses","configDictColumns","showDictValue","deleteDictValue","secretDictColumns","namespaceList","replicationControllerList","deploymentList","replicaSetList","serviceList","podList","nodeList","configDictList","secretDictList","dictConfigValue","yamlModalVisible","scaleModalVisible","configModalVisible","yamlDetail","currentNamespace","yamlCode","replicaCount","scaleResType","scaleResData","getK8sNamespaces","getK8sNodes","items","getNamespaceDeployments","getNamespaceReplicationControllers","getNamespaceReplicaSets","getNamespaceServices","getNamespacePods","getNamespaceConfigDict","getNamespaceSecretDict","deleteConfigMap","resName","deleteSecret","createModalVisible","trim","yamlContent","deleteResource","modelTitle","alertTitle","configList","react_codemirror2","namespaces_Content","namespaces_Option","onBeforeChange","editor","min","collapse","tabBarStyle","namespaces_TabPane","kubeConfigPath","ClusterManageContent","addCluster","handleClusterAddOk","handleClusterAddCancel","handleSetPrometheusAddOk","handleSetPrometheusAddCancel","loadClusterData","addModelVisible","setPrometheusModelVisible","uploadProps","info","file","resp","clusterData","prometheusHost","k8sData","kubeconfig_file_path","host","k8s_cluster_Content","setPrometheus","empty","grid","enterToCluster","confirmDeleteCluster","upload","hostChange","KubernetesContent","kubernetes_Content","ContentLayout","ContentLayout_Content","minWidth","exact","server_content","rds_content","kv_content","slb_content","account_content","other_content","jenkins","kubernetes","AdminContent","onExit","stepsEnabled","initialStep","prevLabel","nextLabel","skipLabel","doneLabel","hintButtonLabel","steps","element","intro","isShowIntroPage","_this$state","BrowserRouter","layout","intro_js_react_lib","enabled","sidebar","LoginContent","handleEnterKey","nativeEvent","keyCode","handleSubmit","URLSearchParams","search","get","loginPanel","prefix","onKeyPress","block","Exception500","backToLogin","es_result","subTitle","extra","Exception404","RouterWrap","App","router_RouterWrap","Boolean","hostname","match","ReactDOM","config_provider","zhCN","layouts_main","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6bf12c33.chunk.js","sourcesContent":["\nconst topMenus = [\n    {\n        \"menuTitle\": \"我的\",\n        \"icon\": \"user\",\n        \"subMenus\": [\n            {\"title\": \"修改密码\", \"route\": \"/admin/permission/password\"},\n            {\"title\": \"退出\", \"route\": \"/admin/logout\"},\n        ],\n    }\n];\n\nconst sideMenus = [\n    {\n        \"menuTitle\": \"云资源\",\n        \"icon\": \"cloud-server\",\n        \"subMenus\": [\n            {\"title\": \"服务器\", \"route\": \"/admin/cloud_resource/cloud_server\"},\n            {\"title\": \"数据库\", \"route\": \"/admin/cloud_resource/cloud_rds\"},\n            {\"title\": \"KV-Store\", \"route\": \"/admin/cloud_resource/cloud_kv\"},\n            {\"title\": \"负载均衡\", \"route\": \"/admin/cloud_resource/cloud_slb\"},\n            {\"title\": \"其它资源\", \"route\": \"/admin/cloud_resource/cloud_other\"},\n            {\"title\": \"云账号\", \"route\": \"/admin/cloud_resource/cloud_account\"},\n        ],\n    },\n    {\n        \"menuTitle\": \"工作协助\",\n        \"icon\": \"team\",\n        \"subMenus\": [\n            {\"title\": \"提交工单\", \"route\": \"/admin/task/deploy_project\"},\n            {\"title\": \"工单列表\", \"route\": \"/admin/task/jobs\"},\n        ],\n    },\n    {\n        \"menuTitle\": \"CI & CD\",\n        \"icon\": \"gitlab\",\n        \"subMenus\": [\n            // {\"title\": \"任务列表\", \"route\": \"/admin/cicd/jobs\"},\n        ],\n    },\n    {\n        \"menuTitle\": \"Kubernetes\",\n        \"icon\": \"ant-cloud\",\n        \"subMenus\": [\n            {\"title\": \"集群管理\", \"route\": \"/admin/k8s_cluster/info\"},\n        ],\n    },\n    {\n        \"menuTitle\": \"数据管理\",\n        \"icon\": \"database\",\n        \"subMenus\": [\n            {\"title\": \"阿里云\", \"route\": \"/admin/data/syncAliyun\"},\n        ],\n    },\n    {\n        \"menuTitle\": \"权限管理\",\n        \"icon\": \"eye\",\n        \"subMenus\": [\n            {\"title\": \"用户管理\", \"route\": \"/admin/permission/users\"},\n            {\"title\": \"角色管理\", \"route\": \"/admin/permission/roles\"},\n            {\"title\": \"权限链接\", \"route\": \"/admin/permission/permissions\"},\n        ],\n    },\n    {\n        \"menuTitle\": \"系统管理\",\n        \"icon\": \"radius-setting\",\n        \"subMenus\": [\n            {\"title\": \"用户反馈\", \"route\": \"/admin/system/user_feedback\"},\n        ],\n    }\n];\n\nconst Menus = {\n    \"topMenus\": topMenus,\n    \"sideMenus\": sideMenus,\n    \"noAuthMenus\": [\"/admin/task/deploy_project\", \"/admin/task/jobs\"], // 不参与权限校验的菜单\n};\n\nexport default Menus;\n","import axios from 'axios'\n\naxios.interceptors.request.use(function(config) {\n    return config\n});\n\naxios.interceptors.response.use(function(config) {\n    return config\n});\n\n// const ServerBase = \"https://you_host:443/api/\";\n// const WSBase = \"wss://you_host:443/api/\";\n//\nconst ServerBase = \"http://localhost:19999/\";\nconst WSBase = \"ws://localhost:19999/\";\n\nexport { ServerBase, WSBase};\n","import axios from 'axios';\nimport {message} from 'antd';\nimport {ServerBase} from \"../config\";\n\naxios.defaults.headers.post['Content-Type'] = 'application/json';\n\nlet service = axios.create({\n    baseURL: ServerBase,\n    timeout: 7000,\n    withCredentials: false\n});\n\nfunction getLocalToken() {\n    return localStorage.getItem(\"ops_token\");\n}\nexport { getLocalToken };\n\nfunction getClusterId() {\n    return localStorage.getItem(\"clusterId\");\n}\nexport { getClusterId };\n\n//添加请求拦截器\nservice.interceptors.request.use(function(config){\n    config.headers.Authorization = getLocalToken();\n    config.headers['ClusterId'] = getClusterId();\n    return config\n},function(error){\n    return Promise.reject(error)\n});\n\n//添加响应拦截器\nservice.interceptors.response.use(function(response){\n        return response['data'];\n    }, function(error){\n        const httpStatus = error.response.status;\n        console.log(error);\n        switch (httpStatus) {\n            case 400:\n                message.error(\"[400]客户端请求参数错误\");\n                break;\n            case 401:\n                window.location.href = \"/login?code=401\";\n                break;\n            case 403:\n                window.location.href = \"/login?code=403\";\n                break;\n            case 500:\n                message.error(\"[500]服务异常，请联系运维处理\");\n                this.props.history.push('/exception500');\n                break;\n            default:\n                message.error(\"服务异常，请联系运维处理\");\n                break;\n        }\n        return Promise.reject(error);\n    }\n);\n\nexport default{\n    //get请求\n    get(url, param, timeout){\n        return new Promise((resolve, reject)=>{\n            service({\n                method: 'get',\n                url,\n                params: param,\n                timeout: timeout,\n            }).then(res=>{\n                resolve(res)\n            }).catch(err=>{\n                message.error(err.toLocaleString());\n                console.log(err,'异常');\n            })\n\n        })\n    },\n    //post请求\n    post(url, param, timeout){\n        return new Promise((resolve, reject)=>{\n            service({\n                method: 'post',\n                url,\n                data: param,\n                timeout: timeout,\n            }).then(res=>{\n                resolve(res)\n            }).catch(err=>{\n                message.error(err.toString());\n                console.log(err,'异常');\n            })\n        })\n    },\n    //put请求\n    put(url, param, timeout){\n        return new Promise((resolve, reject)=>{\n            service({\n                method: 'put',\n                url,\n                data: param,\n                timeout: timeout,\n            }).then(res=>{\n                resolve(res)\n            }).catch(err=>{\n                message.error(err.toLocaleString());\n                console.log(err,'异常');\n            })\n        })\n    },\n    //delete请求\n    delete(url, param, timeout){\n        return new Promise((resolve, reject)=>{\n            service({\n                method: 'delete',\n                url,\n                data: param,\n                timeout: timeout,\n            }).then(res=>{\n                resolve(res)\n            }).catch(err=>{\n                message.error(err.toLocaleString());\n                console.log(err,'异常');\n            })\n        })\n    }\n}\n","import req from '../utils/axios';\n\n/*\n    用户登录\n */\nconst postUserLogin = (data) => {\n    return req.post('user/login', data)\n};\nexport {postUserLogin}\n\n/*\n    用户创建\n */\nconst postUserCreate = (data) => {\n    return req.post('user/create', data)\n};\nexport {postUserCreate}\n\n/*\n    更新用户状态\n */\nconst putUserCreate = (data) => {\n    return req.put('user/active', data)\n};\nexport {putUserCreate}\n\n/*\n    用户 jwt token 刷新\n */\nconst getUserTokenRefresh = () => {\n    return req.get('user/tokenRefresh')\n};\nexport {getUserTokenRefresh}\n\n/*\n    获取注册用户列表\n */\nconst getUsersList = (page, size) =>{\n    return req.get('user/list', {page, size})\n};\nexport {getUsersList}\n\n/*\n    用户修改密码\n */\nconst postUpdatePassword = (data) => {\n    return req.post('user/updatePassword', data)\n};\nexport {postUpdatePassword}\n\n/*\n    用户提交需求&bug反馈\n */\nconst postUserFeedback = (data) => {\n    return req.post('user/feedback', data)\n};\nexport {postUserFeedback}","import React, { Component } from 'react';\nimport {Layout, Menu, Icon, Modal, Form, Input, Rate, message, Popover, Dropdown} from 'antd';\nimport { Link } from 'react-router-dom';\nimport { withRouter } from 'react-router-dom';\nimport Menus from \"../menu\";\nimport {postUserFeedback} from \"../api/user\";\n\nconst { Header } = Layout;\nconst { TextArea } = Input;\n\n\nclass OpsHeader extends Component {\n\n    constructor(props) {\n        super(props);\n        this.showFeedbackModal = this.showFeedbackModal.bind(this);\n        this.handleOk = this.handleOk.bind(this);\n        this.handleCancel = this.handleCancel.bind(this);\n        this.state= {\n            feedbackModalVisible: false,\n        }\n    }\n\n    showFeedbackModal() {\n        this.setState({feedbackModalVisible: true})\n    }\n\n    handleOk() {\n        this.props.form.validateFields((err, values) => {\n            if(!err){\n                postUserFeedback(values).then((res)=>{\n                    if(res.code===0) {\n                        this.setState({feedbackModalVisible: false});\n                        message.success(\"已经收到您的反馈！\");\n                    } else {\n                        message.error(res.msg);\n                    }\n                }).catch((err)=>{\n                    message.error(err.toLocaleString());\n                })\n            }\n        });\n    }\n\n    handleCancel() {\n        this.setState({feedbackModalVisible: false})\n    }\n\n    render() {\n        const { getFieldDecorator } = this.props.form;\n        const formItemLayout = {\n            labelCol: {span: 5},\n            wrapperCol: {span: 17},\n        };\n        let menuContent = (\n            <Menu>\n                {\n                    Menus.topMenus.map((menu) => {\n                        return (\n                            menu.subMenus.map((subMenu) => {\n                                return (\n                                    <Menu.Item key={subMenu.title}>\n                                        {<Link to={subMenu.hasOwnProperty(\"route\")?subMenu.route:\"\"}>{subMenu.title}</Link>}\n                                    </Menu.Item>\n                                )\n                            })\n                        )\n                    })\n                }\n            </Menu>\n        );\n\n        return (\n            <Header style={{ background: '#fff', padding: 0 }}>\n                <div style={{ background: '#001529' }}>\n                    <span style={{color:'#fff', paddingLeft:'2%', fontSize:'1.4em'}}>\n                        <Icon\n                            className=\"trigger\"\n                            type={this.props.menuCollapsed ? 'menu-unfold' : 'menu-fold'}\n                            onClick={this.props.handleSiderMenu}\n                            style={{cursor: 'pointer'}}\n                        />\n                    </span>\n\n                    <span className=\"introStep1\" style={{color:'#fff', fontSize:'1.4em', float: 'right', cursor: 'pointer', width: '30px', textAlign: 'center', marginLeft: '20px', marginRight: '30px'}}>\n                        <Dropdown overlay={menuContent} overlayStyle={{ width: '150px' }}>\n                            <Icon type=\"user\" />\n                        </Dropdown>\n                    </span>\n\n                    <span className=\"introStep2\" style={{color:'#fff', fontSize:'1.4em', float: 'right', cursor: 'pointer', width: '30px', textAlign: 'center',}} onClick={this.showFeedbackModal}>\n                        <Popover content=\"提交需求反馈\">\n                            <Icon type=\"message\">\n                            </Icon>\n                        </Popover>\n                    </span>\n\n                    <Modal\n                        title=\"「Bug & 需求」反馈\"\n                        destroyOnClose={true}\n                        visible={this.state.feedbackModalVisible}\n                        onOk={this.handleOk}\n                        onCancel={this.handleCancel}\n                        width={700}\n                    >\n                        <Form {...formItemLayout}>\n                            <Form.Item label=\"反馈内容\">\n                            {getFieldDecorator('advice', {\n                                rules: [\n                                    {\n                                        required: true,\n                                        message: '内容不能为空',\n                                    },\n                                ],\n                            })(<TextArea rows={4} />)}\n                            </Form.Item>\n                        </Form>\n                        <Form {...formItemLayout}>\n                            <Form.Item label=\"当前版本满意度\">\n                                {getFieldDecorator('score', {\n                                    rules: [\n                                        {\n                                            required: true,\n                                            message: '请对当前版本进行打分',\n                                        },\n                                    ],\n                                })(<Rate tooltips={['难用', '不好用', '体验一般', '体验良好', '非常棒']} />)}\n                            </Form.Item>\n                        </Form>\n                    </Modal>\n\n                </div>\n            </Header>\n        );\n    }\n}\n\nOpsHeader = Form.create({ name: 'OpsHeader' })(OpsHeader);\n\nexport default withRouter(OpsHeader);\n","import React, {Component} from 'react';\nimport { Layout, Menu, Icon, message } from 'antd';\nimport { Link } from 'react-router-dom';\nimport Menus from \"../menu\";\nimport {getUserPermissionsList} from \"../api/permission\";\n\nconst { Sider } = Layout;\nconst SubMenu = Menu.SubMenu;\n\nclass OpsSider extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            authList: []\n        }\n    }\n\n    componentWillMount() {\n        getUserPermissionsList().then((res)=>{\n            if(res.code === 0) {\n                const dataList = res.data;\n                let permissionUrlList = [];\n                dataList.map((item)=>{\n                    return permissionUrlList.push(item.urlPath);\n                });\n                this.setState({\n                    authList: permissionUrlList\n                })\n            } else {\n                message.error(\"获取用户菜单权限异常\")\n            }\n        }).catch((err)=>{\n            message.error(err.toLocaleString())\n        })\n    }\n\n    hasSubMenusAllowed(subMenuList) {\n        let result = false;\n        subMenuList.map((item)=>{\n            if(this.state.authList.indexOf(item.route) > -1 || Menus.noAuthMenus.indexOf(item.route) > -1){\n                result = true;\n                return result;\n            } else {\n                return null;\n            }\n        });\n        return result;\n    }\n\n    hasMenuAllowed(menuUrlPath) {\n        return this.state.authList.indexOf(menuUrlPath) > -1 || Menus.noAuthMenus.indexOf(menuUrlPath) > -1;\n    }\n\n    render() {\n        return (\n            <Sider\n                collapsed={this.props.menuCollapsed}\n                style={{ textAlign: 'center' }}\n            >\n                <span className=\"logo\" style={this.props.menuCollapsed?{backgroundSize:'80%'}:{backgroundSize:'80%'}}/>\n                <span className=\"logo-text\" style={this.props.menuCollapsed?{display:'none'}:{}}>运维平台</span>\n                <Menu theme=\"dark\"\n                    mode=\"inline\"\n                    className=\"introStep4\"\n                    style={{ textAlign: 'left' }}\n                >\n                  {\n                      Menus.sideMenus.map((menu) => {\n                          if(menu.subMenus.length && this.hasSubMenusAllowed(menu.subMenus)){\n                              return (\n                                  <SubMenu\n                                      key={menu.menuTitle}\n                                      title={<span><Icon type={menu.icon} /><span>{menu.menuTitle}</span></span>}\n                                  >\n                                      {\n                                          menu.subMenus.map((subMenu) => {\n                                              if(this.hasMenuAllowed(subMenu.route)){\n                                                  return (\n                                                      <Menu.Item key={subMenu.title}>\n                                                          <Link to={subMenu.route}>{subMenu.title}</Link>\n                                                      </Menu.Item>\n                                                  )\n                                              } else {\n                                                  return null;\n                                              }\n                                          })\n                                      }\n                                  </SubMenu>\n                              )\n                          } else {\n                              return null\n                          }\n                      })\n                  }\n                </Menu>\n            </Sider>\n        )\n    }\n}\n\nexport default OpsSider;\n","import req from \"../utils/axios\";\n\nconst getUserPermissionsList = () =>{\n    return req.get('user/permissions')\n};\nexport {getUserPermissionsList}\n","import React, { Component } from 'react';\nimport { Layout } from 'antd';\nconst { Footer} = Layout;\n\n\nclass OpsFooter extends Component {\n  render() {\n    return (\n      <Footer style={{ textAlign: 'center', padding: '15px 50px' }}>\n        ©2019 Created by KevinYang\n      </Footer>\n    );\n  }\n}\n\nexport default OpsFooter;\n","import React, {Component, Fragment} from \"react\";\nimport {Alert, Button, Carousel, Col, Icon, Layout, Modal, Row} from \"antd\";\n\nconst { Content } = Layout;\n\nclass IntroduceContent extends Component {\n\n    constructor(props) {\n        super(props);\n        this.showIntroduceVersion = this.showIntroduceVersion.bind(this);\n        this.handleCancel = this.handleCancel.bind(this);\n        this.slidePrev = this.slidePrev.bind(this);\n        this.slideNext = this.slideNext.bind(this);\n        this.state = {\n            modalVisible: false,\n        }\n    }\n\n    showIntroduceVersion() {\n        this.setState({modalVisible: true});\n    }\n\n    handleCancel() {\n        this.setState({modalVisible: false});\n    }\n\n    slidePrev() {\n        this.carousel.prev();\n    }\n\n    slideNext() {\n        this.carousel.next();\n    }\n\n    getVersionIntroduceContent() {\n        return (\n            <div>\n                <Row>\n                    <Col span={1} style={{ paddingTop: '25%' }}>\n                        {/*<Icon type=\"left-circle\" style={{ fontSize: '32px', color: '#08c' }} onClick={this.slidePrev}/>*/}\n                    </Col>\n                    <Col span={22}>\n                        <Carousel ref={(carousel)=>this.carousel=carousel} autoplay={true} arrows={false} style={{ height: '600px' }} >\n                            <div className=\"intro\">\n                                <Row style={{paddingTop: '90px'}}>\n                                    <Col span={12} style={{height: '330px', paddingLeft: '20px'}}>\n                                        <div className=\"intro_img_common\" />\n                                    </Col>\n                                    <Col span={8} className=\"intro_desc\">\n                                        1、支持阿里云账号下云资源的集成；<br/><br/>\n                                        2、支持简版工单的协作；<br/><br/>\n                                        3、采用 RBAC 进行用户菜单权限和资源可见权限的控制；<br/><br/>\n                                        4、支持接入 Kubernetes 对其进行管理；\n                                    </Col>\n                                </Row>\n                            </div>\n                        </Carousel>\n                    </Col>\n                    <Col span={1} style={{ paddingTop: '25%' }}>\n                        {/*<Icon type=\"right-circle\" style={{ fontSize: '32px', color: '#08c' }}  onClick={this.slideNext}/>*/}\n                    </Col>\n                </Row>\n            </div>\n        );\n    }\n\n    render() {\n        let alertContent = (\n            <Fragment>\n                <Button type=\"link\" onClick={this.showIntroduceVersion}>\n                    <Icon type=\"notification\" /> 点击查看当前版本「Version: 1.0.0」更新内容\n                </Button>\n            </Fragment>\n        );\n        return (\n            <Content\n                style={{ padding: \"5px 10px\", margin: 0, height: \"10%\" }}\n            >\n                <Alert type=\"success\" message={alertContent} closable/>\n                <Modal\n                    visible={this.state.modalVisible}\n                    destroyOnClose={true}\n                    centered={true}\n                    width='70%'\n                    closable={true}\n                    onCancel={this.handleCancel}\n                    footer={null}\n                >\n                    { this.getVersionIntroduceContent() }\n                </Modal>\n            </Content>\n        );\n    }\n}\n\nexport default IntroduceContent;\n","import React, { Component } from 'react';\nimport IntroduceContent from \"../components/upgrade_introduce/introduce_content\";\nimport {Layout} from \"antd\";\n\nconst { Content } = Layout;\n\nclass WelcomeContent extends Component {\n  render() {\n    return (\n      <Content style={{ height: '100%' }}>\n        <IntroduceContent />\n        <div className=\"base_png\" />\n      </Content>\n    );\n  }\n}\n\nexport default WelcomeContent;\n","import React, { Component } from 'react';\nimport { Breadcrumb } from 'antd';\n\n\nclass OpsBreadcrumbPath extends Component {\n\n    static defaultProps = {\n        pathData: [],\n    };\n\n    render() {\n        return (\n            <Breadcrumb style={{ margin: '5px 0px 10px 0px' }}>\n                {\n                    this.props.pathData.map((path) => {\n                        return (\n                            <Breadcrumb.Item key={path}>{path}</Breadcrumb.Item>\n                        )\n                    })\n                }\n            </Breadcrumb>\n    );\n  }\n}\n\nexport default OpsBreadcrumbPath;\n","import req from \"../utils/axios\";\n\nconst getCloudServers = (params) =>{\n    return req.get('cloud/servers', params)\n};\nexport {getCloudServers}\n\nconst getCloudServerDetail = (id) =>{\n    return req.get('cloud/servers/'+id)\n};\nexport {getCloudServerDetail}\n\nconst getCloudAccouts = (page, size) =>{\n    return req.get('cloud/accounts',{page, size})\n};\nexport {getCloudAccouts}\n\nconst postCloudAccouts = (data) =>{\n    return req.post('cloud/accounts', data)\n};\nexport {postCloudAccouts}\n\nconst putCloudAccouts = (data) =>{\n    return req.put('cloud/accounts', data)\n};\nexport {putCloudAccouts}\n\nconst deleteCloudAccouts = (data) =>{\n    return req.delete('cloud/accounts', data)\n};\nexport {deleteCloudAccouts}\n\nconst getCloudMonitorEcs = (instanceId, timeDimension, metricDimension) =>{\n    return req.get('cloud/monitor/ecs',{instanceId, timeDimension, metricDimension})\n};\nexport {getCloudMonitorEcs}\n\nconst getCloudMonitorRds = (instanceId, timeDimension, metricDimension) =>{\n    return req.get('cloud/monitor/rds',{instanceId, timeDimension, metricDimension})\n};\nexport {getCloudMonitorRds}\n\nconst getCloudMonitorKv = (instanceId, timeDimension, metricDimension) =>{\n    return req.get('cloud/monitor/kv',{instanceId, timeDimension, metricDimension})\n};\nexport {getCloudMonitorKv}\n\nconst getCloudMonitorSlb = (instanceId, timeDimension, metricDimension) =>{\n    return req.get('cloud/monitor/slb',{instanceId, timeDimension, metricDimension})\n};\nexport {getCloudMonitorSlb}\n\nconst getCloudRds = (params) =>{\n    return req.get('cloud/rds',params)\n};\nexport {getCloudRds}\n\nconst getCloudKv = (params) =>{\n    return req.get('cloud/kv',params)\n};\nexport {getCloudKv}\n\nconst getCloudSlb = (params) =>{\n    return req.get('cloud/slb',params)\n};\nexport {getCloudSlb}\n\nconst getCloudRdsDetail = (id) =>{\n    return req.get('cloud/rds/'+id)\n};\nexport {getCloudRdsDetail}\n\nconst getCloudKvDetail = (id) =>{\n    return req.get('cloud/kv/'+id)\n};\nexport {getCloudKvDetail}\n\nconst getCloudSlbDetail = (id) =>{\n    return req.get('cloud/slb/'+id)\n};\nexport {getCloudSlbDetail}\n\nconst postCloudServer = (data) =>{\n    return req.post('cloud/servers', data)\n};\nexport {postCloudServer}\n\nconst putCloudServer = (data) =>{\n    return req.put('cloud/servers', data)\n};\nexport {putCloudServer}\n\nconst deleteCloudServer = (id) =>{\n    return req.delete('cloud/servers', {id: id})\n};\nexport {deleteCloudServer}\n\nconst deleteCloudKv = (id) =>{\n    return req.delete('cloud/kv', {id: id})\n};\nexport {deleteCloudKv}\n\nconst postCloudKv = (data) =>{\n    return req.post('cloud/kv', data)\n};\nexport {postCloudKv}\n\nconst putCloudKv = (data) =>{\n    return req.put('cloud/kv', data)\n};\nexport {putCloudKv}\n\nconst putCloudRds = (data) =>{\n    return req.put('cloud/rds', data)\n};\nexport {putCloudRds}\n\nconst postCloudRds = (data) =>{\n    return req.post('cloud/rds', data)\n};\nexport {postCloudRds}\n\nconst deleteCloudRds = (id) =>{\n    return req.delete('cloud/rds', {id: id})\n};\nexport {deleteCloudRds}\n\nconst deleteCloudSlb = (id) =>{\n    return req.delete('cloud/slb', {id: id})\n};\nexport {deleteCloudSlb}\n\nconst getCloudOtherRes = (params) =>{\n    return req.get('cloud/other', params)\n};\nexport {getCloudOtherRes}\n\nconst postCloudOtherRes = (data) =>{\n    return req.post('cloud/other', data)\n};\nexport {postCloudOtherRes}\n\nconst putCloudOtherRes = (data) =>{\n    return req.put('cloud/other', data)\n};\nexport {putCloudOtherRes}\n\nconst deleteCloudOtherRes = (id) =>{\n    return req.delete('cloud/other', {id: id})\n};\nexport {deleteCloudOtherRes}","import React, {Component} from \"react\";\nimport {Form, Input, Modal, Divider, Row, Col, DatePicker} from \"antd\";\nimport moment from 'moment';\nmoment.locale('zh-cn');\n\nconst EcsInfoForm = [\n    {\n        \"label\": \"来源\",\n        \"key\": \"resForm\",\n        \"type\": \"input\",\n        \"disabled\": true,\n    },\n    {\n        \"label\": \"实例Id\",\n        \"key\": \"instanceId\",\n        \"type\": \"input\",\n    },\n    {\n        \"label\": \"实例名称\",\n        \"key\": \"instanceName\",\n        \"type\": \"input\",\n    },\n    {\n        \"label\": \"内网ip\",\n        \"key\": \"innerIpAddress\",\n        \"type\": \"input\",\n    },\n    {\n        \"label\": \"外网ip\",\n        \"key\": \"publicIpAddress\",\n        \"type\": \"input\",\n    },\n    {\n        \"label\": \"私有ip\",\n        \"key\": \"privateIpAddress\",\n        \"type\": \"input\",\n    },\n    {\n        \"label\": \"CPU\",\n        \"key\": \"cpu\",\n        \"type\": \"input\",\n    },\n    {\n        \"label\": \"内存(G)\",\n        \"key\": \"memory\",\n        \"type\": \"input\",\n    },\n    {\n        \"label\": \"过期时间\",\n        \"key\": \"expiredTime\",\n        \"type\": \"date_input\",\n    }\n];\n\nconst RdsInfoForm = [\n    {\n        \"label\": \"来源\",\n        \"key\": \"resForm\",\n        \"type\": \"input\",\n        \"disabled\": true,\n    },\n    {\n        \"label\": \"实例名称\",\n        \"key\": \"dbInstanceDescription\",\n        \"type\": \"input\",\n    },\n    {\n        \"label\": \"内存(G)\",\n        \"key\": \"dbMemory\",\n        \"type\": \"input\",\n    },\n    {\n        \"label\": \"磁盘(G)\",\n        \"key\": \"dbInstanceStorage\",\n        \"type\": \"input\",\n    },\n    {\n        \"label\": \"过期时间\",\n        \"key\": \"dbExpiredTime\",\n        \"type\": \"date_input\",\n    }\n];\n\nconst KvInfoForm = [\n    {\n        \"label\": \"来源\",\n        \"key\": \"resForm\",\n        \"type\": \"input\",\n        \"disabled\": true,\n    },\n    {\n        \"label\": \"实例名称\",\n        \"key\": \"kvInstanceName\",\n        \"type\": \"input\",\n    },\n    {\n        \"label\": \"带宽\",\n        \"key\": \"kvBandwidth\",\n        \"type\": \"input\",\n    },\n    {\n        \"label\": \"容量(G)\",\n        \"key\": \"kvCapacity\",\n        \"type\": \"input\",\n    },\n    {\n        \"label\": \"过期时间\",\n        \"key\": \"kvExpiredTime\",\n        \"type\": \"date_input\",\n    }\n];\n\nclass ExtraInfoModal extends Component {\n\n    constructor(props){\n        super(props);\n        this.handleOk = this.handleOk.bind(this);\n        this.handleCancel = this.handleCancel.bind(this);\n        this.switchChange = this.switchChange.bind(this);\n        this.state = {\n            usersData: [],\n        }\n    }\n\n    componentDidMount() {\n        this.generateBaseInfoForm();\n    }\n\n    switchChange(value) {\n        this.setState({renewSwitch: value});\n    }\n\n    handleOk() {\n        this.props.form.validateFields((err, values) => {\n            if(!err){\n                if('expiredTime' in values){\n                    values.expiredTime = moment(values.expiredTime).format(\"YYYY-MM-DD 00:00:00\");\n                }\n                if('dbExpiredTime' in values){\n                    values.dbExpiredTime = moment(values.dbExpiredTime).format(\"YYYY-MM-DD 00:00:00\");\n                }\n                if('kvExpiredTime' in values){\n                    values.kvExpiredTime = moment(values.kvExpiredTime).format(\"YYYY-MM-DD 00:00:00\");\n                }\n\n                this.props.handleOk(values);\n            }\n        });\n    }\n\n    handleCancel() {\n        this.props.form.resetFields();\n        this.props.handleCancel();\n    }\n\n    getInputItem(item, disableInput) {\n        let res = <Input />;\n        switch (item.type) {\n            case 'input':\n                res = <Input disabled={item.disabled || disableInput}/>;\n                break;\n            case 'date_input':\n                res = <DatePicker format=\"YYYY-MM-DD\" disabled={item.disabled || disableInput}/>;\n                break;\n            default:\n                break;\n        }\n        return res;\n    }\n\n    generateBaseInfoForm() {\n        if(this.props.updateMode!=='single'){\n            return \"\"\n        }\n        let disableInput = false;\n        let resType = this.props.resType;\n        let formContent;\n        let result = [];\n        const {getFieldDecorator} = this.props.form;\n        const twoItemFormLayout = {\n            labelCol: {span: 7},\n            wrapperCol: {span: 17},\n        };\n        let data = [];\n        switch (resType) {\n            case 'ecs':\n                data = EcsInfoForm;\n                break;\n            case 'rds':\n                data = RdsInfoForm;\n                break;\n            case 'kv':\n                data = KvInfoForm;\n                break;\n            default:\n                break;\n        }\n        let formItem = data.map((item, index) => {\n            let offsetNum = index % 2 === 0 ? 0 : 1;\n            return (\n                <Col span={11} offset={offsetNum} key={item.key}>\n                    <Form.Item {...twoItemFormLayout} label={item.label}>\n                        {getFieldDecorator(item.key, {\n                            rules: [{required: item.required, message: '该值为必填项！'}],\n                        })(\n                            this.getInputItem(item, disableInput)\n                        )}\n                    </Form.Item>\n                </Col>\n            )\n        });\n        result.push(formItem);\n        formContent = (\n            <div>\n                <Divider orientation=\"left\" style={{ marginTop: '0px', color: 'rgb(255, 80, 23)'}}>基本信息</Divider>\n                <Row gutter={12}>{result}</Row>\n            </div>\n        );\n        return formContent;\n    }\n\n\n    render() {\n        const formItemLayout = {\n            labelCol: {span: 7},\n            wrapperCol: {span: 14},\n        };\n        return (\n            <Modal\n                visible={this.props.visible}\n                destroyOnClose={true}\n                title=\"完善资源信息\"\n                onOk={this.handleOk}\n                onCancel={this.handleCancel}\n                centered={true}\n                width={700}\n            >\n                <Form {...formItemLayout}>\n                    {this.generateBaseInfoForm()}\n                </Form>\n            </Modal>\n        )\n    }\n\n}\n\nExtraInfoModal = Form.create({ name: 'ExtraInfoModal' })(ExtraInfoModal);\n\nexport default ExtraInfoModal;","import React from 'react';\n\nconst WindowsSvg = () => (\n    <svg width=\"15px\" height=\"15px\" t=\"1562667653974\" className=\"icon\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"\n         p-id=\"2507\">\n        <path d=\"M486.4 134.4L960 64v422.4H486.4V134.4z\" fill=\"#90C300\" p-id=\"2508\"></path>\n        <path d=\"M64 198.4l358.4-51.2v345.6H64V198.4z\" fill=\"#F8672C\" p-id=\"2509\"></path>\n        <path d=\"M486.4 889.6L960 960V550.4H486.4v339.2z\" fill=\"#FFC400\" p-id=\"2510\"></path>\n        <path d=\"M64 825.6l358.4 51.2V550.4H64v275.2z\" fill=\"#00B4F2\" p-id=\"2511\"></path>\n    </svg>\n);\n\nconst LinuxSvg = () => (\n    <svg t=\"1562667694279\" className=\"icon\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"\n         p-id=\"3672\" width=\"15px\" height=\"15px\">\n        <path\n            d=\"M839.73005 769.44c9.3-20 13.6-48 13.6-86.78 0-138.52-63.82-218.44-115.08-282.66-31.04-38.9-55.58-69.62-55.58-101.34v-10c0.32-58.88 1.02-181.48-64-246.94C591.05005 14 555.19005 0 511.99005 0c-89.62 0-149.32 43.54-149.32 256 0 58.48-24.62 106.38-50.66 157.08-11.4 22.24-23.22 45.24-33.12 69.54C259.19005 531.08 213.33005 649.68 213.33005 704a21.4 21.4 0 0 0 2.44 10l151 288a21.4 21.4 0 0 0 16.38 11.1 21.4 21.4 0 0 0 18.64-7.06c9.48-10.56 72.32-24.56 110.2-24.56h144.74a21.4 21.4 0 0 0 14.88-6l175.26-170.68a21.34 21.34 0 0 0-7.14-35.18z\"\n            fill=\"#1A1A1A\" p-id=\"3673\"></path>\n        <path\n            d=\"M688.19005 717.3c-0.52-103.88-14.64-220.72-96.72-388.52C550.85005 356.26 476.29005 378 467.33005 378c-16.16 0-51.42-11.54-77.34-34.4-10.64 31.42-25.38 60.52-40 89-11 21.4-22.36 43.54-31.54 66.12C292.65005 562 263.19005 645.46 257.33005 689.78c18 12 30.64 38 44.54 67.14 14.4 30.12 30.7 64.26 51.72 78.92 38.48 26.78 58.42 64.98 63.64 99.68 14.64 1.46 33.1 2.72 54 2.72 52 0 122.6-10.56 174.82-42.24 2.9-56.44 12.82-146.96 42.14-178.7z\"\n            fill=\"#FFFFFF\" p-id=\"3674\"></path>\n        <path\n            d=\"M892.85005 813.84c-8.84-5.8-18-11.8-24.44-18.26-3.76-3.76-2-21.2-1.12-30.58 1.76-18 3.6-36.58-8.5-50-4.56-5.04-12.94-11.06-26.8-11.06-11.4 0-19.74 9.04-20.24 20.44 0 0.3 0.12 0.58 0.12 0.9H725.33005A21.32 21.32 0 0 0 703.99005 704c-63.26 0-64 232.32-64.24 237.4-1.2 12.72-4 42.58 15.12 63.54 11.52 12.64 28 19.06 49.12 19.06 55.38 0 82.24-28.54 108.2-56.12 4.36-4.68 8.84-9.42 13.56-14.12 10.8-10.82 32-18.54 50.62-25.34 30.62-11.2 62.3-22.76 62.3-53.76s-25.34-47.44-45.82-60.82zM353.51005 835.84c-21.02-14.66-37.32-48.8-51.72-78.92-19.04-39.84-35.5-74.26-67.12-74.26-40 0-48.66 35.88-53.32 55.16-1.3 5.3-3.24 13.3-3.44 14.24-3.16 2-15.08 4.32-22.96 5.88C128.91005 763.1 85.33005 771.72 85.33005 810.66a162.48 162.48 0 0 0 3.54 30.98C92.17005 859.4 95.33005 876.14 86.01005 912a20.8 20.8 0 0 0-0.68 5.34c0 51.28 79.66 58 127.28 61.88 8 0.68 14.5 1.18 18.72 1.84 6.56 1.04 20.32 7.38 33.6 13.5C293.33005 1007.68 328.77005 1024 362.67005 1024c24.36 0 43.86-15.76 52.16-42.12 12.9-41.1-4.18-106.28-61.32-146.04z\"\n            fill=\"#FDB515\" p-id=\"3675\"></path>\n        <path\n            d=\"M831.99005 661.34a20.64 20.64 0 0 0-10.92 3.44l-142.46-233.1a1140 1140 0 0 0-62.32-142.78 21.32 21.32 0 1 0-38 19.54c96.32 187.16 104.3 304 104.34 415.7-0.26 4.48-1.78 44.44 21.2 68.76a57.3 57.3 0 0 0 42.76 17.76h14.78c21.7 0 45.16-1.66 63.5-19.86 19.72-19.36 28.46-52.8 28.46-108.14a21.32 21.32 0 0 0-21.34-21.32z\"\n            fill=\"#1A1A1A\" p-id=\"3676\"></path>\n        <path\n            d=\"M554.67005 129.78c-24.74 0-42.68 26.54-42.68 63.12s18 63.1 42.68 63.1S597.33005 229.46 597.33005 192.9s-18-63.12-42.66-63.12z\"\n            fill=\"#FFFFFF\" p-id=\"3677\"></path>\n        <path d=\"M535.31005 208.56a37.9 19.36 90 1 0 38.72 0 37.9 19.36 90 1 0-38.72 0Z\" p-id=\"3678\"></path>\n        <path\n            d=\"M426.67005 129.78c-24.74 0-42.68 26.54-42.68 63.12s18 63.1 42.68 63.1S469.33005 229.46 469.33005 192.9s-18-63.12-42.66-63.12z\"\n            fill=\"#FFFFFF\" p-id=\"3679\"></path>\n        <path d=\"M407.71005 207.82a37.14 18.96 90 1 0 37.92 0 37.14 18.96 90 1 0-37.92 0Z\" p-id=\"3680\"></path>\n        <path\n            d=\"M494.85005 213.76a21.16 21.16 0 0 0-4.18-0.42c-45.88 0-128 43.02-128 85.32 0 40 80.68 85.34 106.66 85.34 12.6 0 149.34-47.48 149.34-85.34 0-55.8-94.78-79.1-123.82-84.9z\"\n            fill=\"#FDB515\" p-id=\"3681\"></path>\n    </svg>\n);\n\nconst StatusDoneSvg = () => (\n    <svg t=\"1570523496603\" className=\"icon\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"\n         p-id=\"1158\" width=\"20\" height=\"20\">\n        <path\n            d=\"M512 34.133333a486.4 486.4 0 1 0 486.4 486.4A486.4 486.4 0 0 0 512 34.133333z m288.580267 332.552534l-324.266667 347.426133a45.866667 45.866667 0 0 1-64.9216 2.6112 20.334933 20.334933 0 0 1-1.518933-1.518933l-185.258667-185.233067a46.344533 46.344533 0 0 1 65.3568-65.3568l152.541867 151.3472 290.423466-312.2432a46.293333 46.293333 0 1 1 71.68 58.632533 37.0944 37.0944 0 0 1-4.0192 4.343467z m0 0\"\n            p-id=\"1159\" fill=\"#1296db\"></path>\n    </svg>\n);\n\nconst StatusProgressSvg = () => (\n    <svg t=\"1570523553927\" className=\"icon\" viewBox=\"0 0 1160 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"\n         p-id=\"1721\" width=\"20\" height=\"20\">\n        <path\n            d=\"M610.84444476 70.65600031a454.39999969 454.39999969 0 1 1-0.70400062 908.79999938c-140.60800031-3.19999969-261.76000031-62.91199969-361.59999938-177.66399938a31.99999969 31.99999969 0 0 1 48.25599938-41.98400062c88.32 101.50399969 192.64000031 152.89600031 314.04800062 155.64800062a390.40000031 390.40000031 0 1 0-388.992-423.80800031l73.344-73.27999969a31.99999969 31.99999969 0 0 1 48.89599969 40.83199969l-3.648 4.48000031L231.83644476 572.16000031a31.99999969 31.99999969 0 0 1-40.83200062 3.71199938l-4.47999938-3.71199938-108.60800062-108.60800062a31.99999969 31.99999969 0 0 1 40.83200062-48.96l4.47999938 3.71200031 38.33600062 38.4A454.52800031 454.52800031 0 0 1 610.84444476 70.65600031z m0 224.19199969a31.99999969 31.99999969 0 0 1 31.99999969 31.99999969v178.81600031l162.36799969 156.35200031a31.99999969 31.99999969 0 0 1-44.41599938 46.08l-172.16000062-165.76000031a31.99999969 31.99999969 0 0 1-9.792-23.04V326.78400031a31.99999969 31.99999969 0 0 1 32.00000062-32.00000062z\"\n            fill=\"#d81e06\" p-id=\"1722\"></path>\n    </svg>\n);\n\nconst FeedbackIconSvg = () => (\n    <svg t=\"1563505298187\" className=\"icon\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"\n         p-id=\"1259\" width=\"30\" height=\"30\">\n        <path\n            d=\"M891.948987 415.265842c-1.179872-10.754948-10.288321-19.125593-21.357424-19.125593-11.06808 0-20.176528 8.370645-21.355377 19.125593l-0.138146 0 0 373.048321c0 34.241872-27.854395 62.09422-62.09422 62.09422l-551.684838 0c-34.237779 0-62.09422-27.852348-62.09422-62.09422L173.224762 232.148267c0-34.238802 27.856441-62.09422 62.09422-62.09422l370.370329 0 0-0.030699c11.596106-0.314155 20.907169-9.790994 20.907169-21.463848 0-11.672854-9.311063-21.149693-20.907169-21.463848l0-0.030699L235.318982 127.064954c-57.942667 0-105.08229 47.139623-105.08229 105.08229l0 556.165896c0 57.942667 47.139623 105.081267 105.08229 105.081267l551.684838 0c57.942667 0 105.081267-47.1386 105.081267-105.081267L892.085086 415.265842 891.948987 415.265842z\"\n            p-id=\"1260\" fill=\"#e6e6e6\"></path>\n        <path\n            d=\"M338.386382 640.382972l-0.098237 0.401136c-1.759063 7.462972-3.27458 21.424962 6.352685 31.04711 5.969968 5.980201 13.610996 7.66354 20.327978 7.66354 4.100388 0 7.860015-0.629333 10.686387-1.292436l117.404943-31.000038 374.183168-374.183168c13.081946-13.080923 20.286022-30.473035 20.286022-48.972365s-7.204076-35.892465-20.286022-48.972365l-25.894763-25.895787c-27.006074-27.003004-70.942749-27.009144-97.948823-0.001023L369.180735 523.397584 338.386382 640.382972zM403.702993 558.714951l54.066383 54.061266-72.705905 18.640546L403.702993 558.714951zM429.577291 523.793604l292.435329-292.433282 63.047941 63.047941L492.627279 586.842569 429.577291 523.793604zM810.950208 179.574888l25.895787 25.895787c10.243295 10.243295 10.243295 26.90886 0 37.153178l-21.389146 21.388123-63.044872-63.047941 21.386076-21.388123C784.043395 169.328523 800.711006 169.335686 810.950208 179.574888z\"\n            p-id=\"1261\" fill=\"#e6e6e6\"></path>\n    </svg>\n);\n\nconst K8sContainerIconSvg = () => (\n    <svg t=\"1569723850164\" className=\"icon\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"\n         p-id=\"657\" width=\"30\" height=\"30\">\n        <path\n            d=\"M205.653333 737.066667c-29.184 0-55.637333-23.893333-55.637333-52.906667s23.893333-53.034667 55.68-53.034667c31.914667 0 55.893333 23.893333 55.893333 52.992s-26.538667 52.906667-55.68 52.906667z m683.178667-288.554667c-5.76-42.325333-32-76.8-66.56-103.253333l-13.44-10.666667-10.837333 13.226667c-21.077333 23.893333-29.44 66.261333-26.88 97.92 2.56 23.978667 10.24 47.786667 23.637333 66.304-10.837333 5.546667-24.234667 10.666667-34.56 16.085333a225.706667 225.706667 0 0 1-71.68 10.666667H4.138667l-2.56 15.786666a297.813333 297.813333 0 0 0 23.978666 151.04l10.410667 18.56v2.56c64 105.941333 177.92 153.6 301.994667 153.6 238.677333 0 434.432-103.253333 527.232-325.674666 60.8 2.645333 122.197333-13.226667 151.04-71.509334l7.68-13.226666-12.8-7.978667c-34.56-21.077333-81.92-23.893333-121.6-13.226667l-0.768 0.085334z m-341.674667-42.325333h-103.594666v103.253333h103.68V406.101333l-0.085334 0.128z m0-129.834667h-103.594666v103.253333h103.68V276.48l-0.085334-0.128z m0-132.437333h-103.594666v103.253333h103.68v-103.253333h-0.085334z m126.72 262.272H570.88v103.253333h103.253333V406.101333l-0.298666 0.128z m-383.914666 0H187.008v103.253333h103.338667V406.101333l-0.426667 0.128z m129.28 0h-102.4v103.253333H419.84V406.101333l-0.64 0.128z m-257.28 0H59.733333v103.253333h103.594667V406.101333l-1.28 0.128z m257.28-129.834667h-102.4v103.253333H419.84V276.48l-0.64-0.128z m-129.92 0H187.178667v103.253333H290.133333V276.48l-0.682666-0.128z\"\n            fill=\"#1296db\" p-id=\"658\"></path>\n    </svg>\n);\n\n\nexport {WindowsSvg, LinuxSvg, StatusDoneSvg, StatusProgressSvg, FeedbackIconSvg, K8sContainerIconSvg}","import React, {Component} from 'react';\nimport {\n    Button,\n    Col,\n    DatePicker, Descriptions, Divider,\n    Drawer, Form, Typography,\n    Input, InputNumber,\n    Layout, message, Modal,\n    Radio,\n    Row,\n    Select,\n    Spin, Table,\n    Tabs, Popconfirm, Badge, Tooltip\n} from 'antd';\nimport OpsBreadcrumbPath from \"../breadcrumb_path\";\nimport echarts from 'echarts/lib/echarts';\nimport 'echarts/lib/chart/line';\nimport 'echarts/lib/component/tooltip';\nimport 'echarts/lib/component/toolbox';\nimport moment from 'moment';\nimport \"../../assets/css/main.css\";\nimport {\n    deleteCloudServer,\n    getCloudAccouts,\n    getCloudMonitorEcs,\n    getCloudServerDetail,\n    getCloudServers,\n    postCloudServer, putCloudServer\n} from \"../../api/cloud\";\nimport 'moment/locale/zh-cn';\nimport ExtraInfoModal from \"./common/extra_info_modal\";\nimport {LinuxSvg, WindowsSvg} from \"../../assets/Icons\";\nmoment.locale('zh-cn');\n\nconst TabPane = Tabs.TabPane;\nconst { Text, Paragraph } = Typography;\nconst Option = Select.Option;\nconst { Content } = Layout;\n\n\nclass ServerInfoModal extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            cloudAccountList: []\n        }\n    }\n\n    componentDidMount() {\n        let that = this;\n        getCloudAccouts(1, 100).then((res)=>{\n            if(res.code===0){\n                that.setState({\n                    cloudAccountList: res.data.accounts,\n                })\n            } else {\n                message.error(res.msg);\n            }\n        }).catch((err)=>{\n            message.error(err.toLocaleString());\n        })\n    }\n\n    render() {\n        const { getFieldDecorator } = this.props.form;\n        const formItemLayout = {\n            labelCol: { span: 7 },\n            wrapperCol: { span: 14 },\n        };\n        let accountOptions;\n        accountOptions = this.state.cloudAccountList.map((item)=>{\n            return (\n                <Option key={item.id} value={item.id}>{item.accountName}</Option>\n            );\n        });\n\n        return (\n            <Modal\n                title=\"服务器信息\"\n                destroyOnClose={true}\n                visible={this.props.server_info_modal_visible}\n                onOk={this.props.handlePostServerInfoSubmit}\n                onCancel={this.props.handlePostServerInfoCancel}\n                okText=\"确认\"\n                cancelText=\"取消\"\n                centered={true}\n                width={600}\n            >\n                <Form>\n                    <Form.Item label=\"云账号\" {...formItemLayout}>\n                        {getFieldDecorator('cloudAccountId', {\n                            rules: [{ required: true, message: '云账号不能为空！' }],\n                        })(\n                            <Select>\n                                {accountOptions}\n                            </Select>\n                        )}\n                    </Form.Item>\n                    <Form.Item label=\"主机名\" {...formItemLayout}>\n                        {getFieldDecorator('hostName', {\n                            rules: [{ }],\n                        })(\n                            <Input />\n                        )}\n                    </Form.Item>\n                    <Form.Item label=\"实例Id\" {...formItemLayout}>\n                        {getFieldDecorator('instanceId', {\n                            rules: [{ }],\n                        })(\n                            <Input />\n                        )}\n                    </Form.Item>\n                    <Form.Item label=\"实例名称\" {...formItemLayout}>\n                        {getFieldDecorator('instanceName', {\n                            rules: [{ required: true, message: '实例名称不能为空！' }],\n                        })(\n                            <Input />\n                        )}\n                    </Form.Item>\n                    <Form.Item label=\"实例描述\" {...formItemLayout}>\n                        {getFieldDecorator('description', {\n                            rules: [{ }],\n                        })(\n                            <Input />\n                        )}\n                    </Form.Item>\n                    <Form.Item label=\"内网IP\" {...formItemLayout}>\n                        {getFieldDecorator('innerIpAddress', {\n                            rules: [{ }],\n                        })(\n                            <Input />\n                        )}\n                    </Form.Item>\n                    <Form.Item label=\"外网IP\" {...formItemLayout}>\n                        {getFieldDecorator('publicIpAddress', {\n                            rules: [{ }],\n                        })(\n                            <Input />\n                        )}\n                    </Form.Item>\n                    <Form.Item label=\"系统类型\" {...formItemLayout}>\n                        {getFieldDecorator('osType', {\n                            initialValue: \"linux\",\n                            rules: [{ required: true, message: '系统类型不能为空！' }],\n                        })(\n                            <Select>\n                                <Option value=\"linux\">Linux</Option>\n                                <Option value=\"windows\">Windows</Option>\n                            </Select>\n                        )}\n                    </Form.Item>\n                    <Form.Item label=\"CPU核数(个)\" {...formItemLayout}>\n                        {getFieldDecorator('cpu', {\n                            rules: [{ type: \"integer\", required: true, message: '请输入数值型数据！' }],\n                        })(\n                            <InputNumber />\n                        )}\n                    </Form.Item>\n                    <Form.Item label=\"内存(G)\" {...formItemLayout}>\n                        {getFieldDecorator('memory', {\n                            rules: [{ type: \"integer\", required: true, message: '请输入数值型数据！' }],\n                        })(\n                            <InputNumber />\n                        )}\n                    </Form.Item>\n                    <Form.Item label=\"磁盘(G)\" {...formItemLayout}>\n                        {getFieldDecorator('disk', {\n                            rules: [{ type: \"integer\" }],\n                        })(\n                            <InputNumber />\n                        )}\n                    </Form.Item>\n                    <Form.Item label=\"创建时间\" {...formItemLayout}>\n                        {getFieldDecorator('createTime', {\n                            rules: [{ required: true, message: '创建时间不能为空！' }],\n                        })(\n                            <DatePicker format=\"YYYY-MM-DD\" />\n                        )}\n                    </Form.Item>\n                    <Form.Item label=\"过期时间\" {...formItemLayout}>\n                        {getFieldDecorator('expiredTime', {\n                        })(\n                            <DatePicker format=\"YYYY-MM-DD\" />\n                        )}\n                    </Form.Item>\n                </Form>\n            </Modal>\n        )\n    }\n}\n\nServerInfoModal = Form.create({ name: 'ServerInfoModal' })(ServerInfoModal);\n\nclass ServerContent extends Component {\n\n    constructor(props) {\n        super(props);\n        this.handlePostServerInfoSubmit = this.handlePostServerInfoSubmit.bind(this);\n        this.handlePostServerInfoCancel = this.handlePostServerInfoCancel.bind(this);\n        this.handleExtraInfoOk = this.handleExtraInfoOk.bind(this);\n        this.handleExtraInfoCancel = this.handleExtraInfoCancel.bind(this);\n        this.onShowSizeChange = this.onShowSizeChange.bind(this);\n        let operWidth = this.props.isSuperAdmin ? 220 : 100;\n        this.state = {\n            columns: [\n                {\n                    title: 'Id', dataIndex: 'ID', key: 'ID', className: 'small_font',\n                    render: value => {\n                        return (\n                            <Text ellipsis={true}>{value}</Text>\n                        )\n                    }\n                },\n                {\n                    title: '实例id', width: 230, dataIndex: 'InstanceId', key: 'InstanceId', className: 'small_font',\n                },\n                {\n                    title: '实例名称', dataIndex: 'InstanceName', key: 'InstanceName', className: 'small_font',\n                    width: 200,\n                    textWrap: 'word-break',\n                    render: value => {\n                        return (\n                            <Tooltip title={value}>\n                                <Text ellipsis={true} style={{ width: '200px' }}>{value}</Text>\n                            </Tooltip>\n                        )\n                    }\n                },\n                {\n                    title: 'ip', dataIndex: 'ip', key: 'ip', className: 'small_font',\n                    render: (value, record) => {\n                        let innerContent = \"\";\n                        let privateContent = \"\";\n                        let publicContent = \"\";\n                        if(record.InnerIpAddress){\n                            innerContent = (<div>\n                                <Paragraph style={{marginBottom: 0, display:'inline'}} copyable={record.InnerIpAddress!==\"\"}>{record.InnerIpAddress}</Paragraph>(内网)\n                            </div>)\n                        }\n                        if(record.PrivateIpAddress){\n                            privateContent = (<div>\n                                <Paragraph style={{marginBottom: 0, display:'inline'}} copyable={record.PrivateIpAddress!==\"\"}>{record.PrivateIpAddress}</Paragraph>(私有)\n                            </div>)\n                        }\n                        if(record.PublicIpAddress){\n                            publicContent = (<div>\n                                <Paragraph style={{marginBottom: 0, display:'inline'}} copyable={record.PublicIpAddress!==\"\"}>{record.PublicIpAddress}</Paragraph>(外网)\n                            </div>)\n                        }\n                        return (\n                            <div className=\"ip_column\">\n                                { innerContent }\n                                { privateContent }\n                                { publicContent }\n                            </div>\n                        );\n                    }\n                },\n                {\n                    title: '配置', dataIndex: '配置', key: '配置', className: 'small_font',\n                    render:  (value, record) => {\n                        let cpuContent = <Paragraph style={{marginBottom: 0, display: 'inline'}}>{record.Cpu}核</Paragraph>;\n                        let memoryContent = <Paragraph style={{marginBottom: 0, display: 'inline'}}>{record.Memory}G</Paragraph>;\n                        let trafficType = \"\";\n                        if(record.InternetChargeType===\"PayByTraffic\"){\n                            trafficType = \"流量\"\n                        }\n                        if(record.InternetChargeType===\"PayByBandwidth\"){\n                            trafficType = \"带宽\"\n                        }\n                        let trafficOutContent = (<div>\n                                            <Paragraph style={{marginBottom: 0, display: 'inline'}}>{record.InternetMaxBandwidthOut}Mbps({trafficType})</Paragraph>\n                                    </div>);\n                        return (\n                            <div className=\"ip_column\">\n                                { cpuContent } &nbsp;\n                                { memoryContent }\n                                { trafficOutContent }\n                            </div>\n                        );\n                    }\n                },\n                {\n                    title: '系统类型', dataIndex: 'OSType', key: 'OSType', align: 'center', className: 'small_font',\n                    render: (value, record) => {\n                        let status = \"error\";\n                        if(record.Status===\"Running\") {\n                            status = \"processing\";\n                        }\n                        if(value===\"windows\"){\n                            return (\n                                <div>\n                                    <WindowsSvg/>\n                                    <Badge status={status} style={{  marginLeft: '5px', position: 'relative', top: '-10px' }}/>\n                                </div>\n                            )\n                        } else if(value===\"linux\"){\n                            return (\n                                <div>\n                                    <LinuxSvg/>\n                                    <Badge status={status} style={{ marginLeft: '5px', position: 'relative', top: '-10px' }} />\n                                </div>\n                            )\n                        } else {\n                            return <Text ellipsis={true}>{value}</Text>\n                        }\n                    }\n                },\n                {\n                    title: '区域', dataIndex: 'ZoneId', key: 'ZoneId', className: 'small_font',\n                    render: value => {\n                        return (\n                            <Text ellipsis={true}>{value}</Text>\n                        )\n                    }\n                },\n                {\n                    title: '过期时间', dataIndex: 'ExpiredTime', key: 'ExpiredTime', className: 'small_font',\n                    render: value => {\n                        return (\n                            <Text ellipsis={true}>{value}</Text>\n                        )\n                    }\n                },\n                {\n                    title: '操作',\n                    key: 'operation',\n                    fixed: 'right',\n                    width: {operWidth},\n                    align: 'center',\n                    className: 'small_font action_column',\n                    render: (text, record) => {\n                        return (\n                            <div>\n                                <Button type=\"primary\" size=\"small\" onClick={this.openMonitorDrawer.bind(this, record)}>监控</Button>\n                                <Divider type=\"vertical\" />\n                                <Button type=\"info\" size=\"small\" onClick={this.serverEdit.bind(this, record)}>编辑</Button>\n                                <Divider type=\"vertical\" />\n                                <Popconfirm\n                                    title=\"确定删除该项内容?\"\n                                    onConfirm={this.serverDelete.bind(this, record)}\n                                    okText=\"确认\"\n                                    cancelText=\"取消\"\n                                >\n                                    <Button type=\"danger\" size=\"small\">删除</Button>\n                                </Popconfirm>\n                            </div>\n                        )\n                    },\n                },\n            ],\n            tableLoading: false,\n            webSocketReady: false,\n            tableData: [],\n            chartXData: [],\n            chartYData: [],\n            pagination: {\n                showSizeChanger: true,\n                pageSizeOptions: ['10', '20', '30', '100'],\n                onShowSizeChange: this.onShowSizeChange,\n                showQuickJumper: false,\n                showTotal: (total) => `共 ${total} 条`,\n                pageSize: 10,\n                page: 1,\n                total: 0,\n                onChange: (current) => this.changePage(current),\n            },\n            drawerVisible: false,\n            drawerPlacement: 'left',\n            instanceId: \"\",\n            timeTagValue: '1h',\n            metricTagValue: 'CPUUtilization',\n            chartFormat: '%',\n            currentServerDetail: {},\n            msgContent: \"\",\n            server_info_modal_visible: false,\n            queryExpiredTime: null,\n            queryKeyword: \"\",\n            queryCloudAccount: \"0\",\n            queryManageUser: \"0\",\n            queryDefineGroup: \"\",\n            cloudAccountList: [],\n            selectedRowKeys: [],\n            idsList: [],\n            updateMode: \"single\",\n        }\n    }\n\n    onShowSizeChange(current, size){\n        this.setState({\n            pagination: {\n                ...this.state.pagination,\n                page: 1,\n                current: 1,\n                pageSize: size,\n            }\n        }, ()=>{\n            this.refreshTableData();\n        });\n    }\n\n    componentDidMount() {\n        this.refreshTableData();\n        this.loadCloudAccountsData();\n    };\n\n    loadCloudAccountsData() {\n        let that = this;\n        getCloudAccouts(1, 100).then((res)=>{\n            if(res.code===0){\n                that.setState({\n                    cloudAccountList: res.data.accounts,\n                })\n            } else {\n                message.error(res.msg);\n            }\n        }).catch((err)=>{\n            message.error(err.toLocaleString());\n        })\n    }\n\n    serverEdit(data) {\n        this.setState({\n            extraInfoModalVisible: true,\n            ecsId: data.ID,\n            updateMode: \"single\",\n            resFrom: data['DataStatus']===1 ? \"阿里云\" : \"手动添加\"\n        }, ()=>{\n            getCloudServerDetail(data.ID).then((res)=>{\n                if(res['code'] !== 0){\n                    message.error(res['msg']);\n                } else {\n                    this.extraInfoFormRef.props.form.setFieldsValue({\n                        instanceId: res.data['InstanceId'],\n                        innerIpAddress: res.data['InnerIpAddress'],\n                        publicIpAddress: res.data['PublicIpAddress'],\n                        privateIpAddress: res.data['PrivateIpAddress'],\n                        instanceName: res.data['InstanceName'],\n                        cpu: res.data['Cpu'],\n                        memory: (res.data['Memory']/1024).toString(),\n                        expiredTime: res.data['ExpiredTime'] !== \"\" ? moment(res.data['ExpiredTime']) : \"\",\n                        resForm: res.data['DataStatus']===1 ? \"阿里云\" : \"手动添加\",\n                    });\n                }\n            }).catch((err)=>{\n                message.error(err.toLocaleString());\n            });\n        });\n    }\n\n    handleExtraInfoOk(data) {\n        let targetId = \"\";\n        if(this.state.updateMode===\"single\"){\n            targetId = String(this.state.ecsId);\n        } else {\n            targetId = this.state.idsList.join(\",\");\n        }\n        putCloudServer({\n            ...data,\n            id: targetId,\n        }).then((res)=>{\n            if(res.code===0){\n                message.success(\"修改成功\");\n                this.setState({extraInfoModalVisible: false, selectedRowKeys: []});\n                this.refreshTableData();\n            } else {\n                message.error(res.msg);\n            }\n        }).catch((err)=>{\n            message.error(err.toLocaleString());\n        });\n    }\n\n    handleExtraInfoCancel(data) {\n        this.setState({extraInfoModalVisible: false});\n    }\n\n    serverDelete(data) {\n        deleteCloudServer(data.ID).then((res)=>{\n            if(res.code===0){\n                message.success(\"删除成功\");\n                this.refreshTableData();\n            } else {\n                message.error(res.msg);\n            }\n        }).catch((err)=>{\n            message.error(err.toLocaleString());\n        })\n    }\n\n    refreshTableData = () => {\n        this.setState({tableLoading: true});\n        const queryParams = {\n            \"page\": this.state.pagination.page,\n            \"size\": this.state.pagination.pageSize,\n            \"queryExpiredTime\": this.state.queryExpiredTime === null ? null : this.state.queryExpiredTime.format('YYYY-MM-DD HH:mm:ss'),\n            \"queryKeyword\": this.state.queryKeyword,\n            \"queryCloudAccount\": this.state.queryCloudAccount,\n        };\n        getCloudServers(queryParams).then((res)=>{\n            const pagination = this.state.pagination;\n            pagination.total = parseInt(res.data.total);\n            pagination.page = parseInt(res.data.page);\n            pagination.showTotal(parseInt(res.data.total));\n            this.setState({\n                pagination: {...pagination}\n            });\n            let data = res['data']['servers'];\n            let tableData = [];\n            for (let i = 0; i < data.length; i++) {\n                tableData.push({\n                    key: data[i]['ID'],\n                    ID: data[i]['ID'],\n                    Memory: data[i]['Memory']/1024,\n                    Cpu: data[i]['Cpu'],\n                    HostName: data[i]['HostName'],\n                    InstanceId: data[i]['InstanceId'],\n                    InnerIpAddress: data[i]['InnerIpAddress'],\n                    PublicIpAddress: data[i]['PublicIpAddress'],\n                    PrivateIpAddress: data[i]['PrivateIpAddress'],\n                    InternetMaxBandwidthIn: data[i]['InternetMaxBandwidthIn'],\n                    InternetMaxBandwidthOut: data[i]['InternetMaxBandwidthOut'],\n                    InternetChargeType: data[i]['InternetChargeType'],\n                    InstanceName: data[i]['InstanceName'],\n                    OSType: data[i]['OSType'],\n                    ZoneId: data[i]['ZoneId'],\n                    OSName: data[i]['OSName'],\n                    ExpiredTime:  moment(data[i]['ExpiredTime']).format('YYYY-MM-DD'),\n                    Status: data[i]['Status'],\n                    CloudAccountName: data[i]['CloudAccountName'],\n                    DataStatus: data[i]['DataStatus'],\n                });\n            }\n            this.setState({tableData: tableData, tableLoading: false});\n        }).catch((err)=>{\n            message.error(err)\n        });\n    };\n\n    showChart = () => {\n        let myChart = echarts.init(document.getElementById('ecsMonitorChart'));\n        let option = {\n            tooltip : {\n                trigger: 'axis',\n                axisPointer: {\n                    label: {\n                        backgroundColor: '#623485'\n                    }\n                }\n            },\n            xAxis : [\n                {\n                    type : 'category',\n                    boundaryGap : false,\n                    data : this.state.chartXData\n                }\n            ],\n            yAxis : [\n                {\n                    type : 'value',\n                    axisLabel:{\n                        margin: 7,\n                        formatter: '{value} '+ this.state.chartFormat,\n                        textStyle:{\n                            color: '#999',\n                            fontSize: '12px'\n                        },\n                    },\n                }\n            ],\n            series : [\n                {\n                    type:'line',\n                    itemStyle : {\n                        normal : {\n                            color:'rgba(43, 182, 243, 0.65)',\n                            lineStyle: {\n                                color: \"rgba(43, 182, 243, 0.65)\",\n                                shadowColor: \"rgba(43, 182, 243, 0.65)\",\n                                shadowBlur: 10,\n                            },\n                            areaStyle: {\n                                color: \"rgba(43, 182, 243, 0.65)\",\n                                shadowColor: \"rgba(43, 182, 243, 0.65)\",\n                                shadowBlur: 10,\n                            },\n                        }\n                    },\n                    data: this.state.chartYData\n                }\n            ]\n        };\n        myChart.setOption(option);\n    };\n\n    openMonitorDrawer = (data) => {\n        this.setState({ drawerVisible: true, instanceId: data.InstanceId, currentServerDetail: data },\n            ()=>{\n                this.refreshMonitorData(data.InstanceId, this.state.timeTagValue, this.state.metricTagValue);\n                this.refreshSeverDetail();\n        });\n    };\n\n    refreshMonitorData = (instanceId, timeTagValue, metricTagValue) => {\n        this.setState({chartLoading: true});\n        getCloudMonitorEcs(instanceId, timeTagValue, metricTagValue).then((res)=>{\n            if(res['code'] !== 0){\n                message.error(res['msg']);\n                this.setState({chartLoading: false});\n                return;\n            }\n            if(res['data']['Datapoints']===\"\"){\n                message.warn(\"未获取到监控数据，可能是非阿里云机器或其它原因！\");\n                this.setState({chartLoading: false});\n                return;\n            }\n            let dataPoints = JSON.parse(res['data']['Datapoints']);\n            let chartXData = [];\n            let chartYData = [];\n            for(let i=0; i<dataPoints.length; i++){\n                chartXData.push(moment(dataPoints[i]['timestamp']).format(\"DD日HH:mm\"));\n                chartYData.push(dataPoints[i]['Average']);\n            }\n            this.setState({chartXData: chartXData, chartYData: chartYData}, ()=>{\n                this.setState({chartLoading: false});\n                this.showChart();\n            });\n        }).catch((err)=>{\n            message.error(err.toLocaleString());\n        });\n    };\n\n    // 获取服务器的详细信息\n    refreshSeverDetail = (e) => {\n        this.setState({serverDetailLoading: true});\n        getCloudServerDetail(this.state.currentServerDetail.ID).then((res)=>{\n            if(res['code'] !== 0){\n                message.error(res['msg']);\n            }\n            this.setState({currentServerDetail: res['data']}, ()=> {\n                this.setState({serverDetailLoading: false});\n            });\n        }).catch((err)=>{\n            message.error(err.toLocaleString());\n        });\n    };\n\n    changePage = (e) => {\n        this.setState({\n            pagination: {\n                ...this.state.pagination,\n                page: e,\n                current: e\n            }\n        }, ()=>{\n            this.refreshTableData();\n        });\n    };\n\n    onCloseDrawer = () => {\n        this.setState({ drawerVisible: false })\n    };\n\n    handleTimeTagChange = (e) => {\n        this.setState({ timeTagValue: e.target.value });\n        this.refreshMonitorData(this.state.instanceId, e.target.value, this.state.metricTagValue);\n    };\n\n    handleMetricTagChange = (e) => {\n        this.setState({ metricTagValue: e.target.value });\n        switch (e.target.value) {\n            case \"CPUUtilization\":\n                this.setState({chartFormat: \"%\"});\n                break;\n            case \"memory_usedutilization\":\n                this.setState({chartFormat: \"%\"});\n                break;\n            case \"diskusage_utilization\":\n                this.setState({chartFormat: \"%\"});\n                break;\n            case \"cpu_total\":\n                this.setState({chartFormat: \"%\"});\n                break;\n            default:\n                this.setState({chartFormat: \"\"});\n                break;\n        }\n        this.refreshMonitorData(this.state.instanceId, this.state.timeTagValue, e.target.value);\n    };\n\n    onExpiredDateChange = (moment) => {\n        if(moment == null) {\n            this.setState({queryExpiredTime: null});\n        } else {\n            this.setState({queryExpiredTime: moment});\n        }\n    };\n\n    keywordOnChange = (e) => {\n        this.setState({queryKeyword: e.target.value});\n    };\n\n    handleCloudAccountChange = (queryCloudAccount) => {\n        this.setState({queryCloudAccount});\n    };\n\n    handleUserDefineGroupChange = (queryDefineGroup) => {\n        this.setState({queryDefineGroup});\n    };\n\n    handleManageUserChange = (queryManageUser) => {\n        this.setState({queryManageUser});\n    };\n\n    // 新增自定义机器信息\n    handleAdd = () => {\n        this.setState({server_info_modal_visible: true, ecsId: 0});\n    };\n\n    handlePostServerInfoSubmit() {\n        this.serverInfoFormRef.props.form.validateFields((err, values) => {\n            if (!err) {\n                postCloudServer({\n                    ...values,\n                    createTime: values.createTime.format('YYYY-MM-DD HH:mm:ss'),\n                    expiredTime: values.expiredTime === undefined ? undefined : values.expiredTime.format('YYYY-MM-DD HH:mm:ss'),\n                }).then((res)=>{\n                    if(res.code===0){\n                        message.success(\"添加成功，请到权限管理中增加访问权限！\");\n                        this.setState({server_info_modal_visible: false});\n                        this.refreshTableData();\n                    } else {\n                        message.error(res.msg);\n                    }\n                }).catch((err)=>{\n                    message.error(err.toLocaleString());\n                });\n            }\n        })\n    };\n\n    handlePostServerInfoCancel() {\n        this.setState({server_info_modal_visible: false});\n    };\n\n    // 用户自定义查询\n    handleQuery = () => {\n        this.setState({\n            pagination: {\n                ...this.state.pagination,\n                page: 1,\n                current: 1,\n            }\n        }, ()=>{\n            this.refreshTableData();\n        });\n    };\n\n    onSelectChange = selectedRowKeys => {\n        this.setState({ selectedRowKeys });\n    };\n\n    render() {\n        let accountOptions;\n        accountOptions = this.state.cloudAccountList.map((item)=>{\n            return (\n                <Option key={item.id} value={item.id}>{item.accountName}</Option>\n            );\n        });\n        const { selectedRowKeys } = this.state;\n        const rowSelection = {\n            selectedRowKeys,\n            onChange: this.onSelectChange,\n        };\n        return (\n              <Content\n                  style={{ background: '#fff', padding: \"5px 20px\", margin: 0, height: \"100%\" }}\n              >\n                  <OpsBreadcrumbPath pathData={[\"云资源\", \"云服务器\", \"服务器列表\"]} />\n\n                  <Row style={{ padding: \"0px 0px 10px 0px\" }}>\n                      <Col span={3} className=\"col-span\">\n                          <DatePicker style={{ width: \"100%\" }} defaultValue={this.state.queryExpiredTime} placeholder=\"到期截止时间\" onChange={this.onExpiredDateChange}/>\n                      </Col>\n                      <Col span={5} className=\"col-span\">\n                          <Input placeholder=\"输入实例id\\ip\\实例名称查询\" value={this.state.queryKeyword} onChange={this.keywordOnChange}/>\n                      </Col>\n                      <Col span={4} className=\"col-span\">\n                          <Select defaultValue={this.state.queryCloudAccount} style={{ width: \"100%\" }} onChange={this.handleCloudAccountChange}>\n                              <Option value=\"0\">所有云账号</Option>\n                              {accountOptions}\n                          </Select>\n                      </Col>\n                      <Col span={2} className=\"col-span\">\n                          <Button style={{ width: \"100%\" }} type=\"primary\" icon=\"search\" onClick={this.handleQuery}>查 询</Button>\n                      </Col>\n                      <Col span={2} className=\"col-span\">\n                          <Button style={{ width: \"100%\" }} icon=\"plus-circle\" onClick={this.handleAdd}>新 增</Button>\n                      </Col>\n                  </Row>\n\n                  <ServerInfoModal\n                      wrappedComponentRef={(form) => this.serverInfoFormRef = form}\n                      server_info_modal_visible={this.state.server_info_modal_visible}\n                      handlePostServerInfoSubmit={this.handlePostServerInfoSubmit}\n                      handlePostServerInfoCancel={this.handlePostServerInfoCancel}\n                  />\n\n                  {/*完善信息组件*/}\n                  <ExtraInfoModal\n                      wrappedComponentRef={(form) => this.extraInfoFormRef = form}\n                      resType=\"ecs\"\n                      updateMode={this.state.updateMode}\n                      resFrom={this.state.resFrom}\n                      visible={this.state.extraInfoModalVisible}\n                      handleOk={this.handleExtraInfoOk}\n                      handleCancel={this.handleExtraInfoCancel}\n                  />\n\n                  {/*云服务器列表*/}\n                  <Drawer\n                      title=\"服务器详情及监控数据\"\n                      placement={this.state.drawerPlacement}\n                      closable={true}\n                      destroyOnClose={true}\n                      onClose={this.onCloseDrawer}\n                      visible={this.state.drawerVisible}\n                      width={950}\n                  >\n                      <Tabs defaultActiveKey=\"1\" tabPosition=\"left\" style={{ marginLeft: -30 }}>\n                          <TabPane tab=\"监控详情\" key=\"1\">\n                              <Spin tip=\"图表生成中...\" spinning={this.state.chartLoading}>\n                                  <Row style={{ marginBottom: \"10px\" }}>\n                                      <Col span={3} style={{ lineHeight: \"30px\" }}>时间维度：</Col>\n                                      <Col span={15}>\n                                          <Radio.Group value={this.state.timeTagValue} onChange={this.handleTimeTagChange}>\n                                              <Radio.Button value=\"1h\">1小时</Radio.Button>\n                                              <Radio.Button value=\"6h\">6小时</Radio.Button>\n                                              <Radio.Button value=\"12h\">12小时</Radio.Button>\n                                              <Radio.Button value=\"1d\">1 天</Radio.Button>\n                                              <Radio.Button value=\"3d\">3 天</Radio.Button>\n                                              <Radio.Button value=\"7d\">7 天</Radio.Button>\n                                              <Radio.Button value=\"14d\">14 天</Radio.Button>\n                                          </Radio.Group>\n                                      </Col>\n                                  </Row>\n                                  <Row>\n                                      <Col span={3} style={{ lineHeight: \"30px\" }}>监控维度：</Col>\n                                      <Col span={16}>\n                                          <Radio.Group value={this.state.metricTagValue} onChange={this.handleMetricTagChange}>\n                                              <Radio.Button value=\"CPUUtilization\">cpu使用率</Radio.Button>\n                                              <Radio.Button value=\"memory_usedutilization\">内存使用率</Radio.Button>\n                                              <Radio.Button value=\"diskusage_utilization\">磁盘使用率</Radio.Button>\n                                              <Radio.Button value=\"cpu_total\">平均负载</Radio.Button>\n                                          </Radio.Group>\n                                      </Col>\n                                  </Row>\n                                  <Row>\n                                      <Col>\n                                          <div id=\"ecsMonitorChart\" style={{height:500}}>\n                                          </div>\n                                      </Col>\n                                  </Row>\n                              </Spin>\n                          </TabPane>\n                          <TabPane tab=\"信息详情\" key=\"2\">\n                              <Spin tip=\"数据获取中...\" spinning={this.state.serverDetailLoading}>\n                                  <Descriptions title=\"基本信息\" bordered size=\"small\" column={2}>\n                                      <Descriptions.Item label=\"主机名\">{this.state.currentServerDetail.HostName}</Descriptions.Item>\n                                      <Descriptions.Item label=\"机器描述\">{this.state.currentServerDetail.Description}</Descriptions.Item>\n                                      <Descriptions.Item label=\"实例ID\">{this.state.currentServerDetail.InstanceId}</Descriptions.Item>\n                                      <Descriptions.Item label=\"内网IP\">{this.state.currentServerDetail.InnerIpAddress}</Descriptions.Item>\n                                      <Descriptions.Item label=\"外网IP\">{this.state.currentServerDetail.PublicIpAddress}</Descriptions.Item>\n                                      <Descriptions.Item label=\"私有IP\">{this.state.currentServerDetail.PrivateIpAddress}</Descriptions.Item>\n                                      <Descriptions.Item label=\"Cpu\">{this.state.currentServerDetail.Cpu}核</Descriptions.Item>\n                                      <Descriptions.Item label=\"内存\">{this.state.currentServerDetail.Memory/1024}G</Descriptions.Item>\n                                      <Descriptions.Item label=\"公网入带宽\">{this.state.currentServerDetail.InternetMaxBandwidthIn}Mbps</Descriptions.Item>\n                                      <Descriptions.Item label=\"公网出带宽\">{this.state.currentServerDetail.InternetMaxBandwidthOut}Mbps</Descriptions.Item>\n                                      <Descriptions.Item label=\"网络计费\">{this.state.currentServerDetail.InternetChargeType}</Descriptions.Item>\n                                      <Descriptions.Item label=\"创建时间\">{this.state.currentServerDetail.CreationTime}</Descriptions.Item>\n                                      <Descriptions.Item label=\"过期时间\">{this.state.currentServerDetail.ExpiredTime}</Descriptions.Item>\n                                      <Descriptions.Item label=\"镜像ID\">{this.state.currentServerDetail.ImageId}</Descriptions.Item>\n                                      <Descriptions.Item label=\"付费类型\">{this.state.currentServerDetail.InstanceChargeType}</Descriptions.Item>\n                                      <Descriptions.Item label=\"网络类型\">{this.state.currentServerDetail.InstanceNetworkType}</Descriptions.Item>\n                                      <Descriptions.Item label=\"实例类型\">{this.state.currentServerDetail.InstanceType}</Descriptions.Item>\n                                      <Descriptions.Item label=\"系统名称\">{this.state.currentServerDetail.OSName}</Descriptions.Item>\n                                  </Descriptions>\n                              </Spin>\n                          </TabPane>\n                      </Tabs>\n                  </Drawer>\n                  <Table\n                      columns={this.state.columns}\n                      dataSource={this.state.tableData}\n                      scroll={{x: 'max-content'}}\n                      pagination={this.state.pagination}\n                      loading={this.state.tableLoading}\n                      rowClassName=\"fixedHeight\"\n                      bordered\n                      size=\"small\"\n                      rowSelection={rowSelection}\n                  />\n              </Content>\n          );\n    }\n}\n\n\nexport default ServerContent;","import React, { Component } from 'react';\nimport {\n    Layout,\n    Table,\n    Button,\n    Drawer,\n    Tabs,\n    Row,\n    Col,\n    message,\n    Radio,\n    Divider,\n    Spin,\n    DatePicker,\n    Input, Descriptions, Modal, Form, Select, InputNumber, Typography, Popconfirm, Badge, Tooltip\n} from \"antd\";\nimport OpsBreadcrumbPath from \"../breadcrumb_path\";\nimport {\n    deleteCloudRds,\n    getCloudAccouts,\n    getCloudMonitorRds,\n    getCloudRds,\n    getCloudRdsDetail,\n    postCloudRds, putCloudRds\n} from \"../../api/cloud\";\nimport echarts from \"echarts/lib/echarts\";\nimport moment from \"moment\";\nimport \"../../assets/css/main.css\";\nimport ExtraInfoModal from \"./common/extra_info_modal\";\n\nconst { Text, Paragraph } = Typography;\nconst { Option } = Select;\nconst { Content } = Layout;\nconst TabPane = Tabs.TabPane;\n\nclass RdsInfoModal extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            cloudAccountList: []\n        }\n    }\n\n    componentDidMount() {\n        let that = this;\n        getCloudAccouts(1, 100).then((res)=>{\n            if(res.code===0){\n                that.setState({\n                    cloudAccountList: res.data.accounts,\n                })\n            } else {\n                message.error(res.msg);\n            }\n        }).catch((err)=>{\n            message.error(err.toLocaleString());\n        })\n    }\n\n    render() {\n        const { getFieldDecorator } = this.props.form;\n        const formItemLayout = {\n            labelCol: { span: 7 },\n            wrapperCol: { span: 14 },\n        };\n        let accountOptions;\n        accountOptions = this.state.cloudAccountList.map((item)=>{\n            return (\n                <Option key={item.id} value={item.id}>{item.accountName}</Option>\n            );\n        });\n\n        return (\n            <Modal\n                title=\"数据库信息\"\n                destroyOnClose={true}\n                visible={this.props.rds_info_modal_visible}\n                onOk={this.props.handlePostRdsInfoSubmit}\n                onCancel={this.props.handlePostRdsInfoCancel}\n                okText=\"确认\"\n                cancelText=\"取消\"\n                width={600}\n            >\n                <Form>\n                    <Form.Item label=\"云账号\" {...formItemLayout}>\n                        {getFieldDecorator('cloudAccountId', {\n                            rules: [{ required: true, message: '云账号不能为空！' }],\n                        })(\n                            <Select>\n                                {accountOptions}\n                            </Select>\n                        )}\n                    </Form.Item>\n                    <Form.Item label=\"实例Id\" {...formItemLayout}>\n                        {getFieldDecorator('dbInstanceId', {\n                            rules: [{ required: true, message: '实例Id不能为空！' }],\n                        })(\n                            <Input />\n                        )}\n                    </Form.Item>\n                    <Form.Item label=\"实例描述\" {...formItemLayout}>\n                        {getFieldDecorator('dbInstanceDescription', {\n                            rules: [{ required: true, message: '实例描述不能为空！' }],\n                        })(\n                            <Input />\n                        )}\n                    </Form.Item>\n                    <Form.Item label=\"数据库类型\" {...formItemLayout}>\n                        {getFieldDecorator('engine', {\n                            initialValue: \"Mysql\",\n                            rules: [{ required: true, message: '数据库类型不能为空！' }],\n                        })(\n                            <Select>\n                                <Option value=\"Mysql\">Mysql</Option>\n                                <Option value=\"SqlServer\">SqlServer</Option>\n                            </Select>\n                        )}\n                    </Form.Item>\n                    <Form.Item label=\"连接串\" {...formItemLayout}>\n                        {getFieldDecorator('connectionString', {\n                            rules: [{ required: true, message: '请输入连接串！' }],\n                        })(\n                            <Input />\n                        )}\n                    </Form.Item>\n                    <Form.Item label=\"端口\" {...formItemLayout}>\n                        {getFieldDecorator('port', {\n                            rules: [{ required: true, message: '请输入端口！' }],\n                        })(\n                            <Input />\n                        )}\n                    </Form.Item>\n                    <Form.Item label=\"内存(G)\" {...formItemLayout}>\n                        {getFieldDecorator('dbInstanceMemory', {\n                            rules: [{ type: \"integer\", required: true, message: '请输入数值型数据！' }],\n                        })(\n                            <InputNumber />\n                        )}\n                    </Form.Item>\n                    <Form.Item label=\"磁盘(G)\" {...formItemLayout}>\n                        {getFieldDecorator('dbInstanceStorage', {\n                            rules: [{ type: \"integer\", required: true, message: '请输入数值型数据！' }],\n                        })(\n                            <InputNumber />\n                        )}\n                    </Form.Item>\n                    <Form.Item label=\"创建时间\" {...formItemLayout}>\n                        {getFieldDecorator('createTime', {\n                            rules: [{ required: true, message: '创建时间不能为空！' }],\n                        })(\n                            <DatePicker format=\"YYYY-MM-DD\" />\n                        )}\n                    </Form.Item>\n                    <Form.Item label=\"过期时间\" {...formItemLayout}>\n                        {getFieldDecorator('expireTime', {\n                        })(\n                            <DatePicker format=\"YYYY-MM-DD\" />\n                        )}\n                    </Form.Item>\n                </Form>\n            </Modal>\n        )\n    }\n}\n\nRdsInfoModal = Form.create({ name: 'RdsInfoModal' })(RdsInfoModal);\n\nclass RdsContent extends Component {\n\n    constructor(props) {\n        super(props);\n        this.handlePostRdsInfoSubmit = this.handlePostRdsInfoSubmit.bind(this);\n        this.handlePostRdsInfoCancel = this.handlePostRdsInfoCancel.bind(this);\n        this.handleExtraInfoOk = this.handleExtraInfoOk.bind(this);\n        this.handleExtraInfoCancel = this.handleExtraInfoCancel.bind(this);\n        this.onShowSizeChange = this.onShowSizeChange.bind(this);\n        let operWidth = this.props.isSuperAdmin ? 200 : 100;\n        this.state = {\n            columns: [\n                {\n                    title: 'Id', dataIndex: 'ID', key: 'ID',  className: 'small_font',\n                    render: value => {\n                        return (\n                            <Text ellipsis={true}>{value}</Text>\n                        )\n                    }\n                },\n                {\n                    title: '实例id', dataIndex: 'DBInstanceId', key: 'DBInstanceId', className: 'small_font',\n                    render: value => {\n                        return (\n                            <Text ellipsis={true}>{value}</Text>\n                        )\n                    }\n                },\n                {\n                    title: '实例描述', dataIndex: 'DBInstanceDescription', key: 'DBInstanceDescription', className: 'small_font',\n                    width: 200,\n                    render: (value, record) => {\n                        return (\n                            <Tooltip title={value}>\n                                <Text ellipsis={true} style={{ width: '200px' }}>{value}</Text>\n                            </Tooltip>\n                        )\n                    }\n                },\n                {\n                    title: '云账号', dataIndex: 'CloudAccountName', key: 'CloudAccountName', className: 'small_font',\n                    render: value => {\n                        return (\n                            <Text ellipsis={true}>{value}</Text>\n                        )\n                    }\n                },\n                {\n                    title: '数据库类型', dataIndex: 'Engine', key: 'Engine', className: 'small_font',\n                    render: value => {\n                        return (\n                            <Text ellipsis={true}>{value}</Text>\n                        )\n                    }\n                },\n                {\n                    title: '实例类型', dataIndex: 'DBInstanceType', key: 'DBInstanceType', className: 'small_font',\n                    render: value => {\n                        return (\n                            <Text ellipsis={true}>{value}</Text>\n                        )\n                    }\n                },\n                {\n                    title: '连接串', dataIndex: 'ConnectionString', key: 'ConnectionString', className: 'small_font',\n                    render: value => {\n                        return (\n                            <Paragraph style={{marginBottom: 0}} copyable>{value}</Paragraph>\n                        );\n                    }\n                },\n                {\n                    title: '端口', dataIndex: 'Port', key: 'Port', className: 'small_font',\n                    render: value => {\n                        return (\n                            <Text ellipsis={true}>{value}</Text>\n                        )\n                    }\n                },\n                {\n                    title: '配置', dataIndex: '配置', key: '配置', className: 'small_font',\n                    render:  (value, record) => {\n                        let memoryContent = <Paragraph style={{marginBottom: 0, display: 'inline'}}>内存: {record.DBInstanceMemory/1024}G, </Paragraph>;\n                        let diskContent = <Paragraph style={{marginBottom: 0, display: 'inline'}}>磁盘: {record.DBInstanceStorage}G</Paragraph>;\n                        return (\n                            <div className=\"ip_column\">\n                                { memoryContent }\n                                { diskContent }\n                            </div>\n                        );\n                    }\n                },\n                {\n                    title: '过期时间', dataIndex: 'ExpireTime', key: 'ExpireTime', className: 'small_font',\n                    render: value => {\n                        return (\n                            <Text ellipsis={true}>{value}</Text>\n                        )\n                    }\n                },\n                {\n                    title: '实例状态', dataIndex: 'DBInstanceStatus', key: 'DBInstanceStatus', align: \"center\", className: 'small_font',\n                    render: value => {\n                        if(value===\"Running\") {\n                            return <Badge status=\"processing\" />;\n                        } else {\n                            return <Badge status=\"error\" />;\n                        }\n                    }\n                },\n                {\n                    title: '操作',\n                    key: 'operation',\n                    fixed: 'right',\n                    width: {operWidth},\n                    align: 'center',\n                    className: 'small_font',\n                    render: (text, record) => {\n                        return (\n                            <div>\n                                <Button type=\"primary\" size=\"small\" onClick={this.openMonitorDrawer.bind(this, record)}>监控</Button>\n                                <Divider type=\"vertical\" />\n                                <Button type=\"info\" size=\"small\" onClick={this.rdsEdit.bind(this, record)}>编辑</Button>\n                                <Divider type=\"vertical\" />\n                                <Popconfirm\n                                    title=\"确定删除该项内容?\"\n                                    onConfirm={this.rdsDelete.bind(this, record)}\n                                    okText=\"确认\"\n                                    cancelText=\"取消\"\n                                >\n                                    <Button type=\"danger\" size=\"small\">删除</Button>\n                                </Popconfirm>\n                            </div>\n                        )\n                    },\n                },\n            ],\n            extraInfoModalVisible: false,\n            tableLoading: false,\n            tableData: [],\n            chartXData: [],\n            chartYData: [],\n            pagination: {\n                showSizeChanger: true,\n                pageSizeOptions: ['10', '20', '30', '100'],\n                onShowSizeChange: this.onShowSizeChange,\n                showQuickJumper: false,\n                showTotal: (total) => `共 ${total} 条`,\n                pageSize: 10,\n                page: 1,\n                total: 0,\n                onChange: (current) => this.changePage(current),\n            },\n            drawerVisible: false,\n            drawerPlacement: 'left',\n            instanceId: \"\",\n            timeTagValue: '1h',\n            metricTagValue: 'CpuUsage',\n            chartFormat: '%',\n            currentServerDetail: {},\n            queryExpiredTime: null,\n            queryKeyword: \"\",\n            queryCloudAccount: \"0\",\n            queryManageUser: \"0\",\n            queryDefineGroup: \"\",\n            cloudAccountList: [],\n            selectedRowKeys: [],\n            idsList: [],\n            updateMode: \"single\",\n        }\n    }\n\n    onShowSizeChange(current, size){\n        this.setState({\n            pagination: {\n                ...this.state.pagination,\n                page: 1,\n                current: 1,\n                pageSize: size,\n            }\n        }, ()=>{\n            this.refreshTableData();\n        });\n    }\n\n    componentDidMount() {\n        this.refreshTableData();\n        this.loadCloudAccountsData();\n    };\n\n    loadCloudAccountsData() {\n        let that = this;\n        getCloudAccouts(1, 100).then((res)=>{\n            if(res.code===0){\n                that.setState({\n                    cloudAccountList: res.data.accounts,\n                })\n            } else {\n                message.error(res.msg);\n            }\n        }).catch((err)=>{\n            message.error(err.toLocaleString());\n        })\n    }\n\n    rdsEdit(data) {\n        this.setState({\n            extraInfoModalVisible: true,\n            rdsId: data.ID,\n            updateMode: \"single\",\n            resFrom: data['DataStatus']===1 ? \"阿里云\" : \"手动添加\",\n        }, ()=>{\n            getCloudRdsDetail(data.ID).then((res)=>{\n                if(res['code'] !== 0){\n                    message.error(res['msg']);\n                } else {\n                    this.extraInfoFormRef.props.form.setFieldsValue({\n                        dbInstanceDescription: res.data['DBInstanceDescription'],\n                        dbMemory: (res.data['DBInstanceMemory']/1024).toString(),\n                        dbInstanceStorage: res.data['DBInstanceStorage'].toString(),\n                        dbExpiredTime: res.data['ExpireTime'] !== \"\" ? moment(res.data['ExpireTime']) : \"\",\n                        resForm: res.data['DataStatus']===1 ? \"阿里云\" : \"手动添加\",\n                    });\n                }\n            }).catch((err)=>{\n                message.error(err.toLocaleString());\n            });\n        });\n    }\n\n    handleExtraInfoOk(data) {\n        let targetId = \"\";\n        if(this.state.updateMode===\"single\"){\n            targetId = String(this.state.rdsId);\n        } else {\n            targetId = this.state.idsList.join(\",\");\n        }\n        putCloudRds({\n            ...data,\n            id: targetId,\n        }).then((res)=>{\n            if(res.code===0){\n                message.success(\"修改成功\");\n                this.setState({extraInfoModalVisible: false, selectedRowKeys: []});\n                this.refreshTableData();\n            } else {\n                message.error(res.msg);\n            }\n        }).catch((err)=>{\n            message.error(err.toLocaleString());\n        });\n    }\n\n    handleExtraInfoCancel(data) {\n        this.setState({extraInfoModalVisible: false});\n    }\n\n    rdsDelete(data) {\n        deleteCloudRds(data.ID).then((res)=>{\n            if(res.code===0){\n                message.success(\"删除成功\");\n                this.refreshTableData();\n            } else {\n                message.error(res.msg);\n            }\n        }).catch((err)=>{\n            message.error(err.toLocaleString());\n        })\n    }\n\n    refreshTableData = () => {\n        this.setState({tableLoading: true});\n        const queryParams = {\n            \"page\": this.state.pagination.page,\n            \"size\": this.state.pagination.pageSize,\n            \"queryExpiredTime\": this.state.queryExpiredTime===null ? null : this.state.queryExpiredTime.format('YYYY-MM-DD HH:mm:ss'),\n            \"queryKeyword\": this.state.queryKeyword,\n            \"queryCloudAccount\": this.state.queryCloudAccount,\n        };\n        getCloudRds(queryParams).then((res)=>{\n            const pagination = this.state.pagination;\n            pagination.total = parseInt(res.data.total);\n            pagination.page = parseInt(res.data.page);\n            pagination.showTotal(parseInt(res.data.total));\n            this.setState({\n                pagination\n            });\n            let data = res['data']['rds'];\n            let tableData = [];\n            for (let i = 0; i < data.length; i++) {\n                tableData.push({\n                    key: data[i]['ID'],\n                    ID: data[i]['ID'],\n                    DBInstanceId: data[i]['DBInstanceId'],\n                    DBInstanceDescription: data[i]['DBInstanceDescription'],\n                    DBInstanceType: data[i]['DBInstanceType'],\n                    Engine: data[i]['Engine'],\n                    ExpireTime: moment(data[i]['ExpireTime']).format(\"YYYY-MM-DD\"),\n                    DBInstanceStatus: data[i]['DBInstanceStatus'],\n                    ConnectionString: data[i]['ConnectionString'],\n                    Port: data[i]['Port'],\n                    DBInstanceMemory: data[i]['DBInstanceMemory'],\n                    DBInstanceStorage: data[i]['DBInstanceStorage'],\n                    CloudAccountName: data[i]['CloudAccountName'],\n                    DataStatus: data[i]['DataStatus'],\n                });\n            }\n            this.setState({tableData: tableData, tableLoading: false});\n        }).catch((err)=>{\n            console.log(err)\n        });\n    };\n\n    showChart = () => {\n        let myChart = echarts.init(document.getElementById('rdsMonitorChart'));\n        let option = {\n            tooltip : {\n                trigger: 'axis',\n                axisPointer: {\n                    label: {\n                        backgroundColor: '#623485'\n                    }\n                }\n            },\n            xAxis : [\n                {\n                    type : 'category',\n                    boundaryGap : false,\n                    data : this.state.chartXData\n                }\n            ],\n            yAxis : [\n                {\n                    type : 'value',\n                    axisLabel:{\n                        margin: 7,\n                        formatter: '{value} '+ this.state.chartFormat,\n                        textStyle:{\n                            color: '#999',\n                            fontSize: '12px'\n                        },\n                    },\n                }\n            ],\n            series : [\n                {\n                    type:'line',\n                    itemStyle : {\n                        normal : {\n                            color:'rgba(43, 182, 243, 0.65)',\n                            lineStyle: {\n                                color: \"rgba(43, 182, 243, 0.65)\",\n                                shadowColor: \"rgba(43, 182, 243, 0.65)\",\n                                shadowBlur: 10,\n                            },\n                            areaStyle: {\n                                color: \"rgba(43, 182, 243, 0.65)\",\n                                shadowColor: \"rgba(43, 182, 243, 0.65)\",\n                                shadowBlur: 10,\n                            },\n                        }\n                    },\n                    data: this.state.chartYData\n                }\n            ]\n        };\n        myChart.setOption(option);\n    };\n\n    openMonitorDrawer = (data) => {\n        this.setState({ drawerVisible: true, instanceId: data.DBInstanceId, currentServerDetail: data },\n            ()=>{\n                this.refreshMonitorData(data.DBInstanceId, this.state.timeTagValue, this.state.metricTagValue);\n                this.refreshSeverDetail();\n            });\n    };\n\n    refreshMonitorData = (instanceId, timeTagValue, metricTagValue) => {\n        this.setState({chartLoading: true});\n        getCloudMonitorRds(instanceId, timeTagValue, metricTagValue).then((res)=>{\n            if(res['code'] !== 0){\n                message.error(res['msg']);\n                this.setState({chartLoading: false});\n                return;\n            }\n            if(res['data']['Datapoints']===\"\"){\n                message.warn(\"未获取到监控数据，可能是非阿里云机器或其它原因！\");\n                this.setState({chartLoading: false});\n                return;\n            }\n            let dataPoints = JSON.parse(res['data']['Datapoints']);\n            let chartXData = [];\n            let chartYData = [];\n            for(let i=0; i<dataPoints.length; i++){\n                chartXData.push(moment(dataPoints[i]['timestamp']).format(\"DD日HH:mm\"));\n                chartYData.push(dataPoints[i]['Average']);\n            }\n            this.setState({chartXData: chartXData, chartYData: chartYData}, ()=>{\n                this.setState({chartLoading: false});\n                this.showChart();\n            });\n        }).catch((err)=>{\n            console.log(err.toLocaleString());\n        });\n    };\n\n    // 获取服务器的详细信息\n    refreshSeverDetail = (e) => {\n        this.setState({serverDetailLoading: true});\n        getCloudRdsDetail(this.state.currentServerDetail.ID).then((res)=>{\n            if(res['code'] !== 0){\n                message.error(res['msg']);\n            }\n            this.setState({currentServerDetail: res['data']}, ()=> {\n                this.setState({serverDetailLoading: false});\n            });\n        }).catch((err)=>{\n            console.log(err)\n        });\n    };\n\n    changePage = (e) => {\n        this.setState({\n            pagination: {\n                ...this.state.pagination,\n                page: e,\n                current: e\n            }\n        }, ()=>{\n            this.refreshTableData();\n        });\n    };\n\n    onExpiredDateChange = (moment) => {\n        if(moment == null) {\n            console.log(\"date change: clear\");\n            this.setState({queryExpiredTime: null});\n        } else {\n            console.log(\"date change: \", moment.format('YYYY-MM-DD'));\n            this.setState({queryExpiredTime: moment});\n        }\n    };\n\n    keywordOnChange = (e) => {\n        this.setState({queryKeyword: e.target.value});\n    };\n\n    handleCloudAccountChange = (queryCloudAccount) => {\n        this.setState({queryCloudAccount});\n    };\n\n    // 用户自定义查询\n    handleQuery = () => {\n        this.setState({\n            pagination: {\n                ...this.state.pagination,\n                page: 1,\n                current: 1,\n            }\n        }, ()=>{\n            this.refreshTableData();\n        });\n    };\n\n    onCloseDrawer = () => {\n        this.setState({ drawerVisible: false })\n    };\n\n    handleTimeTagChange = (e) => {\n        this.setState({ timeTagValue: e.target.value });\n        this.refreshMonitorData(this.state.instanceId, e.target.value, this.state.metricTagValue);\n    };\n\n    handleMetricTagChange = (e) => {\n        this.setState({ metricTagValue: e.target.value });\n        switch (e.target.value) {\n            case \"CpuUsage\":\n                this.setState({chartFormat: \"%\"});\n                break;\n            case \"MemoryUsage\":\n                this.setState({chartFormat: \"%\"});\n                break;\n            case \"ConnectionUsage\":\n                this.setState({chartFormat: \"%\"});\n                break;\n            case \"DiskUsage\":\n                this.setState({chartFormat: \"%\"});\n                break;\n            case \"IOPSUsage\":\n                this.setState({chartFormat: \"%\"});\n                break;\n            case \"DataDelay\":\n                this.setState({chartFormat: \"Count\"});\n                break;\n            default:\n                this.setState({chartFormat: \"秒\"});\n                break;\n        }\n        this.refreshMonitorData(this.state.instanceId, this.state.timeTagValue, e.target.value);\n    };\n\n    // 新增自定义rds信息\n    handleAdd = () => {\n        this.setState({rds_info_modal_visible: true, rdsId: 0});\n    };\n\n    handlePostRdsInfoSubmit() {\n        this.rdsInfoFormRef.props.form.validateFields((err, values) => {\n            if (!err) {\n                postCloudRds({\n                    ...values,\n                    createTime: values.createTime.format('YYYY-MM-DD HH:mm:ss'),\n                    expireTime: values.expireTime === undefined ? undefined : values.expireTime.format('YYYY-MM-DD HH:mm:ss'),\n                }).then((res)=>{\n                    if(res.code===0){\n                        message.success(\"添加成功，请到权限管理中增加访问权限！\");\n                        this.setState({rds_info_modal_visible: false});\n                        this.refreshTableData();\n                    } else {\n                        message.error(res.msg);\n                    }\n                }).catch((err)=>{\n                    message.error(err.toLocaleString());\n                });\n            }\n        })\n    };\n\n    handlePostRdsInfoCancel() {\n        this.setState({rds_info_modal_visible: false});\n    };\n\n    handleBatchUpdate = () => {\n        const idList = this.state.selectedRowKeys;\n        if(idList.length===0){\n            message.warn(\"请先选择数据\");\n            return;\n        }\n        this.setState({extraInfoModalVisible: true, updateMode: 'batch', idsList: idList});\n    };\n\n    onSelectChange = selectedRowKeys => {\n        this.setState({ selectedRowKeys });\n    };\n\n    render() {\n        let accountOptions;\n        accountOptions = this.state.cloudAccountList.map((item)=>{\n            return (\n                <Option key={item.id} value={item.id}>{item.accountName}</Option>\n            );\n        });\n        const { selectedRowKeys } = this.state;\n        const rowSelection = {\n            selectedRowKeys,\n            onChange: this.onSelectChange,\n        };\n        return (\n          <Content style={{\n              background: '#fff', padding: \"5px 20px\", margin: 0,  height: \"100%\",\n          }}>\n              <OpsBreadcrumbPath pathData={[\"云资源\", \"云数据库\", \"数据库列表\"]} />\n              <Row style={{ padding: \"0px 0px 10px 0px\" }}>\n                  <Col span={3} className=\"col-span\">\n                      <DatePicker style={{ width: \"100%\" }} placeholder=\"到期截止时间\" defaultValue={this.state.queryExpiredTime} onChange={this.onExpiredDateChange} />\n                  </Col>\n                  <Col span={5} className=\"col-span\">\n                      <Input placeholder=\"输入实例id\\描述\\连接串查询\" value={this.state.queryKeyword} onChange={this.keywordOnChange} />\n                  </Col>\n                  <Col span={3} className=\"col-span\">\n                      <Select defaultValue={this.state.queryCloudAccount} style={{ width: \"100%\" }} onChange={this.handleCloudAccountChange}>\n                          <Option value=\"0\">所有云账号</Option>\n                          {accountOptions}\n                      </Select>\n                  </Col>\n                  <Col span={2} className=\"col-span\">\n                      <Button style={{ width: \"100%\" }} type=\"primary\" icon=\"search\" onClick={this.handleQuery}>查 询</Button>\n                  </Col>\n                  <Col span={2} className=\"col-span\">\n                      <Button style={{ width: \"100%\" }} icon=\"plus-circle\" onClick={this.handleAdd}>新 增</Button>\n                  </Col>\n              </Row>\n\n              <RdsInfoModal\n                  wrappedComponentRef={(form) => this.rdsInfoFormRef = form}\n                  rds_info_modal_visible={this.state.rds_info_modal_visible}\n                  handlePostRdsInfoSubmit={this.handlePostRdsInfoSubmit}\n                  handlePostRdsInfoCancel={this.handlePostRdsInfoCancel}\n              />\n\n              {/*完善信息组件*/}\n              <ExtraInfoModal\n                  wrappedComponentRef={(form) => this.extraInfoFormRef = form}\n                  resType=\"rds\"\n                  updateMode={this.state.updateMode}\n                  resFrom={this.state.resFrom}\n                  visible={this.state.extraInfoModalVisible}\n                  handleOk={this.handleExtraInfoOk}\n                  handleCancel={this.handleExtraInfoCancel}\n              />\n\n              <div>\n                  <Drawer\n                      title=\"数据库详情及监控数据\"\n                      placement={this.state.drawerPlacement}\n                      closable={true}\n                      destroyOnClose={true}\n                      onClose={this.onCloseDrawer}\n                      visible={this.state.drawerVisible}\n                      width={950}\n                  >\n                      <Tabs defaultActiveKey=\"1\" tabPosition=\"left\" style={{ marginLeft: -30 }}>\n                          <TabPane tab=\"监控详情\" key=\"1\">\n                              <Spin tip=\"图表生成中...\" spinning={this.state.chartLoading}>\n                                  <Row style={{ marginBottom: \"10px\" }}>\n                                      <Col span={3} style={{ lineHeight: \"30px\" }}>时间维度：</Col>\n                                      <Col span={15}>\n                                          <Radio.Group value={this.state.timeTagValue} onChange={this.handleTimeTagChange}>\n                                              <Radio.Button value=\"1h\">1小时</Radio.Button>\n                                              <Radio.Button value=\"6h\">6小时</Radio.Button>\n                                              <Radio.Button value=\"12h\">12小时</Radio.Button>\n                                              <Radio.Button value=\"1d\">1 天</Radio.Button>\n                                              <Radio.Button value=\"3d\">3 天</Radio.Button>\n                                              <Radio.Button value=\"7d\">7 天</Radio.Button>\n                                              <Radio.Button value=\"14d\">14 天</Radio.Button>\n                                          </Radio.Group>\n                                      </Col>\n                                  </Row>\n                                  <Row>\n                                      <Col span={3} style={{ lineHeight: \"30px\" }}>监控维度：</Col>\n                                      <Col span={16}>\n                                          <Radio.Group value={this.state.metricTagValue} onChange={this.handleMetricTagChange}>\n                                              <Radio.Button value=\"CpuUsage\">cpu使用率</Radio.Button>\n                                              <Radio.Button value=\"MemoryUsage\">内存使用率</Radio.Button>\n                                              <Radio.Button value=\"ConnectionUsage\">连接数使用率</Radio.Button>\n                                              <Radio.Button value=\"DiskUsage\">磁盘使用率</Radio.Button>\n                                              <Radio.Button value=\"IOPSUsage\">IOPS使用率</Radio.Button>\n                                              <Radio.Button value=\"DataDelay\">只读实例延迟</Radio.Button>\n                                          </Radio.Group>\n                                      </Col>\n                                  </Row>\n                                  <Row>\n                                      <Col>\n                                          <div id=\"rdsMonitorChart\" style={{height:500}}>\n                                          </div>\n                                      </Col>\n                                  </Row>\n                              </Spin>\n                          </TabPane>\n                          <TabPane tab=\"信息详情\" key=\"2\">\n                              <Spin tip=\"数据获取中...\" spinning={this.state.serverDetailLoading}>\n                                  <Descriptions title=\"基本信息\" bordered size=\"small\" column={2}>\n                                      <Descriptions.Item label=\"实例ID\">{this.state.currentServerDetail.DBInstanceId}</Descriptions.Item>\n                                      <Descriptions.Item label=\"实例描述\">{this.state.currentServerDetail.DBInstanceDescription}</Descriptions.Item>\n                                      <Descriptions.Item label=\"实例状态\">{this.state.currentServerDetail.DBInstanceStatus}</Descriptions.Item>\n                                      <Descriptions.Item label=\"创建时间\">{this.state.currentServerDetail.CreateTime}</Descriptions.Item>\n                                      <Descriptions.Item label=\"过期时间\">{this.state.currentServerDetail.ExpireTime}</Descriptions.Item>\n                                      <Descriptions.Item label=\"连接串\">{this.state.currentServerDetail.ConnectionString}</Descriptions.Item>\n                                      <Descriptions.Item label=\"端口\">{this.state.currentServerDetail.Port}</Descriptions.Item>\n                                      <Descriptions.Item label=\"数据库类型\">{this.state.currentServerDetail.Engine}</Descriptions.Item>\n                                      <Descriptions.Item label=\"内存\">{this.state.currentServerDetail.DBInstanceMemory} M</Descriptions.Item>\n                                      <Descriptions.Item label=\"磁盘\">{this.state.currentServerDetail.DBInstanceStorage} G</Descriptions.Item>\n                                      <Descriptions.Item label=\"实例类型\">{this.state.currentServerDetail.DBInstanceType}</Descriptions.Item>\n                                      <Descriptions.Item label=\"数据库版本\">{this.state.currentServerDetail.EngineVersion}</Descriptions.Item>\n                                      <Descriptions.Item label=\"实例系列\">{this.state.currentServerDetail.Category}</Descriptions.Item>\n                                  </Descriptions>\n                              </Spin>\n                          </TabPane>\n                      </Tabs>\n                  </Drawer>\n                  <Table\n                      columns={this.state.columns}\n                      dataSource={this.state.tableData}\n                      scroll={{ x: 'max-content' }}\n                      pagination={this.state.pagination}\n                      loading={this.state.tableLoading}\n                      rowClassName=\"fixedHeight\"\n                      bordered\n                      size=\"small\"\n                      rowSelection={rowSelection}\n                  />\n              </div>\n          </Content>\n      );\n  }\n}\n\nexport default RdsContent;\n","import React, { Component} from 'react';\nimport {\n    Layout,\n    Table,\n    Button,\n    Drawer,\n    Tabs,\n    Row,\n    Col,\n    message,\n    Radio,\n    Divider,\n    Spin,\n    DatePicker,\n    Input, Descriptions, Modal, Form, Select, InputNumber, Typography, Popconfirm, Alert, Badge, Tooltip\n} from \"antd\";\nimport OpsBreadcrumbPath from \"../breadcrumb_path\";\nimport {\n    deleteCloudKv,\n    getCloudAccouts,\n    getCloudKv,\n    getCloudKvDetail,\n    getCloudMonitorKv,\n    postCloudKv, putCloudKv\n} from \"../../api/cloud\";\nimport echarts from \"echarts/lib/echarts\";\nimport moment from \"moment\";\nimport ExtraInfoModal from \"./common/extra_info_modal\";\n\nconst { Text, Paragraph } = Typography;\nconst { Option } = Select;\nconst { Content } = Layout;\nconst TabPane = Tabs.TabPane;\n\nclass KvInfoModal extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            cloudAccountList: []\n        }\n    }\n\n    componentDidMount() {\n        let that = this;\n        getCloudAccouts(1, 100).then((res)=>{\n            if(res.code===0){\n                that.setState({\n                    cloudAccountList: res.data.accounts,\n                })\n            } else {\n                message.error(res.msg);\n            }\n        }).catch((err)=>{\n            message.error(err.toLocaleString());\n        })\n    }\n\n    render() {\n        const { getFieldDecorator } = this.props.form;\n        const formItemLayout = {\n            labelCol: { span: 7 },\n            wrapperCol: { span: 14 },\n        };\n        let accountOptions;\n        accountOptions = this.state.cloudAccountList.map((item)=>{\n            return (\n                <Option key={item.id} value={item.id}>{item.accountName}</Option>\n            );\n        });\n        return (\n            <Modal\n                title=\"Redis信息\"\n                destroyOnClose={true}\n                visible={this.props.kv_info_modal_visible}\n                onOk={this.props.handlePostKvInfoSubmit}\n                onCancel={this.props.handlePostKvInfoCancel}\n                okText=\"确认\"\n                cancelText=\"取消\"\n                width={600}\n            >\n                <Form>\n                    <Form.Item label=\"云账号\" {...formItemLayout}>\n                        {getFieldDecorator('cloudAccountId', {\n                            rules: [{ required: true, message: '云账号不能为空！' }],\n                        })(\n                            <Select>\n                                {accountOptions}\n                            </Select>\n                        )}\n                    </Form.Item>\n                    <Form.Item label=\"实例Id\" {...formItemLayout}>\n                        {getFieldDecorator('instanceId', {\n                            rules: [{ required: true, message: '实例Id不能为空！' }],\n                        })(\n                            <Input />\n                        )}\n                    </Form.Item>\n                    <Form.Item label=\"实例名称\" {...formItemLayout}>\n                        {getFieldDecorator('instanceName', {\n                            rules: [{ required: true, message: '实例名称不能为空！' }],\n                        })(\n                            <Input />\n                        )}\n                    </Form.Item>\n                    <Form.Item label=\"实例类型\" {...formItemLayout}>\n                        {getFieldDecorator('instanceType', {\n                            initialValue: \"Redis\",\n                            rules: [{ required: true, message: '数据库类型不能为空！' }],\n                        })(\n                            <Select>\n                                <Option value=\"Redis\">Redis</Option>\n                            </Select>\n                        )}\n                    </Form.Item>\n                    <Form.Item label=\"连接串\" {...formItemLayout}>\n                        {getFieldDecorator('connectionString', {\n                            rules: [{ required: true, message: '请输入连接串！' }],\n                        })(\n                            <Input />\n                        )}\n                    </Form.Item>\n                    <Form.Item label=\"端口\" {...formItemLayout}>\n                        {getFieldDecorator('port', {\n                            rules: [{ required: true, message: '请输入端口！' }],\n                        })(\n                            <Input />\n                        )}\n                    </Form.Item>\n                    <Form.Item label=\"容量(G)\" {...formItemLayout}>\n                        {getFieldDecorator('capacity', {\n                            rules: [{ type: \"integer\", required: true, message: '请输入数值型数据！' }],\n                        })(\n                            <InputNumber />\n                        )}\n                    </Form.Item>\n                    <Form.Item label=\"带宽(M)\" {...formItemLayout}>\n                        {getFieldDecorator('bandwidth', {\n                            rules: [{ type: \"integer\", required: true, message: '请输入数值型数据！' }],\n                        })(\n                            <InputNumber />\n                        )}\n                    </Form.Item>\n                    <Form.Item label=\"创建时间\" {...formItemLayout}>\n                        {getFieldDecorator('createTime', {\n                            rules: [{ required: true, message: '创建时间不能为空！' }],\n                        })(\n                            <DatePicker format=\"YYYY-MM-DD\" />\n                        )}\n                    </Form.Item>\n                    <Form.Item label=\"过期时间\" {...formItemLayout}>\n                        {getFieldDecorator('endTime', {\n                        })(\n                            <DatePicker format=\"YYYY-MM-DD\" />\n                        )}\n                    </Form.Item>\n                </Form>\n            </Modal>\n        )\n    }\n}\n\nKvInfoModal = Form.create({ name: 'KvInfoModal' })(KvInfoModal);\n\nclass KvContent extends Component {\n\n    constructor(props) {\n        super(props);\n        this.handlePostKvInfoSubmit = this.handlePostKvInfoSubmit.bind(this);\n        this.handlePostKvInfoCancel = this.handlePostKvInfoCancel.bind(this);\n        this.handleExtraInfoOk = this.handleExtraInfoOk.bind(this);\n        this.handleExtraInfoCancel = this.handleExtraInfoCancel.bind(this);\n        this.onShowSizeChange = this.onShowSizeChange.bind(this);\n        let operWidth = this.props.isSuperAdmin ? 220 : 100;\n        this.state = {\n            columns: [\n                {\n                    title: 'Id', dataIndex: 'ID', key: 'ID', className: 'small_font',\n                    render: value => {\n                        return (\n                            <Text ellipsis={true}>{value}</Text>\n                        )\n                    }\n                },\n                {\n                    title: '实例id', dataIndex: 'InstanceId', key: 'InstanceId', className: 'small_font',\n                    render: value => {\n                        return (\n                            <Text ellipsis={true}>{value}</Text>\n                        )\n                    }\n                },\n                {\n                    title: '实例名称', dataIndex: 'InstanceName', key: 'InstanceName', className: 'small_font',\n                    render: (value, record) => {\n                        return (\n                            <Tooltip title={value}>\n                                <Text ellipsis={true} style={{ width: '100%' }}>{value}</Text>\n                            </Tooltip>\n                        )\n                    }\n                },\n                {\n                    title: '云账号', dataIndex: 'CloudAccountName', key: 'CloudAccountName', className: 'small_font',\n                    render: value => {\n                        return (\n                            <Text ellipsis={true}>{value}</Text>\n                        )\n                    }\n                },\n                {\n                    title: '实例类型', dataIndex: 'InstanceType', key: 'InstanceType', className: 'small_font',\n                    render: value => {\n                        return (\n                            <Text ellipsis={true}>{value}</Text>\n                        )\n                    }\n                },\n                {\n                    title: '连接串', dataIndex: 'ConnectionDomain', key: 'ConnectionDomain', className: 'small_font',\n                    render: value => {\n                        return (\n                            <Paragraph style={{marginBottom: 0}} copyable>{value}</Paragraph>\n                        );\n                    }\n                },\n                {\n                    title: '带宽', dataIndex: 'Bandwidth', key: 'Bandwidth', className: 'small_font',\n                    render: value => {\n                        return (\n                            <Text ellipsis={true}>{value}MB/s</Text>\n                        )\n                    }\n                },\n                {\n                    title: '连接数', dataIndex: 'Connections', key: 'Connections', className: 'small_font',\n                    render: value => {\n                        return (\n                            <Text ellipsis={true}>{value}</Text>\n                        )\n                    }\n                },\n                {\n                    title: '容量', dataIndex: 'Capacity', key: 'Capacity', className: 'small_font',\n                    render: value => {\n                        return (\n                            <Text ellipsis={true}>{value/1024}G</Text>\n                        )\n                    }\n                },\n                {\n                    title: 'QPS', dataIndex: 'QPS', key: 'QPS', className: 'small_font',\n                    render: value => {\n                        return (\n                            <Text ellipsis={true}>{value}</Text>\n                        )\n                    }\n                },\n                {\n                    title: '过期时间', dataIndex: 'EndTime', key: 'EndTime', className: 'small_font',\n                    render: value => {\n                        return (\n                            <Text ellipsis={true}>{value}</Text>\n                        )\n                    }\n                },\n                {\n                    title: '实例状态', dataIndex: 'InstanceStatus', key: 'InstanceStatus', align: \"center\", className: 'small_font',\n                    render: value => {\n                        if(value===\"Normal\") {\n                            return <Badge status=\"processing\" />;\n                        } else {\n                            return <Badge status=\"error\" />;\n                        }\n                    }\n                },\n                {\n                    title: '操作',\n                    key: 'operation',\n                    fixed: 'right',\n                    width: {operWidth},\n                    align: 'center',\n                    className: 'small_font',\n                    render: (text, record) => {\n                        return (\n                            <div>\n                                <Button type=\"primary\" size=\"small\" onClick={this.openMonitorDrawer.bind(this, record)}>监控</Button>\n                                <Divider type=\"vertical\" />\n                                <Button type=\"info\" size=\"small\" onClick={this.kvEdit.bind(this, record)}>编辑</Button>\n                                <Divider type=\"vertical\" />\n                                <Popconfirm\n                                    title=\"确定删除该项内容?\"\n                                    onConfirm={this.kvDelete.bind(this, record)}\n                                    okText=\"确认\"\n                                    cancelText=\"取消\"\n                                >\n                                    <Button type=\"danger\" size=\"small\">删除</Button>\n                                </Popconfirm>\n                            </div>\n                        )\n                    },\n                },\n            ],\n            extraInfoModalVisible: false,\n            tableLoading: false,\n            tableData: [],\n            chartXData: [],\n            chartYData: [],\n            pagination: {\n                showSizeChanger: true,\n                pageSizeOptions: ['10', '20', '30', '100'],\n                onShowSizeChange: this.onShowSizeChange,\n                showQuickJumper: false,\n                showTotal: (total) => `共 ${total} 条`,\n                pageSize: 10,\n                page: 1,\n                total: 0,\n                onChange: (current) => this.changePage(current),\n            },\n            drawerVisible: false,\n            drawerPlacement: 'left',\n            instanceId: \"\",\n            timeTagValue: '1h',\n            metricTagValue: 'StandardConnectionUsage',\n            chartFormat: '%',\n            currentServerDetail: {},\n            queryExpiredTime: null,\n            queryKeyword: \"\",\n            queryCloudAccount: \"0\",\n            queryManageUser: \"0\",\n            queryDefineGroup: \"\",\n            cloudAccountList: [],\n            kv_info_modal_visible: false,\n            selectedRowKeys: [],\n            idsList: [],\n            updateMode: \"single\",\n        }\n    }\n\n    onShowSizeChange(current, size){\n        this.setState({\n            pagination: {\n                ...this.state.pagination,\n                page: 1,\n                current: 1,\n                pageSize: size,\n            }\n        }, ()=>{\n            this.refreshTableData();\n        });\n    }\n\n    componentDidMount() {\n        this.refreshTableData();\n        this.loadCloudAccountsData();\n    };\n\n    loadCloudAccountsData() {\n        let that = this;\n        getCloudAccouts(1, 100).then((res)=>{\n            if(res.code===0){\n                that.setState({\n                    cloudAccountList: res.data.accounts,\n                })\n            } else {\n                message.error(res.msg);\n            }\n        }).catch((err)=>{\n            message.error(err.toLocaleString());\n        })\n    }\n\n    kvEdit(data) {\n        this.setState({\n            extraInfoModalVisible: true,\n            kvId: data.ID,\n            updateMode: \"single\",\n            resFrom: data['DataStatus']===1 ? \"阿里云\" : \"手动添加\"\n        }, ()=>{\n            getCloudKvDetail(data.ID).then((res)=>{\n                if(res['code'] !== 0){\n                    message.error(res['msg']);\n                } else {\n                    let renewStatus = false;\n                    if(res.data[\"RenewStatus\"]===1){\n                        renewStatus = true;\n                    }\n                    this.extraInfoFormRef.props.form.setFieldsValue({\n                        renewStatus: renewStatus,\n                        renewSiteId: parseInt(res.data[\"RenewSiteId\"]) ? parseInt(res.data[\"RenewSiteId\"]) : null,\n                        bankAccount: parseInt(res.data[\"BankAccount\"]) ? parseInt(res.data[\"BankAccount\"]) : null,\n                        manageUser: parseInt(res.data[\"ManageUser\"]) ? parseInt(res.data[\"ManageUser\"]) : null,\n                        cost: res.data[\"Cost\"] ? res.data[\"Cost\"] : \"0\",\n                        costType: res.data[\"CostType\"] ? res.data[\"CostType\"] : \"元/月\",\n\n                        kvInstanceName: res.data['InstanceName'],\n                        kvBandwidth: res.data['Bandwidth'].toString(),\n                        kvCapacity: (res.data['Capacity']/1024).toString(),\n                        kvExpiredTime: res.data['EndTime'] !== \"\" ? moment(res.data['EndTime']) : \"\",\n                        resForm: res.data['DataStatus']===1 ? \"阿里云\" : \"手动添加\",\n                    });\n                }\n            }).catch((err)=>{\n                message.error(err.toLocaleString());\n            });\n        });\n    }\n\n    handleExtraInfoOk(data) {\n        let targetId = \"\";\n        if(this.state.updateMode===\"single\"){\n            targetId = String(this.state.kvId);\n        } else {\n            targetId = this.state.idsList.join(\",\");\n        }\n        putCloudKv({\n            ...data,\n            id: targetId,\n        }).then((res)=>{\n            if(res.code===0){\n                message.success(\"修改成功\");\n                this.setState({extraInfoModalVisible: false, selectedRowKeys: []});\n                this.refreshTableData();\n            } else {\n                message.error(res.msg);\n            }\n        }).catch((err)=>{\n            message.error(err.toLocaleString());\n        });\n    }\n\n    handleExtraInfoCancel(data) {\n        this.setState({extraInfoModalVisible: false});\n    }\n\n    kvDelete(data) {\n        deleteCloudKv(data.ID).then((res)=>{\n            if(res.code===0){\n                message.success(\"删除成功\");\n                this.refreshTableData();\n            } else {\n                message.error(res.msg);\n            }\n        }).catch((err)=>{\n            message.error(err.toLocaleString());\n        })\n    }\n\n    refreshTableData = () => {\n        this.setState({tableLoading: true});\n        const queryParams = {\n            \"page\": this.state.pagination.page,\n            \"size\": this.state.pagination.pageSize,\n            \"queryExpiredTime\": this.state.queryExpiredTime===null ? null : this.state.queryExpiredTime.format('YYYY-YY-DD HH:mm:ss'),\n            \"queryKeyword\": this.state.queryKeyword,\n            \"queryCloudAccount\": this.state.queryCloudAccount,\n        };\n        getCloudKv(queryParams).then((res)=>{\n            const pagination = this.state.pagination;\n            pagination.total = parseInt(res.data.total);\n            pagination.page = parseInt(res.data.page);\n            pagination.showTotal(parseInt(res.data.total));\n            this.setState({\n                pagination\n            });\n            let data = res['data']['kv'];\n            let tableData = [];\n            for (let i = 0; i < data.length; i++) {\n                tableData.push({\n                    key: data[i]['ID'],\n                    ID: data[i]['ID'],\n                    InstanceId: data[i]['InstanceId'],\n                    InstanceName: data[i]['InstanceName'],\n                    InstanceType: data[i]['InstanceType'],\n                    ConnectionDomain: data[i]['ConnectionDomain'],\n                    EndTime: moment(data[i]['EndTime']).format(\"YYYY-MM-DD\"),\n                    InstanceStatus: data[i]['InstanceStatus'],\n                    Capacity: data[i]['Capacity'],\n                    QPS: data[i]['QPS'],\n                    Bandwidth: data[i]['Bandwidth'],\n                    Connections: data[i]['Connections'],\n                    CloudAccountName: data[i]['CloudAccountName'],\n                    DataStatus: data[i]['DataStatus'],\n                });\n            }\n            this.setState({tableData: tableData, tableLoading: false});\n        }).catch((err)=>{\n            console.log(err)\n        });\n    };\n\n    showChart = () => {\n        let myChart = echarts.init(document.getElementById('ecsMonitorChart'));\n        let option = {\n            tooltip : {\n                trigger: 'axis',\n                axisPointer: {\n                    label: {\n                        backgroundColor: '#623485'\n                    }\n                }\n            },\n            xAxis : [\n                {\n                    type : 'category',\n                    boundaryGap : false,\n                    data : this.state.chartXData\n                }\n            ],\n            yAxis : [\n                {\n                    type : 'value',\n                    axisLabel:{\n                        margin: 7,\n                        formatter: '{value} '+ this.state.chartFormat,\n                        textStyle:{\n                            color: '#999',\n                            fontSize: '12px'\n                        },\n                    },\n                }\n            ],\n            series : [\n                {\n                    type:'line',\n                    itemStyle : {\n                        normal : {\n                            color:'rgba(43, 182, 243, 0.65)',\n                            lineStyle: {\n                                color: \"rgba(43, 182, 243, 0.65)\",\n                                shadowColor: \"rgba(43, 182, 243, 0.65)\",\n                                shadowBlur: 10,\n                            },\n                            areaStyle: {\n                                color: \"rgba(43, 182, 243, 0.65)\",\n                                shadowColor: \"rgba(43, 182, 243, 0.65)\",\n                                shadowBlur: 10,\n                            },\n                        }\n                    },\n                    data: this.state.chartYData\n                }\n            ]\n        };\n        myChart.setOption(option);\n    };\n\n    openMonitorDrawer = (data) => {\n        this.setState({ drawerVisible: true, instanceId: data.InstanceId, currentServerDetail: data },\n            ()=>{\n                this.refreshMonitorData(data.InstanceId, this.state.timeTagValue, this.state.metricTagValue);\n                this.refreshSeverDetail();\n        });\n    };\n\n    refreshMonitorData = (instanceId, timeTagValue, metricTagValue) => {\n        this.setState({chartLoading: true});\n        getCloudMonitorKv(instanceId, timeTagValue, metricTagValue).then((res)=>{\n            if(res['code'] !== 0){\n                message.error(res['msg']);\n                this.setState({chartLoading: false});\n                return;\n            }\n            if(res['data']['Datapoints']===\"\"){\n                message.warn(\"未获取到监控数据，可能是非阿里云机器或其它原因！\");\n                this.setState({chartLoading: false});\n                return;\n            }\n            let dataPoints = JSON.parse(res['data']['Datapoints']);\n            let chartXData = [];\n            let chartYData = [];\n            for(let i=0; i<dataPoints.length; i++){\n                chartXData.push(moment(dataPoints[i]['timestamp']).format(\"DD日HH:mm\"));\n                chartYData.push(dataPoints[i]['Average']);\n            }\n            this.setState({chartXData: chartXData, chartYData: chartYData}, ()=>{\n                this.setState({chartLoading: false});\n                this.showChart();\n            });\n        }).catch((err)=>{\n            message.error(err.toLocaleString());\n        });\n    };\n\n    // 获取服务器的详细信息\n    refreshSeverDetail = (e) => {\n        this.setState({serverDetailLoading: true});\n        getCloudKvDetail(this.state.currentServerDetail.ID).then((res)=>{\n            if(res['code'] !== 0){\n                message.error(res['msg']);\n            }\n            this.setState({currentServerDetail: res['data']}, ()=> {\n                this.setState({serverDetailLoading: false});\n            });\n        }).catch((err)=>{\n            console.log(err)\n        });\n    };\n\n    changePage = (e) => {\n        this.setState({\n            pagination: {\n                ...this.state.pagination,\n                page: e,\n                current: e\n            }\n        }, ()=>{\n            this.refreshTableData();\n        });\n    };\n\n    onExpiredDateChange = (moment) => {\n        if(moment == null) {\n            this.setState({queryExpiredTime: null});\n        } else {\n            this.setState({queryExpiredTime: moment});\n        }\n    };\n\n    keywordOnChange = (e) => {\n        this.setState({queryKeyword: e.target.value});\n    };\n\n    handleCloudAccountChange = (queryCloudAccount) => {\n        this.setState({queryCloudAccount});\n    };\n\n    // 用户自定义查询\n    handleQuery = () => {\n        this.setState({\n            pagination: {\n                ...this.state.pagination,\n                page: 1,\n                current: 1,\n            }\n        }, ()=>{\n            console.log(this.state.pagination.page);\n            this.refreshTableData();\n        });\n    };\n\n    onCloseDrawer = () => {\n        this.setState({ drawerVisible: false })\n    };\n\n    handleTimeTagChange = (e) => {\n        this.setState({ timeTagValue: e.target.value });\n        this.refreshMonitorData(this.state.instanceId, e.target.value, this.state.metricTagValue);\n    };\n\n    handleMetricTagChange = (e) => {\n        this.setState({ metricTagValue: e.target.value });\n        switch (e.target.value) {\n            case \"StandardConnectionUsage\":\n                this.setState({chartFormat: \"%\"});\n                break;\n            case \"StandardCpuUsage\":\n                this.setState({chartFormat: \"%\"});\n                break;\n            case \"StandardAvgRt\":\n                this.setState({chartFormat: \"us\"});\n                break;\n            case \"Standardappend\":\n                this.setState({chartFormat: \"Count/Second\"});\n                break;\n            default:\n                this.setState({chartFormat: \"\"});\n                break;\n        }\n        this.refreshMonitorData(this.state.instanceId, this.state.timeTagValue, e.target.value);\n    };\n\n    // 新增自定义redis信息\n    handleAdd = () => {\n        this.setState({kv_info_modal_visible: true, kvId: 0});\n    };\n\n    handlePostKvInfoSubmit() {\n        this.kvInfoFormRef.props.form.validateFields((err, values) => {\n            if (!err) {\n                postCloudKv({\n                    ...values,\n                    createTime: values.createTime.format('YYYY-MM-DD HH:mm:ss'),\n                    endTime: values.endTime === undefined ? undefined : values.endTime.format('YYYY-MM-DD HH:mm:ss'),\n                }).then((res)=>{\n                    if(res.code===0){\n                        message.success(\"添加成功，请到权限管理中增加访问权限！\");\n                        this.setState({kv_info_modal_visible: false});\n                        this.refreshTableData();\n                    } else {\n                        message.error(res.msg);\n                    }\n                }).catch((err)=>{\n                    message.error(err.toLocaleString());\n                });\n            }\n        })\n    };\n\n    handlePostKvInfoCancel() {\n        this.setState({kv_info_modal_visible: false});\n    };\n\n    handleBatchUpdate = () => {\n        const idList = this.state.selectedRowKeys;\n        if(idList.length===0){\n            message.warn(\"请先选择数据\");\n            return;\n        }\n        this.setState({extraInfoModalVisible: true, updateMode: 'batch', idsList: idList});\n    };\n\n    onSelectChange = selectedRowKeys => {\n        this.setState({ selectedRowKeys });\n    };\n\n    render() {\n        let accountOptions;\n        accountOptions = this.state.cloudAccountList.map((item)=>{\n            return (\n                <Option key={item.id} value={item.id}>{item.accountName}</Option>\n            );\n        });\n        const { selectedRowKeys } = this.state;\n        const rowSelection = {\n            selectedRowKeys,\n            onChange: this.onSelectChange,\n        };\n        return (\n          <Content style={{\n              background: '#fff', padding: \"5px 20px\", margin: 0, height: \"100%\",\n          }}>\n              <Alert type=\"info\" showIcon message=\"更多资源查看权限可找运维中心申请\" banner closable/>\n              <OpsBreadcrumbPath pathData={[\"云资源\", \"KV存储\", \"KV列表\"]} />\n              <Row style={{ padding: \"0px 0px 10px 0px\" }}>\n                  <Col span={3} className=\"col-span\">\n                      <DatePicker style={{ width: \"100%\" }} placeholder=\"到期截止时间\" defaultValue={this.state.queryExpiredTime} onChange={this.onExpiredDateChange} />\n                  </Col>\n                  <Col span={5} className=\"col-span\">\n                      <Input placeholder=\"输入实例id\\名称\\连接串查询\" value={this.state.queryKeyword} onChange={this.keywordOnChange} />\n                  </Col>\n                  <Col span={3} className=\"col-span\">\n                      <Select defaultValue={this.state.queryCloudAccount} style={{ width: \"100%\" }} onChange={this.handleCloudAccountChange}>\n                          <Option value=\"0\">所有云账号</Option>\n                          {accountOptions}\n                      </Select>\n                  </Col>\n                  <Col span={2} className=\"col-span\">\n                      <Button style={{ width: \"100%\" }} type=\"primary\" icon=\"search\" onClick={this.handleQuery}>查 询</Button>\n                  </Col>\n                  <Col span={2} className=\"col-span\">\n                      <Button style={{ width: \"100%\" }} icon=\"plus-circle\" onClick={this.handleAdd}>新 增</Button>\n                  </Col>\n              </Row>\n\n              <KvInfoModal\n                  wrappedComponentRef={(form) => this.kvInfoFormRef = form}\n                  kv_info_modal_visible={this.state.kv_info_modal_visible}\n                  handlePostKvInfoSubmit={this.handlePostKvInfoSubmit}\n                  handlePostKvInfoCancel={this.handlePostKvInfoCancel}\n              />\n\n              {/*完善信息组件*/}\n              <ExtraInfoModal\n                  wrappedComponentRef={(form) => this.extraInfoFormRef = form}\n                  resType=\"kv\"\n                  updateMode={this.state.updateMode}\n                  resFrom={this.state.resFrom}\n                  visible={this.state.extraInfoModalVisible}\n                  handleOk={this.handleExtraInfoOk}\n                  handleCancel={this.handleExtraInfoCancel}\n              />\n\n              <div>\n                  <Drawer\n                      title=\"实例详情及监控数据\"\n                      placement={this.state.drawerPlacement}\n                      closable={true}\n                      destroyOnClose={true}\n                      onClose={this.onCloseDrawer}\n                      visible={this.state.drawerVisible}\n                      width={950}\n                  >\n                      <Tabs defaultActiveKey=\"1\" tabPosition=\"left\" style={{ marginLeft: -30 }}>\n                          <TabPane tab=\"监控详情\" key=\"1\">\n                              <Spin tip=\"图表生成中...\" spinning={this.state.chartLoading}>\n                                  <Row style={{ marginBottom: \"10px\" }}>\n                                      <Col span={3} style={{ lineHeight: \"30px\" }}>时间维度：</Col>\n                                      <Col span={15}>\n                                          <Radio.Group value={this.state.timeTagValue} onChange={this.handleTimeTagChange}>\n                                              <Radio.Button value=\"1h\">1小时</Radio.Button>\n                                              <Radio.Button value=\"6h\">6小时</Radio.Button>\n                                              <Radio.Button value=\"12h\">12小时</Radio.Button>\n                                              <Radio.Button value=\"1d\">1 天</Radio.Button>\n                                              <Radio.Button value=\"3d\">3 天</Radio.Button>\n                                              <Radio.Button value=\"7d\">7 天</Radio.Button>\n                                              <Radio.Button value=\"14d\">14 天</Radio.Button>\n                                          </Radio.Group>\n                                      </Col>\n                                  </Row>\n                                  <Row>\n                                      <Col span={3} style={{ lineHeight: \"30px\" }}>监控维度：</Col>\n                                      <Col span={16}>\n                                          <Radio.Group value={this.state.metricTagValue} onChange={this.handleMetricTagChange}>\n                                              <Radio.Button value=\"StandardConnectionUsage\">连接数使用率</Radio.Button>\n                                              <Radio.Button value=\"StandardCpuUsage\">CPU 使用率</Radio.Button>\n                                              <Radio.Button value=\"StandardAvgRt\">平均响应时间</Radio.Button>\n                                              <Radio.Button value=\"Standardappend\">append 命令的执行频率</Radio.Button>\n                                          </Radio.Group>\n                                      </Col>\n                                  </Row>\n                                  <Row>\n                                      <Col>\n                                          <div id=\"ecsMonitorChart\" style={{height:500}}>\n                                          </div>\n                                      </Col>\n                                  </Row>\n                              </Spin>\n                          </TabPane>\n                          <TabPane tab=\"信息详情\" key=\"2\">\n                              <Spin tip=\"数据获取中...\" spinning={this.state.serverDetailLoading}>\n                                  <Descriptions title=\"基本信息\" bordered size=\"small\" column={2}>\n                                      <Descriptions.Item label=\"实例ID\">{this.state.currentServerDetail.InstanceId}</Descriptions.Item>\n                                      <Descriptions.Item label=\"实例名称\">{this.state.currentServerDetail.InstanceName}</Descriptions.Item>\n                                      <Descriptions.Item label=\"实例类型\">{this.state.currentServerDetail.InstanceType}</Descriptions.Item>\n                                      <Descriptions.Item label=\"架构类型\">{this.state.currentServerDetail.ArchitectureType}</Descriptions.Item>\n                                      <Descriptions.Item label=\"实例带宽\">{this.state.currentServerDetail.Bandwidth}</Descriptions.Item>\n                                      <Descriptions.Item label=\"实例容量\">{this.state.currentServerDetail.Capacity}</Descriptions.Item>\n                                      <Descriptions.Item label=\"带宽\">{this.state.currentServerDetail.Bandwidth}</Descriptions.Item>\n                                      <Descriptions.Item label=\"连接地址\">{this.state.currentServerDetail.ConnectionDomain}</Descriptions.Item>\n                                      <Descriptions.Item label=\"端口\">{this.state.currentServerDetail.Port}</Descriptions.Item>\n                                      <Descriptions.Item label=\"私有IP\">{this.state.currentServerDetail.PrivateIp}</Descriptions.Item>\n                                      <Descriptions.Item label=\"连接数限制\">{this.state.currentServerDetail.Connections}</Descriptions.Item>\n                                      <Descriptions.Item label=\"创建时间\">{this.state.currentServerDetail.CreateTime}</Descriptions.Item>\n                                      <Descriptions.Item label=\"过期时间\">{this.state.currentServerDetail.EndTime}</Descriptions.Item>\n                                      <Descriptions.Item label=\"QPS\">{this.state.currentServerDetail.QPS}</Descriptions.Item>\n                                  </Descriptions>\n                              </Spin>\n                          </TabPane>\n                      </Tabs>\n                  </Drawer>\n                  <Table\n                      columns={this.state.columns}\n                      dataSource={this.state.tableData}\n                      scroll={{ x: 'max-content' }}\n                      pagination={this.state.pagination}\n                      loading={this.state.tableLoading}\n                      rowClassName=\"fixedHeight\"\n                      bordered\n                      size=\"small\"\n                      rowSelection={rowSelection}\n                  />\n              </div>\n          </Content>\n      );\n  }\n}\n\nexport default KvContent;\n","import React, { Component } from 'react';\nimport {\n    Layout,\n    Table,\n    Button,\n    Drawer,\n    Tabs,\n    Row,\n    Col,\n    message,\n    Radio,\n    Divider,\n    Spin,\n    Input, Descriptions, Typography, Popconfirm, Select, Badge, Tooltip\n} from \"antd\";\nimport OpsBreadcrumbPath from \"../breadcrumb_path\";\nimport {\n    getCloudSlbDetail,\n    getCloudSlb,\n    getCloudMonitorSlb,\n    deleteCloudSlb,\n    getCloudAccouts,\n} from \"../../api/cloud\";\nimport echarts from \"echarts/lib/echarts\";\nimport moment from \"moment\";\n\nconst { Text, Paragraph } = Typography;\nconst { Content } = Layout;\nconst { Option } = Select;\nconst TabPane = Tabs.TabPane;\n\nclass SlbContent extends Component {\n\n    constructor(props) {\n        super(props);\n        this.onShowSizeChange = this.onShowSizeChange.bind(this);\n        this.changePage = this.changePage.bind(this);\n        let operWidth = this.props.isSuperAdmin ? 200 : 100;\n        this.state = {\n            columns: [\n                {\n                    title: 'Id', dataIndex: 'ID', key: 'ID', className: 'small_font',\n                    render: value => {\n                        return (\n                            <Text ellipsis={true}>{value}</Text>\n                        )\n                    }\n                },\n                {\n                    title: '实例id', dataIndex: 'LoadBalancerId', key: 'LoadBalancerId', className: 'small_font',\n                    render: value => {\n                        return (\n                            <Text ellipsis={true}>{value}</Text>\n                        )\n                    }\n                },\n                {\n                    title: '实例名称', dataIndex: 'LoadBalancerName', key: 'LoadBalancerName', className: 'small_font', width: 200,\n                    render: (value, record) => {\n                        return (\n                            <Tooltip title={value}>\n                                <Text ellipsis={true} style={{ width: '100%' }}>{value}</Text>\n                            </Tooltip>\n                        )\n                    }\n                },\n                {\n                    title: '云账号', dataIndex: 'CloudAccountName', key: 'CloudAccountName', className: 'small_font',\n                    render: value => {\n                        return (\n                            <Text ellipsis={true}>{value}</Text>\n                        )\n                    }\n                },\n                {\n                    title: '服务地址', dataIndex: 'Address', key: 'Address', className: 'small_font',\n                    render: value => {\n                        return (\n                            <Paragraph style={{marginBottom: 0}} copyable>{value}</Paragraph>\n                        );\n                    }\n                },\n                {\n                    title: '计费方式', dataIndex: 'InternetChargeType', key: 'InternetChargeType', className: 'small_font',\n                    render: value => {\n                        if(value===\"4\"){\n                            value = \"按流量计费\"\n                        } else {\n                            value = \"按带宽计费\"\n                        }\n                        return (\n                            <Text ellipsis={true}>{value}</Text>\n                        )\n                    }\n                },\n                {\n                    title: '创建时间', dataIndex: 'CreateTime', key: 'CreateTime', className: 'small_font',\n                    render: value => {\n                        return (\n                            <Text ellipsis={true}>{value}</Text>\n                        )\n                    }\n                },\n                {\n                    title: '实例状态', dataIndex: 'LoadBalancerStatus', key: 'LoadBalancerStatus', align: \"center\", className: 'small_font',\n                    render: value => {\n                        if(value===\"active\") {\n                            return <Badge status=\"processing\" />;\n                        } else {\n                            return <Badge status=\"error\" />;\n                        }\n                    }\n                },\n                {\n                    title: '操作',\n                    key: 'operation',\n                    fixed: 'right',\n                    width: {operWidth},\n                    align: 'center',\n                    className: 'small_font',\n                    render: (text, record) => {\n                        return (\n                            <div>\n                                <Button type=\"primary\" size=\"small\" onClick={this.openMonitorDrawer.bind(this, record)}>监控</Button>\n                                <Divider type=\"vertical\" />\n                                <Popconfirm\n                                    title=\"确定删除该项内容?\"\n                                    onConfirm={this.slbDelete.bind(this, record)}\n                                    okText=\"确认\"\n                                    cancelText=\"取消\"\n                                >\n                                    <Button type=\"danger\" size=\"small\">删除</Button>\n                                </Popconfirm>\n                            </div>\n                        )\n                    },\n                },\n            ],\n            tableLoading: false,\n            tableData: [],\n            chartXData: [],\n            chartYData: [],\n            pagination: {\n                showSizeChanger: true,\n                pageSizeOptions: ['10', '20', '30', '100'],\n                onShowSizeChange: this.onShowSizeChange,\n                showQuickJumper: false,\n                showTotal: (total) => `共 ${total} 条`,\n                pageSize: 10,\n                page: 1,\n                total: 0,\n                onChange: (current) => this.changePage(current),\n            },\n            extraInfoModalVisible: false,\n            drawerVisible: false,\n            drawerPlacement: 'left',\n            cloudAccountList: [],\n            slbId: 0,\n            instanceId: \"\",\n            timeTagValue: '1h',\n            metricTagValue: 'ActiveConnection',\n            chartFormat: 'Count',\n            currentServerDetail: {},\n            queryKeyword: \"\",\n            queryCloudAccount: \"0\",\n            queryManageUser: \"0\",\n            queryDefineGroup: \"\",\n            selectedRowKeys: [],\n            idsList: [],\n            updateMode: \"single\",\n        }\n    }\n\n    onShowSizeChange(current, size){\n        this.setState({\n            pagination: {\n                ...this.state.pagination,\n                page: 1,\n                current: 1,\n                pageSize: size,\n            }\n        }, ()=>{\n            this.refreshTableData();\n        });\n    }\n\n    componentDidMount() {\n        this.refreshTableData();\n        this.loadCloudAccountsData();\n    };\n\n    loadCloudAccountsData() {\n        let that = this;\n        getCloudAccouts(1, 100).then((res)=>{\n            if(res.code===0){\n                that.setState({\n                    cloudAccountList: res.data.accounts,\n                })\n            } else {\n                message.error(res.msg);\n            }\n        }).catch((err)=>{\n            message.error(err.toLocaleString());\n        })\n    }\n\n    // 用户自定义内容修改\n    userDefineEdit(data) {\n        this.userDefineInfoFormRef.props.form.setFieldsValue({\n            \"userRemark\": data.UserRemark,\n            \"userDefineGroup\": data.UserDefineGroup,\n        });\n        this.setState({\n            slbId: data.ID,\n            userDefineInfoModalVisible: true,\n        });\n    }\n\n    refreshTableData = () => {\n        this.setState({tableLoading: true});\n        const queryParams = {\n            \"page\": this.state.pagination.page,\n            \"size\": this.state.pagination.pageSize,\n            \"queryKeyword\": this.state.queryKeyword,\n            \"queryCloudAccount\": this.state.queryCloudAccount,\n        };\n        getCloudSlb(queryParams).then((res)=>{\n            const pagination = this.state.pagination;\n            pagination.total = parseInt(res.data.total);\n            pagination.page = parseInt(res.data.page);\n            pagination.showTotal(parseInt(res.data.total));\n            this.setState({\n                pagination\n            });\n            let data = res['data']['slb'];\n            let tableData = [];\n            for (let i = 0; i < data.length; i++) {\n                tableData.push({\n                    key: data[i]['ID'],\n                    ID: data[i]['ID'],\n                    LoadBalancerId: data[i]['LoadBalancerId'],\n                    LoadBalancerName: data[i]['LoadBalancerName'],\n                    Address: data[i]['Address'],\n                    InternetChargeType: data[i]['InternetChargeType'],\n                    CreateTime: moment(data[i]['CreateTime']).format(\"YYYY-MM-DD\"),\n                    LoadBalancerStatus: data[i]['LoadBalancerStatus'],\n                    CloudAccountName: data[i]['CloudAccountName'],\n                });\n            }\n            this.setState({tableData: tableData, tableLoading: false});\n        }).catch((err)=>{\n            message.error(err)\n        });\n    };\n\n    showChart = () => {\n        let myChart = echarts.init(document.getElementById('ecsMonitorChart'));\n        let option = {\n            tooltip : {\n                trigger: 'axis',\n                axisPointer: {\n                    label: {\n                        backgroundColor: '#623485'\n                    }\n                }\n            },\n            xAxis : [\n                {\n                    type : 'category',\n                    boundaryGap : false,\n                    data : this.state.chartXData\n                }\n            ],\n            yAxis : [\n                {\n                    type : 'value',\n                    axisLabel:{\n                        margin: 7,\n                        formatter: '{value} '+ this.state.chartFormat,\n                        textStyle:{\n                            color: '#999',\n                            fontSize: '12px'\n                        },\n                    },\n                }\n            ],\n            series : [\n                {\n                    type:'line',\n                    itemStyle : {\n                        normal : {\n                            color:'rgba(43, 182, 243, 0.65)',\n                            lineStyle: {\n                                color: \"rgba(43, 182, 243, 0.65)\",\n                                shadowColor: \"rgba(43, 182, 243, 0.65)\",\n                                shadowBlur: 10,\n                            },\n                            areaStyle: {\n                                color: \"rgba(43, 182, 243, 0.65)\",\n                                shadowColor: \"rgba(43, 182, 243, 0.65)\",\n                                shadowBlur: 10,\n                            },\n                        }\n                    },\n                    data: this.state.chartYData\n                }\n            ]\n        };\n        myChart.setOption(option);\n    };\n\n    openMonitorDrawer = (data) => {\n        this.setState({ drawerVisible: true, instanceId: data.LoadBalancerId, currentServerDetail: data }, ()=>{\n            this.refreshMonitorData(data.LoadBalancerId, this.state.timeTagValue, this.state.metricTagValue);\n            this.refreshSeverDetail();\n        });\n    };\n\n    refreshMonitorData = (instanceId, timeTagValue, metricTagValue) => {\n        this.setState({chartLoading: true});\n        getCloudMonitorSlb(instanceId, timeTagValue, metricTagValue).then((res)=>{\n            if(res['code'] !== 0){\n                message.error(res['msg']);\n                this.setState({chartLoading: false});\n                return;\n            }\n            if(res['data']['Datapoints']===\"\"){\n                message.warn(\"未获取到监控数据，可能是非阿里云机器或其它原因！\");\n                this.setState({chartLoading: false});\n                return;\n            }\n            let dataPoints = JSON.parse(res['data']['Datapoints']);\n            let chartXData = [];\n            let chartYData = [];\n            for(let i=0; i<dataPoints.length; i++){\n                chartXData.push(moment(dataPoints[i]['timestamp']).format(\"DD日HH:mm\"));\n                chartYData.push(dataPoints[i]['Average']);\n            }\n            this.setState({chartXData: chartXData, chartYData: chartYData}, ()=>{\n                this.setState({chartLoading: false});\n                this.showChart();\n            });\n        }).catch((err)=>{\n            console.log(err)\n        });\n    };\n\n    // 获取服务器的详细信息\n    refreshSeverDetail = (e) => {\n        this.setState({serverDetailLoading: true});\n        getCloudSlbDetail(this.state.currentServerDetail.ID).then((res)=>{\n            if(res['code'] !== 0){\n                message.error(res['msg']);\n            }\n            this.setState({currentServerDetail: res['data']}, ()=> {\n                this.setState({serverDetailLoading: false});\n            });\n        }).catch((err)=>{\n            console.log(err)\n        });\n    };\n\n    changePage = (e) => {\n        this.setState({\n            pagination: {\n                ...this.state.pagination,\n                page: e,\n                current: e\n            }\n        }, ()=>{\n            this.refreshTableData();\n        });\n    };\n\n    slbDelete(data) {\n        deleteCloudSlb(data.ID).then((res)=>{\n            if(res.code===0){\n                message.success(\"删除成功\");\n                this.refreshTableData();\n            } else {\n                message.error(res.msg);\n            }\n        }).catch((err)=>{\n            message.error(err.toLocaleString());\n        })\n    }\n\n    keywordOnChange = (e) => {\n        this.setState({queryKeyword: e.target.value});\n    };\n\n    handleCloudAccountChange = (queryCloudAccount) => {\n        this.setState({queryCloudAccount});\n    };\n\n    // 用户自定义查询\n    handleQuery = () => {\n        this.setState({\n            pagination: {\n                ...this.state.pagination,\n                page: 1,\n                current: 1,\n            }\n        }, ()=>{\n            this.refreshTableData();\n        });\n    };\n\n    onCloseDrawer = () => {\n        this.setState({ drawerVisible: false })\n    };\n\n    handleTimeTagChange = (e) => {\n        this.setState({ timeTagValue: e.target.value });\n        this.refreshMonitorData(this.state.instanceId, e.target.value, this.state.metricTagValue);\n    };\n\n    handleMetricTagChange = (e) => {\n        this.setState({ metricTagValue: e.target.value });\n        switch (e.target.value) {\n            case \"ActiveConnection\":\n                this.setState({chartFormat: \"Count\"});\n                break;\n            case \"MaxConnection\":\n                this.setState({chartFormat: \"Count\"});\n                break;\n            case \"HeathyServerCount\":\n                this.setState({chartFormat: \"Count\"});\n                break;\n            case \"UnhealthyServerCount\":\n                this.setState({chartFormat: \"Count\"});\n                break;\n            default:\n                this.setState({chartFormat: \"\"});\n                break;\n        }\n        this.refreshMonitorData(this.state.instanceId, this.state.timeTagValue, e.target.value);\n    };\n\n    onSelectChange = selectedRowKeys => {\n        this.setState({ selectedRowKeys });\n    };\n\n    render() {\n        let accountOptions;\n        accountOptions = this.state.cloudAccountList.map((item)=>{\n            return (\n                <Option key={item.id} value={item.id}>{item.accountName}</Option>\n            );\n        });\n        const { selectedRowKeys } = this.state;\n        const rowSelection = {\n            selectedRowKeys,\n            onChange: this.onSelectChange,\n        };\n        return (\n          <Content style={{\n              background: '#fff', padding: \"5px 20px\", margin: 0, height: \"100%\",\n          }}>\n              <OpsBreadcrumbPath pathData={[\"云资源\", \"负载均衡\", \"负载均衡列表\"]} />\n              <Row style={{ padding: \"0px 0px 10px 0px\" }}>\n                  <Col span={6} className=\"col-span\">\n                      <Input style={{ width: \"100%\" }} placeholder=\"输入实例id\\名称\\服务地址查询\" value={this.state.queryKeyword} onChange={this.keywordOnChange} />\n                  </Col>\n                  <Col span={4} className=\"col-span\">\n                      <Select defaultValue={this.state.queryCloudAccount} style={{ width: \"100%\" }} onChange={this.handleCloudAccountChange}>\n                          <Option value=\"0\">所有云账号</Option>\n                          {accountOptions}\n                      </Select>\n                  </Col>\n                  <Col span={2} className=\"col-span\">\n                      <Button style={{ width: \"100%\" }} type=\"primary\" icon=\"search\" onClick={this.handleQuery}>查 询</Button>\n                  </Col>\n              </Row>\n\n              <div>\n                  <Drawer\n                      title=\"实例详情及监控数据\"\n                      placement={this.state.drawerPlacement}\n                      closable={true}\n                      destroyOnClose={true}\n                      onClose={this.onCloseDrawer}\n                      visible={this.state.drawerVisible}\n                      width={950}\n                  >\n                      <Tabs defaultActiveKey=\"1\" tabPosition=\"left\" style={{ marginLeft: -30 }}>\n                          <TabPane tab=\"监控详情\" key=\"1\">\n                              <Spin tip=\"图表生成中...\" spinning={this.state.chartLoading}>\n                                  <Row style={{ marginBottom: \"10px\" }}>\n                                      <Col span={3} style={{ lineHeight: \"30px\" }}>时间维度：</Col>\n                                      <Col span={15}>\n                                          <Radio.Group value={this.state.timeTagValue} onChange={this.handleTimeTagChange}>\n                                              <Radio.Button value=\"1h\">1小时</Radio.Button>\n                                              <Radio.Button value=\"6h\">6小时</Radio.Button>\n                                              <Radio.Button value=\"12h\">12小时</Radio.Button>\n                                              <Radio.Button value=\"1d\">1 天</Radio.Button>\n                                              <Radio.Button value=\"3d\">3 天</Radio.Button>\n                                              <Radio.Button value=\"7d\">7 天</Radio.Button>\n                                              <Radio.Button value=\"14d\">14 天</Radio.Button>\n                                          </Radio.Group>\n                                      </Col>\n                                  </Row>\n                                  <Row>\n                                      <Col span={3} style={{ lineHeight: \"30px\" }}>监控维度：</Col>\n                                      <Col span={16}>\n                                          <Radio.Group value={this.state.metricTagValue} onChange={this.handleMetricTagChange}>\n                                              <Radio.Button value=\"ActiveConnection\">端口当前活跃连接数</Radio.Button>\n                                              <Radio.Button value=\"MaxConnection\">端口当前并发连接数</Radio.Button>\n                                              <Radio.Button value=\"HeathyServerCount\">后端健康ECS实例个数</Radio.Button>\n                                              <Radio.Button value=\"UnhealthyServerCount\">后端异常ECS实例个数</Radio.Button>\n                                          </Radio.Group>\n                                      </Col>\n                                  </Row>\n                                  <Row>\n                                      <Col>\n                                          <div id=\"ecsMonitorChart\" style={{height:500}}>\n                                          </div>\n                                      </Col>\n                                  </Row>\n                              </Spin>\n                          </TabPane>\n                          <TabPane tab=\"信息详情\" key=\"2\">\n                              <Spin tip=\"数据获取中...\" spinning={this.state.serverDetailLoading}>\n                                  <Descriptions title=\"基本信息\" bordered size=\"small\" column={2}>\n                                      <Descriptions.Item label=\"实例ID\">{this.state.currentServerDetail.LoadBalancerId}</Descriptions.Item>\n                                      <Descriptions.Item label=\"实例名称\">{this.state.currentServerDetail.LoadBalancerName}</Descriptions.Item>\n                                      <Descriptions.Item label=\"实例状态\">{this.state.currentServerDetail.LoadBalancerStatus}</Descriptions.Item>\n                                      <Descriptions.Item label=\"服务地址\">{this.state.currentServerDetail.Address}</Descriptions.Item>\n                                      <Descriptions.Item label=\"计费方式\">{this.state.currentServerDetail.InternetChargeType}</Descriptions.Item>\n                                      <Descriptions.Item label=\"付费类型\">{this.state.currentServerDetail.PayType}</Descriptions.Item>\n                                      <Descriptions.Item label=\"IP版本\">{this.state.currentServerDetail.AddressIPVersion}</Descriptions.Item>\n                                      <Descriptions.Item label=\"创建时间\">{this.state.currentServerDetail.CreateTime}</Descriptions.Item>\n                                  </Descriptions>\n                              </Spin>\n                          </TabPane>\n                      </Tabs>\n                  </Drawer>\n                  <Table\n                      columns={this.state.columns}\n                      dataSource={this.state.tableData}\n                      scroll={{ x: 'max-content' }}\n                      pagination={this.state.pagination}\n                      loading={this.state.tableLoading}\n                      rowClassName=\"fixedHeight\"\n                      bordered\n                      size=\"small\"\n                      rowSelection={rowSelection}\n                  />\n              </div>\n          </Content>\n      );\n  }\n}\n\nexport default SlbContent;\n","import React, { Component, Fragment } from 'react';\nimport {Button, Layout, Table, Modal, Form, Input, Select, Popconfirm, Divider, Typography} from 'antd';\nimport { message } from 'antd';\nimport {deleteCloudAccouts, getCloudAccouts, postCloudAccouts, putCloudAccouts} from \"../../api/cloud\";\nimport OpsBreadcrumbPath from \"../breadcrumb_path\";\n\nconst { Text, Paragraph } = Typography;\nconst { Content } = Layout;\nconst { Option } = Select;\n\nclass CloudContent extends Component {\n\n    constructor(props){\n        super(props);\n        this.onShowSizeChange = this.onShowSizeChange.bind(this);\n        this.state = {\n            columns: [\n                {\n                    title: '云类型', dataIndex: 'accountType', key: 'accountType', className: 'small_font',\n                    render: value => {\n                        return (\n                            <Text ellipsis={true}>{value}</Text>\n                        )\n                    }\n                },\n                {\n                    title: '账号名称', dataIndex: 'accountName', key: 'accountName', className: 'small_font',\n                    render: value => {\n                        return (\n                            <Text ellipsis={true}>{value}</Text>\n                        )\n                    }\n                },\n                {\n                    title: '账号密码', dataIndex: 'accountPwd', key: 'accountPwd', className: 'small_font',\n                    render: value => {\n                        return (\n                            <Text ellipsis={true}>{value}</Text>\n                        )\n                    }\n                },\n                {\n                    title: '访问key', dataIndex: 'accountKey', key: 'accountKey', className: 'small_font',\n                    render: value => {\n                        return (\n                            <Paragraph style={{marginBottom: 0}} copyable>{value}</Paragraph>\n                        );\n                    }\n                },\n                {\n                    title: '访问secret', dataIndex: 'accountSecret', key: 'accountSecret', className: 'small_font',\n                    render: value => {\n                        return (\n                            <Paragraph style={{marginBottom: 0}} copyable>{value}</Paragraph>\n                        );\n                    }\n                },\n                {\n                    title: '所属区域', dataIndex: 'accountRegion', key: 'accountRegion', className: 'small_font',\n                    render: value => {\n                        return (\n                            <Text ellipsis={true}>{value}</Text>\n                        )\n                    }\n                },\n                {\n                    title: '操作',\n                    key: 'operation',\n                    fixed: 'right',\n                    width: 160,\n                    align: 'center',\n                    className: 'small_font',\n                    render: (text, record) => {\n                        let superOper;\n                        if(this.props.isSuperAdmin){\n                            superOper = (\n                                <Fragment>\n                                    <Button type=\"primary\" size=\"small\" onClick={this.handleEditAccountInfo.bind(this, record)}>编辑</Button>\n                                    <Divider type=\"vertical\" />\n                                    <Popconfirm\n                                        title=\"确定删除该项内容?\"\n                                        onConfirm={this.confirm.bind(this, record)}\n                                        okText=\"确认\"\n                                        cancelText=\"取消\"\n                                    >\n                                        <Button type=\"danger\" size=\"small\">删除</Button>\n                                    </Popconfirm>\n                                </Fragment>\n                            );\n                        } else {\n                            superOper = (<span>无操作权限</span>);\n                        }\n                        return (\n                            <div>\n                                { superOper }\n                            </div>\n                        )\n                    },\n                },\n            ],\n            tableData: [],\n            tableLoading: false,\n            add_new_account_visible: false,\n            current_data_id: null,\n            pagination: {\n                showSizeChanger: true,\n                pageSizeOptions: ['10', '20', '30', '100'],\n                onShowSizeChange: this.onShowSizeChange,\n                showQuickJumper: false,\n                showTotal: (total) => `共 ${total} 条`,\n                pageSize: 10,\n                page: 1,\n                total: 0,\n                onChange: (current) => this.changePage(current),\n            },\n        }\n    }\n\n    onShowSizeChange(current, size){\n        this.setState({\n            pagination: {\n                ...this.state.pagination,\n                page: 1,\n                current: 1,\n                pageSize: size,\n            }\n        }, ()=>{\n            this.refreshTableData();\n        });\n    }\n\n    confirm = (e) => {\n        this.handleDeleteAccountInfo(e);\n    };\n\n    showAddAccountModal = () => {\n        this.props.form.resetFields();\n        this.setState({\n            current_data_id: null,\n            add_new_account_visible: true,\n        });\n    };\n\n    handleAddAccountSubmit = (e) => {\n        e.preventDefault();\n        this.props.form.validateFields((err, values) => {\n            if (!err) {\n                if(this.state.current_data_id != null){\n                    values['id'] = this.state.current_data_id;\n                    putCloudAccouts(values).then((res)=>{\n                        if(res.code === 0){\n                            this.setState({\n                                add_new_account_visible: false,\n                            });\n                            message.success(\"更新成功！\");\n                        }\n                        this.refreshTableData();\n                        this.props.form.resetFields();\n                    }).catch((err)=>{\n                        console.log(err)\n                    });\n                } else {\n                    postCloudAccouts(values).then((res)=>{\n                        if(res.code === 0){\n                            this.setState({\n                                add_new_account_visible: false,\n                            });\n                            this.props.form.resetFields();\n                            message.success(\"新增成功！\");\n                        }\n                        this.refreshTableData();\n                    }).catch((err)=>{\n                        console.log(err)\n                    });\n                }\n            }\n        });\n    };\n\n    handleAddAccountCancel = (e) => {\n        this.props.form.resetFields();\n        this.setState({\n            add_new_account_visible: false,\n        });\n    };\n\n    handleEditAccountInfo = (e) => {\n        this.props.form.setFieldsValue({\n            id: e.id,\n            accountType: e.accountType,\n            accountName: e.accountName,\n            accountPwd: e.accountPwd,\n            accountKey: e.accountKey,\n            accountSecret: e.accountSecret,\n            accountRegion: e.accountRegion,\n            bankAccount: e.bankAccountId,\n        });\n        this.setState({\n            current_data_id: e.id,\n            add_new_account_visible: true,\n        });\n    };\n\n    handleDeleteAccountInfo = (e) => {\n        deleteCloudAccouts({\"id\": e.id}).then((res)=>{\n            if(res.code === 0){\n                message.success(\"删除成功！\");\n            }\n            this.refreshTableData();\n        }).catch((err)=>{\n            console.log(err)\n        });\n    };\n\n    changePage = (e) => {\n        this.setState({\n            pagination: {\n                ...this.state.pagination,\n                page: e\n            }\n        }, ()=>{\n            this.refreshTableData();\n        });\n    };\n\n    refreshTableData = () => {\n        this.setState({tableLoading: true});\n        getCloudAccouts(this.state.pagination.page, this.state.pagination.pageSize).then((res)=>{\n            const pagination = this.state.pagination;\n            pagination.total = parseInt(res.data.total);\n            pagination.page = parseInt(res.data.page);\n            pagination.showTotal(parseInt(res.data.total));\n            this.setState({\n                pagination\n            });\n            let data = res['data']['accounts'];\n            let tableData = [];\n            for (let i = 0; i < data.length; i++) {\n                tableData.push({\n                    id: data[i]['id'],\n                    key: data[i]['id'],\n                    accountType: data[i]['accountType'],\n                    accountName: data[i]['accountName'],\n                    accountPwd: data[i]['accountPwd'],\n                    accountKey: data[i]['accountKey'],\n                    accountSecret: data[i]['accountSecret'],\n                    accountRegion: data[i]['accountRegion'],\n                    bankAccountId: data[i]['bankAccountId'],\n                });\n            }\n            this.setState({tableData: tableData, tableLoading: false});\n        }).catch((err)=>{\n            console.log(err)\n        });\n    };\n\n    componentDidMount() {\n        this.refreshTableData();\n    }\n\n    render() {\n        const { getFieldDecorator } = this.props.form;\n        const formItemLayout = {\n            labelCol: { span: 7 },\n            wrapperCol: { span: 14 },\n        };\n        return (\n            <Content style={{\n                background: '#fff', padding: 20, margin: 0, height: \"100%\",\n            }}>\n                <OpsBreadcrumbPath pathData={[\"云资源\", \"云账号\", \"账号列表\"]} />\n                { this.props.isSuperAdmin ? (\n                    <div style={{ marginBottom: 10 }}>\n                        <Button type=\"primary\" onClick={this.showAddAccountModal}>新增账号</Button>\n                    </div>\n                ) : \"\"}\n                <Modal\n                    title=\"云账号信息详情\"\n                    visible={this.state.add_new_account_visible}\n                    onOk={this.handleAddAccountSubmit}\n                    onCancel={this.handleAddAccountCancel}\n                    okText=\"确认\"\n                    cancelText=\"取消\"\n                >\n                    <Form>\n                        <Form.Item label=\"云账号类型\" {...formItemLayout}>\n                            {getFieldDecorator('accountType', {\n                                rules: [{ required: true, message: '账号类型不能为空！' }],\n                                initialValue: \"阿里云\"\n                            })(\n                                <Select\n                                    size=\"default\"\n                                >\n                                    <Option value=\"阿里云\">阿里云</Option>\n                                </Select>\n                            )}\n                        </Form.Item>\n                        <Form.Item label=\"云账号名称\" {...formItemLayout}>\n                            {getFieldDecorator('accountName', {\n                                rules: [{ required: true, message: '账号名称不能为空！' }],\n                            })(\n                                <Input />\n                            )}\n                        </Form.Item>\n                        <Form.Item label=\"云账号密码\" {...formItemLayout}>\n                            {getFieldDecorator('accountPwd', {\n                                rules: [{ required: true, message: '账号密码不能为空！' }],\n                            })(\n                                <Input />\n                            )}\n                        </Form.Item>\n                        <Form.Item label=\"云账号key\" {...formItemLayout}>\n                            {getFieldDecorator('accountKey', {\n                                rules: [{ required: true, message: '账号key不能为空！' }],\n                            })(\n                                <Input />\n                            )}\n                        </Form.Item>\n                        <Form.Item label=\"云账号secret\" {...formItemLayout}>\n                            {getFieldDecorator('accountSecret', {\n                                rules: [{ required: true, message: '账号secret不能为空！' }],\n                            })(\n                                <Input />\n                            )}\n                        </Form.Item>\n                        <Form.Item label=\"所属区域\" {...formItemLayout}>\n                            {getFieldDecorator('accountRegion', {\n                                rules: [{ required: true, message: '所属区域不能为空！' }],\n                            })(\n                                <Input />\n                            )}\n                        </Form.Item>\n                    </Form>\n                </Modal>\n                <Table columns={this.state.columns} dataSource={this.state.tableData} scroll={{ x: 'max-content' }} pagination={this.state.pagination} loading={this.state.tableLoading} rowClassName=\"fixedHeight\" bordered size=\"small\" />\n            </Content>\n        );\n    }\n}\n\nCloudContent = Form.create({ name: 'cloudAccount' })(CloudContent);\n\nexport default CloudContent;\n","import req from \"../utils/axios\";\n\nconst postAddDailyJob = (data) =>{\n    return req.post('daily_job/', data)\n};\nexport {postAddDailyJob}\n\nconst getDailyJobs = (params) =>{\n    return req.get('daily_job/',params)\n};\nexport {getDailyJobs}\n\nconst getDailyJobDetail = (id) =>{\n    return req.get('daily_job/info/'+id)\n};\nexport {getDailyJobDetail}\n\nconst putDailyJob = (data) =>{\n    return req.put('daily_job/', data)\n};\nexport {putDailyJob}\n\nconst putDailyJobExecutorUser = (data) =>{\n    return req.put('daily_job/executorUser', data)\n};\nexport {putDailyJobExecutorUser}","import React, { Component, Fragment } from 'react';\nimport OpsBreadcrumbPath from '../breadcrumb_path';\nimport {\n    Steps, Button, message, Input, Carousel, Icon,\n    Form, Cascader, Radio, Tooltip, Card, Alert, Row, Select, Layout,\n} from 'antd';\nimport \"../../assets/css/job.css\";\nimport Col from \"antd/es/grid/col\";\nimport {postAddDailyJob} from \"../../api/daily_task\";\n\nconst Step = Steps.Step;\nconst { Content } = Layout;\nconst { Option } = Select;\nconst {TextArea} = Input;\n\nconst options = [\n    {\n        value: '日常工作',\n        label: '日常工作',\n        children: [\n            {\n                value: '协助',\n                label: '协助',\n            }\n        ],\n    },\n];\n\nconst ConfigTemplate = {\n    \"\": [{\n        'field': 'task_content',\n        'text': '问题描述',\n        'type': \"text\",\n        'errorMessage': '请输入具体问题描述',\n        'required': true\n    }],\n    \"日常工作-协助\": [\n        {\n            'field': 'task_content',\n            'text': '工作内容',\n            'type': \"text\",\n            'errorMessage': '请输入具体工作内容',\n        },\n        {\n            'field': 'open_deploy_auto_config',\n            'text': '自定义项',\n            'type': \"kvinput\",\n        }\n    ],\n};\n\n\nclass KvIput extends Component {\n\n    constructor(props){\n        super(props);\n        this.addNewConfig = this.addNewConfig.bind(this);\n        this.state = {\n            configCount: 0,\n            configData: [],\n        };\n    }\n\n    componentDidMount() {\n        this.onChange = this.props.onChange;\n    }\n\n    deleteConfigItem(data){\n        let index = data.index;\n        let configData = this.state.configData;\n        configData.splice(index, 1);\n        this.setState({configData});\n        this.onChange(this.state.configData);\n    }\n\n    addNewConfig(){\n        let configData = this.state.configData;\n        configData.push({\n            key: \"\",\n            value: \"\"\n        });\n        this.setState(configData);\n    }\n\n    handleKeyChange(data, e) {\n        let index = data['index'];\n        let configData = this.state.configData;\n        configData[index][\"key\"] = e.target.value;\n        this.setState(configData);\n        this.onChange(this.state.configData);\n    }\n\n    handleValueChange(data, e) {\n        let index = data['index'];\n        let configData = this.state.configData;\n        configData[index][\"value\"] = e.target.value;\n        this.setState(configData);\n        this.onChange(this.state.configData);\n    }\n\n    render() {\n        let configItem = this.state.configData.map((item, index)=>{\n           return (\n               <Row>\n                   <Col span={10} style={{ marginRight: 10 }}>\n                       <Input key=\"k{index}\" addonBefore=\"键\" value={item.key} onChange={this.handleKeyChange.bind(this, {index})}/>\n                   </Col>\n                   <Col span={10} style={{ marginRight: 10 }}>\n                       <Input key=\"v{index}\" addonBefore=\"值\" value={item.value} onChange={this.handleValueChange.bind(this, {index})}/>\n                   </Col>\n                   <Col span={2}>\n                       <Button type=\"danger\" icon=\"minus-circle\" shape=\"circle\" onClick={this.deleteConfigItem.bind(this, {index})} />\n                   </Col>\n               </Row>\n           )\n        });\n        return (\n            <Fragment>\n                {configItem}\n                <Row>\n                    <Col span={5}>\n                        <Button type=\"primary\" icon=\"plus-circle\" onClick={this.addNewConfig}>添加新项</Button>\n                    </Col>\n                </Row>\n            </Fragment>\n        )\n    }\n}\n\nclass JobBaseInfo extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            deptData: []\n        }\n    }\n\n    render() {\n        const {getFieldDecorator} = this.props.form;\n        const formItemLayout = {\n            labelCol: {span: 8},\n            wrapperCol: {span: 10},\n        };\n        return (\n            <Content style={{\n                height: \"100%\",\n            }}>\n                <Form>\n                    <Form.Item {...formItemLayout} label='工单名称'>\n                        {getFieldDecorator('jobName', {\n                            rules: [{ required: true, message: '请输入工单任务名称' }],\n                        })(\n                            <Input placeholder='请输入工单任务名称' />\n                        )}\n                    </Form.Item>\n                    <Form.Item {...formItemLayout} label='工单类型'>\n                        {getFieldDecorator('jobType', {\n                            rules: [{ required: true, message: '请选择工单类型' }],\n                        })(\n                            <Cascader\n                                placeholder='请选择工单类型'\n                                options={options}\n                            />\n                        )}\n                    </Form.Item>\n\n                    <Form.Item {...formItemLayout} label='该任务紧急程度' style={{ textAlign: \"left\" }}>\n                        {getFieldDecorator('importantDegree', {\n                            initialValue: \"普通\",\n                            rules: [{ required: true, message: '请选择任务紧急程度' }],\n                        })(\n                            <Radio.Group buttonStyle=\"solid\">\n                                <Tooltip placement=\"topLeft\" title=\"等待相关人员根据自身任务项安排时间处理\">\n                                    <Radio.Button value=\"普通\">普通</Radio.Button>\n                                </Tooltip>\n                                <Tooltip placement=\"topLeft\" title=\"需要在半小时内处理完成\">\n                                    <Radio.Button value=\"紧急\">紧急</Radio.Button>\n                                </Tooltip>\n                                <Tooltip placement=\"topLeft\" title=\"需要立即安排人员处理\">\n                                    <Radio.Button value=\"非常紧急\">非常紧急</Radio.Button>\n                                </Tooltip>\n                            </Radio.Group>\n                        )}\n                    </Form.Item>\n                </Form>\n            </Content>\n        )\n    }\n}\n\nJobBaseInfo = Form.create({ name: 'JobBaseInfoForm' })(JobBaseInfo);\n\nclass JobConfigInfo extends Component {\n\n    constructor(props){\n        super(props);\n        this.getFormInputContent = this.getFormInputContent.bind(this);\n        this.state = {\n        }\n    }\n\n    getFormInputContent(input){\n        let res;\n        switch (input.type) {\n            case \"char\":\n                res = <Input />;\n                break;\n            case \"text\":\n                res = <TextArea rows={4} />;\n                break;\n            case \"select\":\n                res = (\n                    <Select style={{ width: 120 }}>\n                        {\n                            input.options.map((item, index)=>{\n                                return (\n                                    <Option key={index} value={item}>{item}</Option>\n                                )\n                            })\n                        }\n                    </Select>\n                );\n                break;\n            case \"kvinput\":\n                res = <KvIput setFieldsValue={this.props.form.setFieldsValue}/>;\n                break;\n            default:\n                res = <Input />;\n                break;\n        }\n        return res;\n    }\n\n    render() {\n        const {getFieldDecorator} = this.props.form;\n        const formItemLayout = {\n            labelCol: {span: 4},\n            wrapperCol: {span: 18},\n        };\n        let configData = ConfigTemplate[this.props.jobType];\n        if(configData===undefined){\n            configData = ConfigTemplate[\"\"];\n        }\n        let configDataForm;\n        configDataForm = configData.map((item, index)=>{\n            return (\n                <Form.Item key={index} {...formItemLayout} label={item.text} style={{ textAlign: \"left\" }}>\n                    {getFieldDecorator(item.field, ({\n                        rules: [{ required: item.required, message: item.errorMessage }],\n                    }))(\n                        this.getFormInputContent(item)\n                    )}\n                </Form.Item>\n            )\n        });\n        return (\n            <Content style={{\n                height: \"100%\",\n            }}>\n                <Form>\n                    <Form.Item {...formItemLayout} label='关健信息' required={true}>\n                        <Card span={20} size=\"small\" title=\"填写完善和准确可以提高工单处理效率哦\"\n                              headStyle={{ backgroundColor: \"#e6f7ff\", fontWeight: \"350\" }}>\n                            {configDataForm}\n                        </Card>\n                    </Form.Item>\n                    <Row style={{ marginBottom: 10 }}>\n                        <Col span={4}/>\n                        <Col span={18}>\n                            <Alert\n                                message=\"你可以在备注信息中填写注意事项，可以避免执行过程中出错哦\"\n                                type=\"info\"\n                                closable\n                            />\n                        </Col>\n                    </Row>\n                    <Form.Item {...formItemLayout} label='备注信息'>\n                        {getFieldDecorator('remark')(\n                            <TextArea rows={4} />\n                        )}\n                    </Form.Item>\n                </Form>\n            </Content>\n        )\n    }\n}\nJobConfigInfo = Form.create({ name: 'JobConfigInfoForm' })(JobConfigInfo);\n\nclass Deploy_project_content extends Component {\n\n    constructor(props) {\n        super(props);\n        this.submitJobForm = this.submitJobForm.bind(this);\n        this.state = {\n            current: 0,\n            stepStatus: \"wait\",\n            jobTypeStr: \"\",\n            form1Data: null,\n            form2Data: null,\n            submitLoading: false,\n        }\n    }\n\n    componentDidMount() {\n    }\n\n    next() {\n        if(this.state.current===0){ // 工单基本信息\n            let baseInfoForm = this.baseInfo.props.form;\n            baseInfoForm.validateFields((err, values) => {\n                if(err){\n                    this.setState({stepStatus: \"error\"});\n                } else {\n                    const current = this.state.current + 1;\n                    let form1Data = Object.assign({}, this.state.form1Data, values);\n                    this.setState({\n                        current,\n                        stepStatus: \"process\",\n                        jobTypeStr: values.jobType.join(\"-\"),\n                        form1Data: form1Data,\n                    });\n                    this.carousel.next();\n                }\n            });\n        }\n    }\n\n    prev() {\n        switch (this.state.current) {\n            case 2:\n                this.setState({form3Data: null});\n                break;\n            case 1:\n                this.setState({form2Data: null});\n                break;\n            default:\n                break;\n        }\n        const current = this.state.current - 1;\n        this.setState({ current });\n        this.carousel.prev();\n    }\n\n    submitJobForm() {\n        let configInfoForm = this.configInfo.props.form;\n        configInfoForm.validateFields((err, values) => {\n            if(err){\n                this.setState({stepStatus: \"error\"});\n            } else {\n                let form2Data = Object.assign({}, this.state.form2Data, values);\n                this.setState({\n                    stepStatus: \"finish\",\n                    form2Data: form2Data,\n                }, ()=>{\n                    this.setState({submitLoading: true});\n                    let reqData = {\n                        ...this.state.form1Data,\n                        ...this.state.form2Data,\n                        jobType: this.state.form1Data[\"jobType\"].join(\"-\"),\n                        open_deploy_auto_config: JSON.stringify(this.state.form2Data.open_deploy_auto_config),\n                    };\n                    postAddDailyJob(reqData).then((res)=>{\n                        if(res.code===0){\n                            this.setState({submitLoading: false});\n                            message.success(res.msg);\n                            this.props.history.push('/admin/task/jobs');\n                        } else {\n                            this.setState({submitLoading: false});\n                            message.error(res.msg);\n                        }\n                    }).catch((err)=>{\n                        this.setState({submitLoading: false});\n                        message.error(err.toLocaleString());\n                    })\n                });\n\n            }\n        });\n    }\n\n    render() {\n        const { current } = this.state;\n        return (\n            <Content style={{\n                background: '#fff', margin: 0, height: \"100%\",\n            }}>\n                <OpsBreadcrumbPath pathData={[\"工作协助\", \"日常工单\"]} />\n                <Steps current={current} size=\"small\" style={{ marginTop: 20 }} status={this.state.stepStatus}>\n                    <Step title='任务基本信息' icon=<Icon type=\"solution\" /> />\n                    <Step title='任务详情' icon=<Icon type=\"highlight\" /> />\n                </Steps>\n                <div className=\"steps-content\" style={{ textAlign: 'center', padding: 20 }}>\n                    <Carousel ref={(carousel)=>{this.carousel=carousel;}} dots={false} effect=\"fade\"\n                              adaptiveHeight={true} style={{textAlign: \"center\"}}\n                    >\n                        <Fragment key={1}>\n                            <JobBaseInfo wrappedComponentRef={(baseInfo)=>{this.baseInfo=baseInfo}} />\n                        </Fragment>\n                        <Fragment key={2}>\n                            <JobConfigInfo wrappedComponentRef={(configInfo)=>{this.configInfo=configInfo}}\n                                           jobType={this.state.jobTypeStr}\n                                           loadConfigDataTemplateSpin={this.state.loadConfigDataTemplateSpin}\n                            />\n                        </Fragment>\n                    </Carousel>\n                </div>\n                <div className=\"steps-action\" style={{ textAlign: \"center\", marginTop: 20 }}>\n                    {\n                        current < 1\n                        && <Button type=\"primary\" onClick={() => this.next()}>下一步</Button>\n                    }\n                    {\n                        current === 1\n                        && <Button type=\"primary\" loading={this.state.submitLoading} onClick={this.submitJobForm}>提 交</Button>\n                    }\n                    {\n                        current > 0\n                        && (\n                            <Button style={{ marginLeft: 8 }} onClick={() => this.prev()}>\n                                上一步\n                            </Button>\n                        )\n                    }\n                </div>\n            </Content>\n        );\n    }\n}\n\nexport default Deploy_project_content;\n","import jwt_decode from \"jwt-decode\";\n\nfunction getCurrentUserId() {\n    let token = localStorage.getItem(\"ops_token\");\n    if(token===undefined || token===null || token===\"\"){\n        window.location.href = \"/login\";\n        return\n    }\n    let info = jwt_decode(token);\n    return info['userInfo']['userId'];\n}\n\nfunction isSuperAdmin() {\n    let token = localStorage.getItem(\"ops_token\");\n    if(token===undefined || token===null || token===\"\"){\n        window.location.href = \"/login\";\n        return\n    }\n    let info = jwt_decode(token);\n    return info['userInfo']['isSuperAdmin'];\n}\n\nfunction isShowIntroPage() {\n    let token = localStorage.getItem(\"ops_token\");\n    if(token===undefined || token===null || token===\"\"){\n        window.location.href = \"/login\";\n        return\n    }\n    let info = jwt_decode(token);\n    return info['userInfo']['show_intro'];\n}\n\nexport { getCurrentUserId, isSuperAdmin, isShowIntroPage }\n","import React, {Component, Fragment} from 'react';\nimport OpsBreadcrumbPath from '../breadcrumb_path';\nimport {\n    Button,\n    Col,\n    Divider,\n    Input,\n    Layout,\n    Row,\n    Table,\n    Tag,\n    message,\n    Drawer,\n    Spin,\n    Descriptions,\n    Alert, Card, Typography, Modal, DatePicker\n} from \"antd\";\nimport {getDailyJobDetail, getDailyJobs, putDailyJob, putDailyJobExecutorUser} from \"../../api/daily_task\";\nimport moment from \"moment\";\nimport 'moment/locale/zh-cn';\nimport {getCurrentUserId} from \"../../services/common\";\nimport {ServerBase} from \"../../config\";\nmoment.locale('zh-cn');\n\nconst { TextArea } = Input;\nconst { Text, Paragraph } = Typography;\nconst { Content } = Layout;\n\nconst NULL_TIMESTAMP = \"0001-01-01 00:00:00\";\n\nclass Jobs_content extends Component {\n\n    constructor(props) {\n        super(props);\n        this.downloadFile = this.downloadFile.bind(this);\n        this.ChangeExecutorSelect = this.ChangeExecutorSelect.bind(this);\n        this.onShowSizeChange = this.onShowSizeChange.bind(this);\n        this.changeRefuseReason = this.changeRefuseReason.bind(this);\n        this.autoCreateJob = this.autoCreateJob.bind(this);\n        this.state = {\n            columns: [\n                {\n                    title: 'Id', dataIndex: 'id', key: 'id', className: 'small_font',\n                    render: value => {\n                        return (\n                            <Text ellipsis={true}>{value}</Text>\n                        )\n                    }\n                },\n                {\n                    title: '紧急度', dataIndex: 'important_degree', key: 'important_degree', className: 'small_font',\n                    render: (value) => {\n                        let content;\n                        switch (value) {\n                            case \"非常紧急\":\n                                content = (\n                                    <Tag color=\"#f50\">{value}</Tag>\n                                );\n                                break;\n                            case \"紧急\":\n                                content = (\n                                    <Tag color=\"rgb(255, 147, 137)\">{value}</Tag>\n                                );\n                                break;\n                            default:\n                                content = (\n                                    <Tag color=\"#108ee9\">{value}</Tag>\n                                );\n                                break;\n                        }\n                        return content;\n                    },\n                },\n                {\n                    title: '状态', dataIndex: 'status', key: 'status', className: 'small_font',\n                    render: value => {\n                        const content = this.getStatusText(value);\n                        return (\n                            <Text ellipsis={true}>{content}</Text>\n                        )\n                    }\n                },\n                {\n                    title: '任务名', dataIndex: 'job_name', key: 'job_name', className: 'small_font',\n                    render: value => {\n                        return (\n                            <Text ellipsis={true}>{value}</Text>\n                        )\n                    }\n                },\n                {\n                    title: '任务类型', dataIndex: 'job_type', key: 'job_type', className: 'small_font',\n                    render: value => {\n                        return (\n                            <Text ellipsis={true}>{value}</Text>\n                        )\n                    }\n                },\n                {\n                    title: '创建人', dataIndex: 'creator_user_name', key: 'creator_user_name', className: 'small_font',\n                    render: value => {\n                        return (\n                            <Text ellipsis={true}>{value}</Text>\n                        )\n                    }\n                },\n                {\n                    title: '创建时间', dataIndex: 'create_time', key: 'create_time', width: 150, className: 'small_font',\n                    render: (value) => {\n                        return <Text ellipsis={true}>{moment(value).format(\"MM月DD日HH:mm\")}</Text>\n                    }\n                },\n                {\n                    title: '执行人', dataIndex: 'executor_user_name', key: 'executor_user_name', className: 'small_font',\n                    render: value => {\n                        return (\n                            <Text ellipsis={true}>{value}</Text>\n                        )\n                    }\n                },\n                {\n                    title: '响应时间', dataIndex: 'accept_time', key: 'accept_time', width: 150, className: 'small_font',\n                    render: (value) => {\n                        if(value===NULL_TIMESTAMP){\n                            return <Text ellipsis={true}>-</Text>\n                        }\n                        return <Text ellipsis={true}>{moment(value).format(\"MM月DD日HH:mm\")}</Text>;\n                    }\n                },\n                {\n                    title: '结束时间', dataIndex: 'end_time', key: 'end_time', width: 150, className: 'small_font',\n                    render: (value) => {\n                        if(value===NULL_TIMESTAMP){\n                            return <Text ellipsis={true}>-</Text>\n                        }\n                        return <Text ellipsis={true}>{moment(value).format(\"MM月DD日HH:mm\")}</Text>;\n                    }\n                },\n                {\n                    title: '操作',\n                    key: 'operation',\n                    fixed: 'right',\n                    align: 'center',\n                    className: 'small_font',\n                    render: (text, record) => {\n                        return (\n                            <Fragment>\n                                <Button type=\"primary\" size=\"small\" onClick={this.showJobDetail.bind(this, record)}>详情</Button>\n                                <Divider type=\"vertical\" />\n                                <Button type=\"info\" size=\"small\" disabled={!record.isGetEnable} onClick={this.startJob.bind(this, record.id)}>领取</Button>\n                                <Divider type=\"vertical\" />\n                                <Button type=\"info\" size=\"small\" disabled={!record.isFinishEnable} onClick={this.finishJob.bind(this, record.id)}>完成</Button>\n                                <Divider type=\"vertical\" />\n                                <Button type=\"danger\" size=\"small\"  disabled={!record.isRefuseEnable} onClick={this.refuseJob.bind(this, record.id)}>拒绝</Button>\n                                <Divider type=\"vertical\" />\n                                <Button type=\"danger\" size=\"small\"  disabled={!record.isDeleteEnable} onClick={this.deleteJob.bind(this, record.id)}>删除</Button>\n                            </Fragment>\n                        )\n                    },\n                },\n            ],\n            tableLoading: false,\n            drawerSpinning: false,\n            drawerVisible: false,\n            opsUsersList: [],\n            changeExecutorModalVisible: false,\n            refuseJobModalVisible: false,\n            refuseId: 0,\n            refuseReason: \"\",\n            changeToUserId: 0,\n            jobChangeId: 0,\n            tableData: [],\n            pagination: {\n                showSizeChanger: true,\n                pageSizeOptions: ['10', '20', '30', '100'],\n                onShowSizeChange: this.onShowSizeChange,\n                showQuickJumper: false,\n                showTotal: (total) => `共 ${total} 条`,\n                pageSize: 10,\n                page: 1,\n                total: 0,\n                onChange: (current) => this.changePage(current),\n            },\n            job_file: \"\",\n            queryKeyword: \"\",\n            currentJob: \"\",\n            currentJobDetail: \"\",\n            isGetEnable: true,\n            isFinishEnable: true,\n            isDeleteEnable: true,\n            queryCreateTime: null,\n        }\n    }\n\n    onShowSizeChange(current, size){\n        this.setState({\n            pagination: {\n                ...this.state.pagination,\n                page: 1,\n                current: 1,\n                pageSize: size,\n            }\n        }, ()=>{\n            this.refreshTableData();\n        });\n    }\n\n    changePage = (e) => {\n        this.setState({\n            pagination: {\n                ...this.state.pagination,\n                page: e,\n                current: e\n            }\n        }, ()=>{\n            this.refreshTableData();\n        });\n    };\n\n    componentDidMount() {\n        this.refreshTableData();\n    }\n\n    showJobDetail(data) {\n        this.setState({\n            drawerVisible: true,\n            drawerSpinning: true,\n            currentJob: data,\n        });\n        getDailyJobDetail(data.id).then((res)=>{\n            if(res.code===0){\n                this.setState({\n                    ...res.data,\n                    currentJobDetail: res.data,\n                }, ()=>{\n                    // console.log(this.state);\n                })\n            } else {\n                message.error(res.msg);\n            }\n            this.setState({drawerSpinning: false});\n        }).catch((err)=>{\n            message.error(err.toLocaleString());\n        })\n    }\n\n    startJob(id) {\n        putDailyJob( {\n            id: id,\n            action: \"getJob\"\n        }).then((res)=>{\n            if(res.code===0){\n                let currentJob = Object.assign({}, this.state.currentJob, {isGetEnable: false});\n                message.success(\"领取成功\");\n                this.setState({\n                    currentJob: currentJob\n                });\n                this.refreshTableData();\n            } else {\n                message.error(res.msg);\n            }\n        }).catch((err)=>{\n            message.error(err.toLocaleString());\n        })\n    }\n\n    changeExecutor(id) {\n        this.setState({\n            changeExecutorModalVisible: true,\n            jobChangeId: id,\n        });\n    }\n\n    handlerChangeExecutorCommit = () => {\n        if(this.state.changeToUserId===0){\n            message.error(\"请选择任务执行人\");\n            return\n        }\n        let data = {\n            \"jobId\": this.state.jobChangeId,\n            \"changeUserId\": this.state.changeToUserId\n        };\n        putDailyJobExecutorUser(data).then((res)=>{\n            if(res.code===0){\n                message.success(res.msg);\n                this.setState({changeExecutorModalVisible:false});\n                this.refreshTableData();\n            } else {\n                message.error(res.msg);\n            }\n        }).catch((err)=>{\n            message.error(err.toLocaleString())\n        })\n    };\n\n    ChangeExecutorSelect(data) {\n        this.setState({changeToUserId: data});\n    }\n\n    changeRefuseReason(e) {\n        this.setState({refuseReason: e.target.value});\n    }\n\n    finishJob(id) {\n        putDailyJob( {\n            id: id,\n            action: \"finishJob\"\n        }).then((res)=>{\n            if(res.code===0){\n                message.success(\"成功完成，继续努力\");\n                this.refreshTableData();\n            } else {\n                message.error(res.msg);\n            }\n        }).catch((err)=>{\n            message.error(err.toLocaleString());\n        })\n    }\n\n    refuseJob(id) {\n        this.setState({\n            refuseJobModalVisible: true,\n            refuseId: id,\n        })\n    }\n\n    deleteJob(id) {\n        putDailyJob( {\n            id: id,\n            action: \"deleteJob\"\n        }).then((res)=>{\n            if(res.code===0){\n                message.success(\"删除成功\");\n                this.refreshTableData();\n            } else {\n                message.error(res.msg);\n            }\n        }).catch((err)=>{\n            message.error(err.toLocaleString());\n        })\n    }\n\n    handlerRefuseJobCommit = () => {\n        if(this.state.refuseId===0){\n            message.error(\"未选择拒绝工单\");\n            return\n        }\n        if(this.state.refuseReason===\"\"){\n            message.error(\"必须填写拒绝原因\");\n            return\n        }\n        putDailyJob( {\n            id: this.state.refuseId,\n            refuseReason: this.state.refuseReason,\n            action: \"refuseJob\"\n        }).then((res)=>{\n            if(res.code===0){\n                this.setState({refuseJobModalVisible: false});\n                message.success(\"操作成功\");\n                this.refreshTableData();\n            } else {\n                message.error(res.msg);\n            }\n        }).catch((err)=>{\n            message.error(err.toLocaleString());\n        })\n    };\n\n    downloadFile() {\n        window.open(ServerBase + \"fileDownload?objectName=\"+encodeURIComponent(this.state.job_file), \"_blank\");\n    }\n\n    refreshTableData = () => {\n        this.setState({tableLoading: true});\n        const queryParams = {\n            \"page\": this.state.pagination.page,\n            \"size\": this.state.pagination.pageSize,\n            \"queryKeyword\": this.state.queryKeyword,\n            \"queryCreateTime\": this.state.queryCreateTime,\n        };\n        getDailyJobs(queryParams).then((res)=>{\n            const pagination = this.state.pagination;\n            pagination.total = parseInt(res.data.total);\n            pagination.page = parseInt(res.data.page);\n            pagination.showTotal(parseInt(res.data.total));\n            this.setState({\n                pagination\n            });\n            let data = res['data']['jobs'];\n            let tableData = [];\n            for (let i = 0; i < data.length; i++) {\n                tableData.push({\n                    key: data[i]['id'],\n                    id: data[i]['id'],\n                    job_name: data[i]['job_name'],\n                    job_type: data[i]['job_type'],\n                    important_degree: data[i]['important_degree'],\n                    creator_user_name: data[i]['creator_user_name'],\n                    executor_user_name: data[i]['executor_user_name'],\n                    status: data[i]['status'],\n                    create_time: data[i]['create_time'],\n                    accept_time: data[i]['accept_time'],\n                    end_time: data[i]['end_time'],\n                    approve_id: data[i]['approve_id'],\n                    approve_content: data[i]['approve_content'],\n                    refuse_reason: data[i]['refuse_reason'],\n                    isExecutorChangable: (data[i]['status'] === 2 && data[i]['executor_user_id'] === getCurrentUserId()),\n                    isGetEnable: data[i]['status'] === 1,\n                    isFinishEnable: (data[i]['status'] === 2 && data[i]['executor_user_id'] === getCurrentUserId()),\n                    isDeleteEnable: (data[i]['creator_user_id'] === getCurrentUserId() && data[i]['status'] < 2 ),\n                    isRefuseEnable: data[i]['status'] === 1,\n                });\n            }\n            this.setState({tableData: tableData, tableLoading: false});\n        }).catch((err)=>{\n            console.log(err)\n        });\n    };\n\n    keywordOnChange = (e) => {\n      this.setState({\n          queryKeyword: e.target.value\n      })\n    };\n\n    // 用户自定义查询\n    handleQuery = () => {\n        this.setState({\n            pagination: {\n                ...this.state.pagination,\n                page: 1,\n                current: 1,\n            }\n        }, ()=>{\n            this.refreshTableData();\n        });\n    };\n\n    onDrawerClose = () => {\n        this.setState({\n            drawerVisible: false,\n        });\n    };\n\n    autoCreateJob() {\n        localStorage.setItem('job_template', JSON.stringify(this.state.currentJobDetail));\n        this.props.history.push({pathname: \"/admin/task/deploy_project\"});\n    }\n\n    onQueryDateChange = (moment) => {\n        if(moment == null) {\n            this.setState({queryCreateTime: null});\n        } else {\n            this.setState({queryCreateTime: moment.format(\"YYYY-MM-DD\")});\n        }\n    };\n\n    getStatusText(status) {\n        let content;\n        switch (status) {\n            case 1:\n                content = <Tag color=\"volcano\">待领取</Tag>;\n                break;\n            case 2:\n                content = <Tag color=\"geekblue\">处理中</Tag>;\n                break;\n            case 3:\n                content = <Tag color=\"green\">已完成</Tag>;\n                break;\n            case 0:\n                content = <Tag color=\"magenta\">已拒绝</Tag>;\n                break;\n            default:\n                content = <Tag color=\"lime\">已删除</Tag>;\n                break;\n        }\n        return content;\n    }\n\n    render() {\n        let waitContent;\n        if(this.state.status>0 && this.state.status<3){\n            const m1 = moment(this.state.create_time);\n            const m2 = moment(moment().format('YYYY-MM-DD HH:mm:ss'));\n            let du = moment.duration(m2 - m1, 'ms');\n            waitContent = this.state.creator_user_name + \" 已等待 \" + du.humanize();\n        } else {\n            const m1 = moment(this.state.create_time);\n            const m2 = moment(this.state.end_time);\n            let du = moment.duration(m2-m1, 'ms');\n            waitContent = \"工单用时: \" + du.humanize();\n        }\n        let k8sConfigContent = <Descriptions.Item label=\"无配置\">用户未设置</Descriptions.Item>;\n        if(this.state.open_deploy_auto_config !== undefined &&\n            this.state.open_deploy_auto_config !== \"\" ){\n            let ConfigList = JSON.parse(this.state.open_deploy_auto_config);\n            k8sConfigContent = ConfigList.map((item, index)=>{\n                return (\n                    <Descriptions.Item key={index} label={item.key}>\n                        <Paragraph style={{marginBottom: 0, width: \"300px\" }} ellipsis={true} copyable={item.value!==\"\"}>{item.value}</Paragraph>\n                    </Descriptions.Item>\n                )\n            });\n        }\n        let refuseContent = \"\";\n        if(this.state.status===0){\n            refuseContent = (<Alert\n                style={{marginTop: 10}}\n                message={<Fragment>拒绝原因：{this.state.refuse_reason}</Fragment>}\n                type=\"error\"\n            />)\n        }\n        let titleContent = (\n            <div>\n                <span style={{ marginRight: '20px' }}>工单详情</span>\n            </div>\n        );\n        return (\n            <Content stmayle={{\n                background: '#fff', margin: 0, height: \"100%\",\n            }}>\n                <OpsBreadcrumbPath pathData={[\"工作协助\", \"工单列表\"]} />\n                <div style={{ marginBottom: 20 }}>\n                    <Row>\n                        <Col span={8} className=\"col-span\">\n                            <Input placeholder=\"输入工单名称、创建人、执行人查询\" value={this.state.queryKeyword} onChange={this.keywordOnChange} />\n                        </Col>\n                        <Col span={3} className=\"col-span\">\n                            <DatePicker style={{ width: \"100%\" }} defaultValue={this.state.queryCreateTime} placeholder=\"创建时间\" onChange={this.onQueryDateChange}/>\n                        </Col>\n                        <Col span={3}>\n                            <Button type=\"primary\" icon=\"search\" onClick={this.handleQuery}>查 询</Button>\n                        </Col>\n                    </Row>\n                </div>\n\n                <Modal\n                    title=\"你正在拒绝他人工单，请谨慎操作！\"\n                    visible={this.state.refuseJobModalVisible}\n                    onOk={this.handlerRefuseJobCommit}\n                    onCancel={()=>{this.setState({refuseJobModalVisible: false})}}\n                    style={{ textAlign: \"center\" }}\n                >\n                    <Alert\n                        type=\"warning\"\n                        message=\"请详细填写你的拒绝理由，将反馈给工单创建者并留存！\"\n                        style={{marginBottom: 10}}\n                    />\n                    <TextArea rows={4} placeholder=\"填写详细拒绝原因，以便对方后续完善\" onChange={this.changeRefuseReason}/>\n                </Modal>\n\n                <Drawer\n                    title={titleContent}\n                    placement=\"left\"\n                    closable={true}\n                    onClose={this.onDrawerClose}\n                    visible={this.state.drawerVisible}\n                    width={800}\n                >\n                    <Spin tip=\"数据加载中...\" spinning={this.state.drawerSpinning}>\n                    <Row style={{ marginBottom: 10 }}>\n                        <Col style={{ fontSize: 15 }}>\n                            <Alert\n                                message={<Fragment>{this.getStatusText(this.state.status)}{this.state.job_name}</Fragment>}\n                                type=\"info\"\n                            />\n                            {refuseContent}\n                        </Col>\n                    </Row>\n                    <Row style={{ marginBottom: 10 }}>\n                        <Col>\n                           <Alert message={waitContent} type=\"warning\" showIcon />\n                        </Col>\n                    </Row>\n                    <Row style={{ marginTop: \"10px\" }}>\n                        <Card size=\"small\" title=\"工单基本信息\" style={{ marginBottom: 10 }}>\n                            <Descriptions bordered size=\"small\" column={2}>\n                                <Descriptions.Item label=\"任务类型\">{this.state.job_type}</Descriptions.Item>\n                                <Descriptions.Item label=\"紧急度\">{this.state.important_degree}</Descriptions.Item>\n                                <Descriptions.Item label=\"发起时间\">{this.state.create_time}</Descriptions.Item>\n                            </Descriptions>\n                        </Card>\n                    </Row>\n                    <Row style={{ marginTop: \"10px\" }}>\n                        <Card size=\"small\" title=\"普通配置信息\" style={{ marginBottom: 10 }}>\n                            <Descriptions bordered size=\"small\" column={1} style={{ marginTop: \"10px\" }}>\n                                <Descriptions.Item label=\"任务内容\">\n                                    <Paragraph style={{marginBottom: 0}} ellipsis={true} copyable={this.state.task_content !== ''}>{this.state.task_content}</Paragraph>\n                                </Descriptions.Item>\n                            </Descriptions>\n                        </Card>\n                        <Card size=\"small\" title=\"自定义信息\">\n                            <Descriptions bordered size=\"small\" column={1} style={{ marginTop: \"10px\" }}>\n                                {k8sConfigContent}\n                            </Descriptions>\n                        </Card>\n                    </Row>\n                    <Row style={{ textAlign: \"center\", marginTop: 20 }}>\n                        <Col span={7}/>\n                        <Col span={4}>\n                            <Button type=\"primary\" disabled={!this.state.currentJob.isGetEnable} onClick={this.startJob.bind(this, this.state.currentJob.id)}>一键领取</Button>\n                        </Col>\n                        <Col offset={1}/>\n                        <Col span={4}>\n                            <Button type=\"danger\" disabled={!this.state.currentJob.isFinishEnable} onClick={this.finishJob.bind(this, this.state.currentJob.id)}>我已完成</Button>\n                        </Col>\n                        <Col span={7}/>\n                    </Row>\n                    <Row style={{ minHeight: 30 }}/>\n                    </Spin>\n                </Drawer>\n                <Table columns={this.state.columns} dataSource={this.state.tableData} scroll={{ x: 'max-content' }} pagination={this.state.pagination} loading={this.state.tableLoading} rowClassName=\"fixedHeight\"  bordered size=\"small\" />\n            </Content>\n        );\n    }\n}\n\nexport default Jobs_content;\n","import React, { Component } from 'react';\nimport { Layout } from 'antd/lib/index';\nimport { Route, Switch } from 'react-router-dom';\nimport Deploy_project_content from \"./deploy_project_content\";\nimport Jobs_content from \"./jobs_content\";\n\nconst { Content } = Layout;\n\nclass Task_content extends Component {\n    render() {\n        return (\n            <Content style={{\n                background: '#fff', padding: 20, margin: 0, height: \"100%\",\n            }}>\n                <Switch>\n                    <Route path=\"/admin/task/deploy_project\" component={Deploy_project_content} />\n                    <Route path=\"/admin/task/jobs\" component={Jobs_content}/>\n                </Switch>\n            </Content>\n        );\n    }\n}\n\nexport default Task_content;\n","import React, {Component} from 'react';\nimport {\n    Layout,\n    Table,\n    Form,\n    message,\n    Button,\n    Tag,\n    Typography,\n    Row,\n    Col,\n    Divider, Modal, Input\n} from 'antd';\nimport {getUsersList, postUserCreate, putUserCreate} from \"../../api/user\";\nimport OpsBreadcrumbPath from \"../breadcrumb_path\";\n\nconst { Content } = Layout;\nconst { Text } = Typography;\n\n\nlet columnStyle = {\n    overFlow : \"hidden\",\n    textOverflow: \"ellipsis\",\n    display: \"-webkit-box\",\n};\n\nclass UserModal extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n    render() {\n        const { getFieldDecorator } = this.props.form;\n        const formItemLayout = {\n            labelCol: { span: 7 },\n            wrapperCol: { span: 14 },\n        };\n        return (\n            <Modal\n                title=\"新增用户\"\n                destroyOnClose={true}\n                visible={this.props.userModalVisible}\n                onOk={this.props.handleAddUserSubmit}\n                onCancel={this.props.handleAddUserCancel}\n                okText=\"确认\"\n                cancelText=\"取消\"\n                centered={true}\n                width={600}\n            >\n                <Form>\n                    <Form.Item label=\"邮箱\" {...formItemLayout}>\n                        {getFieldDecorator('email', {\n                            rules: [{ required: true, message: '注册邮箱不能为空！' }],\n                        })(\n                            <Input/>\n                        )}\n                    </Form.Item>\n                    <Form.Item label=\"用户名\" {...formItemLayout}>\n                        {getFieldDecorator('username', {\n                            rules: [{ required: true, message: '用户名不能为空！' }],\n                        })(\n                            <Input/>\n                        )}\n                    </Form.Item>\n                    <Form.Item label=\"初始密码\" {...formItemLayout}>\n                        {getFieldDecorator('password', {\n                            rules: [{ required: true, message: '用户名不能为空！' }],\n                        })(\n                            <Input/>\n                        )}\n                    </Form.Item>\n                    <Form.Item label=\"职位\" {...formItemLayout}>\n                        {getFieldDecorator('position', {\n                            rules: [{ required: true, message: '职位不能为空！' }],\n                        })(\n                            <Input/>\n                        )}\n                    </Form.Item>\n                </Form>\n            </Modal>\n        )\n    }\n}\n\nUserModal = Form.create({ name: 'UserModal' })(UserModal);\n\nclass UserManager extends Component {\n\n    constructor(props){\n        super(props);\n        this.onShowSizeChange = this.onShowSizeChange.bind(this);\n        this.handleAdd = this.handleAdd.bind(this);\n        this.handleAddUserSubmit = this.handleAddUserSubmit.bind(this);\n        this.handleAddUserCancel = this.handleAddUserCancel.bind(this);\n        this.state = {\n            columns: [\n                {\n                    title: 'ID', dataIndex: 'ID', key: 'ID', className: 'small_font',\n                    render: value => {\n                        return (\n                            <Text ellipsis={true}>{value}</Text>\n                        )\n                    }\n                },\n                {\n                    title: '用户名', dataIndex: 'username', key: 'username', className: 'small_font',\n                    render: value => {\n                        return (\n                            <Text ellipsis={true}>{value}</Text>\n                        )\n                    }\n                },\n                {\n                    title: '邮箱', dataIndex: 'email', key: 'email', className: \"small_font \"+{columnStyle},\n                    render: value => {\n                        return (\n                            <Text ellipsis={true}>{value}</Text>\n                        )\n                    }\n                },\n                {\n                    title: '职位', dataIndex: 'position', key: 'position', className: \"small_font \"+{columnStyle},\n                    render: value => {\n                        return (\n                            <Text ellipsis={true}>{value}</Text>\n                        )\n                    }\n                },\n                {\n                    title: '状态', dataIndex: 'active', key: 'active', className: \"small_font \"+{columnStyle},  width: 100,\n                    render: (value) => {\n                        return value === true ? <Text ellipsis={true}><Tag color=\"geekblue\">正常</Tag></Text> : <Text ellipsis={true}><Tag color=\"red\">禁用</Tag></Text>\n                    }\n                },\n                {\n                    title: '操作',\n                    key: 'operation',\n                    fixed: 'right',\n                    width: 140,\n                    align: 'center',\n                    className: 'small_font',\n                    render: (text, record) => {\n                        return (\n                            <div>\n                                <Button type=\"primary\" size=\"small\" onClick={this.updateUserActiveStatus.bind(this, record.email, true)}>启用</Button>\n                                <Divider type=\"vertical\" />\n                                <Button type=\"danger\" size=\"small\" onClick={this.updateUserActiveStatus.bind(this, record.email, false)}>禁用</Button>\n                            </div>\n                        )\n                    },\n                },\n            ],\n            tableData: [],\n            tableLoading: false,\n            add_new_account_visible: false,\n            current_data_id: null,\n            current_user: {},\n            detailDrawerVisible: false,\n            pagination: {\n                showSizeChanger: true,\n                pageSizeOptions: ['10', '20', '30', '100'],\n                onShowSizeChange: this.onShowSizeChange,\n                showQuickJumper: false,\n                showTotal: (total) => `共 ${total} 条`,\n                pageSize: 10,\n                page: 1,\n                total: 0,\n                onChange: (current) => this.changePage(current),\n            },\n            userModalVisible: false,\n        }\n    }\n\n    onShowSizeChange(current, size){\n        this.setState({\n            pagination: {\n                ...this.state.pagination,\n                page: 1,\n                current: 1,\n                pageSize: size,\n            }\n        }, ()=>{\n            this.refreshTableData();\n        });\n    }\n\n    changePage = (e) => {\n        this.setState({\n            pagination: {\n                ...this.state.pagination,\n                page: e,\n                current: e\n            }\n        }, ()=>{\n            this.refreshTableData();\n        });\n    };\n\n    refreshTableData = () => {\n        this.setState({tableLoading: true});\n        getUsersList(this.state.pagination.page, this.state.pagination.pageSize).then((res)=>{\n            const pagination = this.state.pagination;\n            pagination.total = parseInt(res.data.total);\n            pagination.page = parseInt(res.data.page);\n            pagination.showTotal(parseInt(res.data.total));\n            this.setState({\n                pagination\n            });\n            let data = res['data']['users'];\n            let tableData = [];\n            for (let i = 0; i < data.length; i++) {\n                tableData.push({\n                    ID: data[i]['ID'],\n                    username: data[i]['username'],\n                    email: data[i]['email'],\n                    position: data[i]['position'],\n                    active: data[i]['active'],\n                });\n            }\n            this.setState({tableData: tableData, tableLoading: false});\n        }).catch((err)=>{\n            console.log(err)\n        });\n    };\n\n    componentDidMount() {\n        this.refreshTableData();\n    }\n\n    handleAdd() {\n        this.setState({userModalVisible: true});\n    }\n\n    handleAddUserSubmit() {\n        this.addUserFormRef.props.form.validateFields((err, values) => {\n            if (!err) {\n                postUserCreate({\n                    ...values,\n                }).then((res)=>{\n                    if(res.code===0){\n                        this.setState({userModalVisible: false});\n                        this.refreshTableData();\n                    } else {\n                        message.error(res.msg);\n                    }\n                }).catch((err)=>{\n                    message.error(err.toLocaleString());\n                });\n            }\n        })\n    };\n\n    handleAddUserCancel() {\n        this.setState({userModalVisible: false});\n    }\n\n    updateUserActiveStatus(email, activeStatus) {\n        putUserCreate({\n            'email': email,\n            'active': activeStatus\n        }).then((res)=>{\n            if(res.code===0){\n                message.success(\"操作成功！\");\n                this.refreshTableData();\n            } else {\n                message.error(res.msg);\n            }\n        }).catch((err)=>{\n            message.error(err.toLocaleString());\n        })\n    }\n\n    render() {\n        return (\n            <Content style={{\n                background: '#fff', padding: 20, margin: 0, height: \"100%\",\n            }}>\n                <OpsBreadcrumbPath pathData={[\"权限管理\", \"用户管理\", \"用户列表\"]} />\n                <Row style={{ padding: \"0px 0px 10px 0px\" }}>\n                    <Col span={2} className=\"col-span\">\n                        <Button style={{ width: \"100%\" }} icon=\"plus-circle\" onClick={this.handleAdd}>新 增</Button>\n                    </Col>\n                </Row>\n                <UserModal\n                    wrappedComponentRef={(form) => this.addUserFormRef = form}\n                    userModalVisible={this.state.userModalVisible}\n                    handleAddUserSubmit={this.handleAddUserSubmit}\n                    handleAddUserCancel={this.handleAddUserCancel}\n                />\n                <Table columns={this.state.columns} dataSource={this.state.tableData} scroll={{ x: 'max-content' }} pagination={this.state.pagination} loading={this.state.tableLoading} rowClassName=\"fixedHeight\" size=\"small\"/>\n            </Content>\n        );\n    }\n}\n\nUserManager = Form.create({ name: 'userManager' })(UserManager);\n\nexport default UserManager;\n","import req from '../utils/axios';\n\n/*\n    权限管理 - 新建角色\n */\nconst postAddRole = (data) => {\n    return req.post('roles/addRole', data)\n};\nexport {postAddRole}\n\n/*\n    权限管理 - 更新角色\n */\nconst putUpdateRole = (data) => {\n    return req.put('roles/updateRole', data)\n};\nexport {putUpdateRole}\n\n/*\n    权限管理 - 删除角色\n */\nconst deleteRole = (data) => {\n    return req.delete('roles/deleteRole', data)\n};\nexport {deleteRole}\n\n/*\n    权限管理 - 获取角色的权限链接\n */\nconst getRoleAuthLinks = (roleId) => {\n    return req.get('roles/authLink', {roleId})\n};\nexport {getRoleAuthLinks}\n\n/*\n    权限管理 - 新增权限链接\n */\nconst postAddAuthLink = (data) => {\n    return req.post('roles/authLink', data)\n};\nexport {postAddAuthLink}\n\n/*\n    权限管理 - 新建角色的权限链接\n */\nconst postRoleAuthLinks = (data) => {\n    return req.post('roles/authLinks', data)\n};\nexport {postRoleAuthLinks}\n\n/*\n    权限管理 - 删除权限链接\n */\nconst deleteAuthLink = (data) => {\n    return req.delete('roles/authLink', data)\n};\nexport {deleteAuthLink}\n\n/*\n    权限管理 - 获取角色列表\n */\nconst getRolesList = (page, size) =>{\n    return req.get('roles/list', {page, size})\n};\nexport {getRolesList}\n\n/*\n    权限管理 - 获取角色对应的用户列表\n */\nconst getRoleUserList = (roleId) =>{\n    return req.get('roles/users', {roleId})\n};\nexport {getRoleUserList}\n\n/*\n    权限管理 - 新增角色对应的用户\n */\nconst postRoleUserList = (data) =>{\n    return req.post('roles/users', data)\n};\nexport {postRoleUserList}\n\n/*\n    权限管理 - 获取角色下的服务器资源列表\n */\nconst getRoleResourceList = (roleId, resourceType) =>{\n    return req.get('roles/resources', {roleId, resourceType})\n};\nexport {getRoleResourceList}\n\n/*\n    权限管理 - 新增角色下的服务器资源\n */\nconst postRoleResourcesList = (data) =>{\n    return req.post('roles/resources', data)\n};\nexport {postRoleResourcesList}\n\n/*\n    权限管理 - 获取所有的权限链接\n */\nconst getPermissionsList = (page, size) =>{\n    return req.get('permissions/list', {page, size})\n};\nexport {getPermissionsList}","import React, {Component, Fragment} from 'react';\nimport {Button, Layout, Table, Modal, Form, Input, Divider, Transfer} from 'antd';\nimport { message, Row, Col, Spin, Tabs } from 'antd';\nimport {\n    deleteRole,\n    getRoleAuthLinks,\n    getRoleResourceList,\n    getRolesList,\n    getRoleUserList,\n    postAddRole,\n    postRoleAuthLinks,\n    postRoleResourcesList,\n    postRoleUserList,\n    putUpdateRole,\n} from \"../../api/role\";\nimport OpsBreadcrumbPath from \"../breadcrumb_path\";\n\nconst { Content } = Layout;\nconst confirm = Modal.confirm;\nconst { TabPane } = Tabs;\n\n\nlet columnStyle = {\n    overFlow : \"hidden\",\n    textOverflow: \"ellipsis\",\n    display: \"-webkit-box\",\n};\n\n\nclass RoleModal extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n    render() {\n        const {getFieldDecorator} = this.props.form;\n        const formItemLayout = {\n            labelCol: {span: 6},\n            wrapperCol: {span: 14},\n        };\n        const { roleActionType } = this.props;\n        let title = \"新建角色\";\n        if(roleActionType===\"add\"){\n            title = \"新建角色\";\n        } else {\n            title = \"编辑角色\"\n        }\n        return (\n            <Fragment>\n                <Modal\n                    title={title}\n                    // destroyOnClose=\"true\"\n                    visible={this.props.roleModalVisible}\n                    onOk={roleActionType === \"add\" ? this.props.handleAddRole : this.props.handleEditRole}\n                    onCancel={this.props.handleCancelAddRole}\n                    centered={true}\n                    okText=\"确认\"\n                    cancelText=\"取消\"\n                >\n                    <Form>\n                        <Form.Item {...formItemLayout} label='角色名称'>\n                            {getFieldDecorator('roleName', {\n                                rules: [{ required: true, message: '请输入角色名称' }],\n                            })(\n                                <Input placeholder='请输入角色名称'/>\n                            )}\n                        </Form.Item>\n                        <Form.Item {...formItemLayout} label='角色描述'>\n                            {getFieldDecorator('description', {\n                                rules: [{ required: true, message: '请输入角色描述' }],\n                            })(\n                                <Input placeholder='请输入角色描述'/>\n                            )}\n                        </Form.Item>\n                    </Form>\n                </Modal>\n            </Fragment>\n        )\n    }\n}\n\nRoleModal = Form.create({ name: 'add_role_modal' })(RoleModal);\n\nclass UserManagerModal extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            roleId: 0,\n            inGroupData: [],\n            allGroupData: [],\n            transferLodding: false,\n        };\n    }\n\n    componentWillMount() {\n        const { roleId } = this.props;\n        this.loadRoleUsersData(roleId);\n    }\n\n    loadRoleUsersData(roleId) {\n        this.setState({\n            roleId: roleId,\n            transferLodding: true\n        });\n        getRoleUserList(roleId).then((res)=>{\n            if(res.code === 0){\n                let inGroupData = [];\n                let allGroupData = [];\n                res.data.all.forEach(function(item){\n                    allGroupData.push({\n                        key: String(item.ID),\n                        id: String(item.ID),\n                        username: item.username,\n                        position: item.position,\n                    })\n                });\n                res.data.in.forEach(function(item){\n                    inGroupData.push(\n                        String(item.ID)\n                    );\n                });\n                this.setState({\n                    inGroupData: inGroupData,\n                    allGroupData: allGroupData,\n                    transferLodding: false,\n                });\n            } else {\n                message.error(res.msg);\n            }\n        }).catch((err)=>{\n            message.error(err.toLocaleString());\n        });\n    }\n\n    filterOption = (inputValue, option) => option.username.indexOf(inputValue) > -1;\n\n    handleTransferChange(targetKeys, direction, moveKeys) {\n        this.setState({\n            inGroupData: targetKeys\n        });\n    }\n\n    handleConfirmUserManager() {\n        this.setState({transferLodding: true});\n        postRoleUserList({\n            \"roleId\": parseInt(this.state.roleId),\n            \"userIdList\": this.state.inGroupData\n        }).then((res)=>{\n            if(res.code === 0){\n                this.setState({transferLodding: false});\n                this.props.hideModal();\n                message.success(\"操作成功\");\n            } else {\n                message.error(res.msg);\n            }\n        }).catch((err)=>{\n            message.error(err.toLocaleString());\n        })\n    }\n\n    render() {\n        return (\n            <Modal\n                title={\"管理用户角色 - \"+this.props.currentRoleName}\n                destroyOnClose=\"true\"\n                visible={this.props.userManagerModalVisible}\n                onOk={this.handleConfirmUserManager.bind(this)}\n                onCancel={this.props.handleCancelUserManager}\n                okText=\"确认\"\n                cancelText=\"取消\"\n                centered={true}\n                width={680}\n                style={{textAlign: \"center\"}}\n            >\n                <Spin spinning={this.state.transferLodding}>\n                    <Transfer\n                        dataSource={this.state.allGroupData}\n                        showSearch\n                        locale={{itemUnit:\"人\", itemsUnit: \"人\", searchPlaceholder:\"使用姓名搜索\"}}\n                        filterOption={this.filterOption}\n                        targetKeys={this.state.inGroupData}\n                        onChange={this.handleTransferChange.bind(this)}\n                        render={item => item.username+'-'+item.position}\n                        listStyle={{width: 250, height: \"60vh\", textAlign: 'left'}}\n                        operations={['加入角色组', '移出角色组']}\n                    />\n                </Spin>\n            </Modal>\n\n        )\n    }\n}\n\nclass ResourceManagerModal extends Component {\n\n    constructor(props) {\n        super(props);\n        this.handleConfirmRoleResourceManager = this.handleConfirmRoleResourceManager.bind(this);\n        this.state = {\n            roleId: 0,\n            tabSpinning: false,\n            ecsInGroupData: [],\n            ecsAllGroupData: [],\n            rdsInGroupData: [],\n            rdsAllGroupData: [],\n            kvInGroupData: [],\n            kvAllGroupData: [],\n            slbInGroupData: [],\n            slbAllGroupData: [],\n            otherAllGroupData: [],\n            otherInGroupData: [],\n        };\n    }\n\n    componentWillMount() {\n        const { roleId } = this.props;\n        this.setState({roleId});\n        this.loadRoleEcsData(roleId);\n        this.loadRoleRdsData(roleId);\n        this.loadRoleKvData(roleId);\n        this.loadRoleSlbData(roleId);\n        this.loadRoleOtherResData(roleId);\n    }\n\n    loadRoleEcsData(roleId) {\n        this.setState({\n            ecsTransferLodding: true\n        });\n        let ecsAllGroupData = [];\n        let ecsInGroupData = [];\n        getRoleResourceList(roleId, \"ecs\").then((res)=>{\n            if(res.code === 0){\n                res.data.all.forEach(function(item){\n                    ecsAllGroupData.push({\n                        key: String(item.ID),\n                        id: String(item.ID),\n                        instance_name: item.InstanceName,\n                        ip: item.InnerIpAddress+\" \"+item.PublicIpAddress,\n                    })\n                });\n                res.data.in.forEach(function(item){\n                    ecsInGroupData.push(\n                        String(item.ID)\n                    )\n                });\n                this.setState({\n                    ecsAllGroupData: ecsAllGroupData,\n                    ecsInGroupData: ecsInGroupData,\n                    ecsTransferLodding: false\n                })\n            } else {\n                message.error(res.msg)\n            }\n        }).catch((err)=>{\n            message.error(err.toLocaleString())\n        });\n    }\n\n    loadRoleRdsData(roleId) {\n        this.setState({\n            rdsTransferLodding: true\n        });\n        let rdsAllGroupData = [];\n        let rdsInGroupData = [];\n        getRoleResourceList(roleId, \"rds\").then((res)=>{\n            if(res.code === 0){\n                res.data.all.forEach(function(item){\n                    rdsAllGroupData.push({\n                        key: String(item.ID),\n                        id: String(item.ID),\n                        db_instance_description: item.DBInstanceDescription,\n                        db_instance_id: item.DBInstanceId,\n                    })\n                });\n                res.data.in.forEach(function(item){\n                    rdsInGroupData.push(\n                        String(item.ID)\n                    )\n                });\n                this.setState({\n                    rdsAllGroupData: rdsAllGroupData,\n                    rdsInGroupData: rdsInGroupData,\n                    rdsTransferLodding: false\n                })\n            } else {\n                message.error(res.msg)\n            }\n        }).catch((err)=>{\n            message.error(err.toLocaleString())\n        });\n    }\n\n    loadRoleKvData(roleId) {\n        this.setState({\n            kvTransferLodding: true\n        });\n        let kvAllGroupData = [];\n        let kvInGroupData = [];\n        getRoleResourceList(roleId, \"kv\").then((res)=>{\n            if(res.code === 0){\n                res.data.all.forEach(function(item){\n                    kvAllGroupData.push({\n                        key: String(item.ID),\n                        id: String(item.ID),\n                        instance_name: item.InstanceName,\n                        connection_domain: item.ConnectionDomain,\n                    })\n                });\n                res.data.in.forEach(function(item){\n                    kvInGroupData.push(\n                        String(item.ID)\n                    )\n                });\n                this.setState({\n                    kvAllGroupData,\n                    kvInGroupData,\n                    kvTransferLodding: false\n                })\n            } else {\n                message.error(res.msg)\n            }\n        }).catch((err)=>{\n            message.error(err.toLocaleString())\n        });\n    }\n\n    loadRoleSlbData(roleId) {\n        this.setState({\n            slbTransferLodding: true\n        });\n        let slbAllGroupData = [];\n        let slbInGroupData = [];\n        getRoleResourceList(roleId, \"slb\").then((res)=>{\n            if(res.code === 0){\n                res.data.all.forEach(function(item){\n                    slbAllGroupData.push({\n                        key: String(item.ID),\n                        id: String(item.ID),\n                        load_balance_name: item.LoadBalancerName,\n                        address: item.Address,\n                    })\n                });\n                res.data.in.forEach(function(item){\n                    slbInGroupData.push(\n                        String(item.ID)\n                    )\n                });\n                this.setState({\n                    slbAllGroupData,\n                    slbInGroupData,\n                    slbTransferLodding: false\n                })\n            } else {\n                message.error(res.msg)\n            }\n        }).catch((err)=>{\n            message.error(err.toLocaleString())\n        });\n    }\n\n    loadRoleOtherResData(roleId) {\n        this.setState({\n            otherResTransferLodding: true\n        });\n        let otherAllGroupData = [];\n        let otherInGroupData = [];\n        getRoleResourceList(roleId, \"other\").then((res)=>{\n            if(res.code === 0){\n                res.data.all.forEach(function(item){\n                    otherAllGroupData.push({\n                        key: String(item.ID),\n                        id: String(item.ID),\n                        instance_name: item.InstanceName,\n                        res_type: item.ResType,\n                    })\n                });\n                res.data.in.forEach(function(item){\n                    otherInGroupData.push(\n                        String(item.ID)\n                    )\n                });\n                this.setState({\n                    otherAllGroupData: otherAllGroupData,\n                    otherInGroupData: otherInGroupData,\n                    otherResTransferLodding: false\n                })\n            } else {\n                message.error(res.msg)\n            }\n        }).catch((err)=>{\n            message.error(err.toLocaleString())\n        });\n    }\n\n    ecsFilterOption = (inputValue, option) => option.instance_name.indexOf(inputValue) > -1\n        || option.ip.indexOf(inputValue) > -1 ;\n\n    rdsFilterOption = (inputValue, option) => option.db_instance_description.indexOf(inputValue) > -1\n        || option.db_instance_id.indexOf(inputValue) > -1 ;\n\n    kvFilterOption = (inputValue, option) => option.instance_name.indexOf(inputValue) > -1\n        || option.connection_domain.indexOf(inputValue) > -1 ;\n\n    slbFilterOption = (inputValue, option) => option.load_balance_name.indexOf(inputValue) > -1\n        || option.address.indexOf(inputValue) > -1 ;\n\n    otherResFilterOption = (inputValue, option) => option.instance_name.indexOf(inputValue) > -1\n        || option.address.indexOf(inputValue) > -1 ;\n\n    handleResTransferChange(resType, targetKeys) {\n        switch (resType) {\n            case \"ecs\":\n                this.setState({\n                    ecsInGroupData: targetKeys\n                });\n                break;\n            case \"rds\":\n                this.setState({\n                    rdsInGroupData: targetKeys\n                });\n                break;\n            case \"kv\":\n                this.setState({\n                    kvInGroupData: targetKeys\n                });\n                break;\n            case \"slb\":\n                this.setState({\n                    slbInGroupData: targetKeys\n                });\n                break;\n            case \"other\":\n                this.setState({\n                    otherInGroupData: targetKeys\n                });\n                break;\n            default:\n                break;\n        }\n    }\n\n    handleTabClick = (e) => {\n        // if(e===\"ecs\"){\n        //     this.loadRoleEcsData()\n        // } else if(e===\"rds\") {\n        //     this.loadRoleRdsData()\n        // } else if(e===\"kv\") {\n        //     this.loadRoleKvData()\n        // } else {\n        //     this.loadRoleSlbData()\n        // }\n    };\n\n    handleConfirmRoleResourceManager() {\n        this.setState({tabSpinning: true});\n        postRoleResourcesList({\n            \"roleId\": parseInt(this.state.roleId),\n            \"ecsIdList\": this.state.ecsInGroupData,\n            \"rdsIdList\": this.state.rdsInGroupData,\n            \"kvIdList\": this.state.kvInGroupData,\n            \"slbIdList\": this.state.slbInGroupData,\n            \"otherIdList\": this.state.otherInGroupData,\n        }).then((res)=>{\n            if(res.code === 0){\n                this.setState({tabSpinning: false});\n                this.props.hideModal();\n                message.success(\"操作成功\");\n            } else {\n                message.error(res.msg);\n            }\n        }).catch((err)=>{\n            message.error(err.toLocaleString());\n        })\n    }\n\n    render() {\n        return (\n            <Modal\n                title={\"管理角色组关联资源 - \"+this.props.currentRoleName}\n                destroyOnClose=\"true\"\n                visible={this.props.resourceManagerModalVisible}\n                onOk={this.handleConfirmRoleResourceManager}\n                onCancel={this.props.handleCancelResourceManager}\n                okText=\"确认\"\n                cancelText=\"取消\"\n                centered={true}\n                width={1000}\n                style={{textAlign: \"center\"}}\n            >\n                <Spin spinning={this.state.tabSpinning} tip=\"请求处理中...\">\n                    <Tabs defaultActiveKey=\"ecs\" tabPosition=\"left\" onTabClick={this.handleTabClick.bind(this)}>\n                    <TabPane tab=\"云服务器\" key=\"ecs\">\n                        <Spin spinning={this.state.ecsTransferLodding}>\n                            <Transfer\n                                showSearch\n                                locale={{itemUnit:\"台\", itemsUnit: \"台\", searchPlaceholder:\"使用ip或机器名称搜索\"}}\n                                filterOption={this.ecsFilterOption}\n                                dataSource={this.state.ecsAllGroupData}\n                                targetKeys={this.state.ecsInGroupData}\n                                onChange={this.handleResTransferChange.bind(this, \"ecs\")}\n                                render={item => item.ip + \" \" + item.instance_name}\n                                listStyle={{width: 350, height: \"60vh\", textAlign: 'left'}}\n                                operations={['加入角色组', '移出角色组']}\n                            />\n                        </Spin>\n                    </TabPane>\n                    <TabPane tab=\"云数据库\" key=\"rds\">\n                        <Spin spinning={this.state.rdsTransferLodding}>\n                            <Transfer\n                                showSearch\n                                locale={{itemUnit:\"台\", itemsUnit: \"台\", searchPlaceholder:\"使用连接串或名称搜索\"}}\n                                filterOption={this.rdsFilterOption}\n                                dataSource={this.state.rdsAllGroupData}\n                                targetKeys={this.state.rdsInGroupData}\n                                onChange={this.handleResTransferChange.bind(this, \"rds\")}\n                                render={item => item.db_instance_description+' '+item.db_instance_id}\n                                listStyle={{width: 350, height: \"60vh\", textAlign: 'left'}}\n                                operations={['加入角色组', '移出角色组']}\n                            />\n                        </Spin>\n                    </TabPane>\n                    <TabPane tab=\"KVStore\" key=\"kv\">\n                        <Spin spinning={this.state.kvTransferLodding}>\n                            <Transfer\n                                showSearch\n                                locale={{itemUnit:\"台\", itemsUnit: \"台\", searchPlaceholder:\"使用连接串或名称搜索\"}}\n                                filterOption={this.kvFilterOption}\n                                dataSource={this.state.kvAllGroupData}\n                                targetKeys={this.state.kvInGroupData}\n                                onChange={this.handleResTransferChange.bind(this, \"kv\")}\n                                render={item => item.instance_name+' '+item.connection_domain}\n                                listStyle={{width: 350, height: \"60vh\", textAlign: 'left'}}\n                                operations={['加入角色组', '移出角色组']}\n                            />\n                        </Spin>\n                    </TabPane>\n                    <TabPane tab=\"SLB\" key=\"slb\">\n                        <Spin spinning={this.state.slbTransferLodding}>\n                            <Transfer\n                                showSearch\n                                locale={{itemUnit:\"个\", itemsUnit: \"个\", searchPlaceholder:\"使用ip或名称搜索\"}}\n                                filterOption={this.slbFilterOption}\n                                dataSource={this.state.slbAllGroupData}\n                                targetKeys={this.state.slbInGroupData}\n                                onChange={this.handleResTransferChange.bind(this, \"slb\")}\n                                render={item => item.load_balance_name+' '+item.address}\n                                listStyle={{width: 350, height: \"60vh\", textAlign: 'left'}}\n                                operations={['加入角色组', '移出角色组']}\n                            />\n                        </Spin>\n                    </TabPane>\n                    <TabPane tab=\"其它资源\" key=\"other\">\n                        <Spin spinning={this.state.otherResTransferLodding}>\n                            <Transfer\n                                showSearch\n                                locale={{itemUnit:\"个\", itemsUnit: \"个\", searchPlaceholder:\"使用实例名称搜索\"}}\n                                filterOption={this.otherResFilterOption}\n                                dataSource={this.state.otherAllGroupData}\n                                targetKeys={this.state.otherInGroupData}\n                                onChange={this.handleResTransferChange.bind(this, \"other\")}\n                                render={item => item.res_type+' '+item.instance_name}\n                                listStyle={{width: 350, height: \"60vh\", textAlign: 'left'}}\n                                operations={['加入角色组', '移出角色组']}\n                            />\n                        </Spin>\n                    </TabPane>\n                </Tabs>\n                </Spin>\n            </Modal>\n        )\n    }\n}\n\nclass AuthLinkManagerModal extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            roleId: 0,\n            inGroupData: [],\n            allGroupData: [],\n            transferLodding: false,\n        };\n    }\n\n    componentWillMount() {\n        const { roleId } = this.props;\n        this.loadRoleAuthLinksData(roleId);\n    }\n\n    loadRoleAuthLinksData(roleId) {\n        this.setState({\n            roleId: roleId,\n            transferLodding: true\n        });\n        getRoleAuthLinks(roleId).then((res)=>{\n            if(res.code === 0){\n                let inGroupData = [];\n                let allGroupData = [];\n                res.data.all.forEach(function(item){\n                    allGroupData.push({\n                        key: String(item.Id),\n                        id: String(item.Id),\n                        name: item.name,\n                        url_path: item.urlPath,\n                    })\n                });\n                res.data.in.forEach(function(item){\n                    inGroupData.push(\n                        String(item.Id)\n                    );\n                });\n                this.setState({\n                    inGroupData: inGroupData,\n                    allGroupData: allGroupData,\n                    transferLodding: false,\n                });\n            } else {\n                message.error(res.msg);\n            }\n        }).catch((err)=>{\n            message.error(err.toLocaleString());\n        });\n    }\n\n    filterOption = (inputValue, option) => option.name.indexOf(inputValue) > -1 ||\n        option.url_path.indexOf(inputValue) > -1;\n\n    handleTransferChange(targetKeys, direction, moveKeys) {\n        this.setState({\n            inGroupData: targetKeys\n        });\n    }\n\n    handleConfirmUserManager() {\n        this.setState({transferLodding: true});\n        postRoleAuthLinks({\n            \"roleId\": parseInt(this.state.roleId),\n            \"authLinkIdList\": this.state.inGroupData\n        }).then((res)=>{\n            if(res.code === 0){\n                this.setState({transferLodding: false});\n                this.props.hideModal();\n                message.success(\"操作成功\");\n            } else {\n                message.error(res.msg);\n            }\n        }).catch((err)=>{\n            message.error(err.toLocaleString());\n        })\n    }\n\n    render() {\n        return (\n            <Modal\n                title={\"管理角色对应权限 - \" + this.props.currentRoleName}\n                destroyOnClose=\"true\"\n                visible={this.props.authLinkManagerModalVisible}\n                onOk={this.handleConfirmUserManager.bind(this)}\n                onCancel={this.props.handleCancelAuthLinkManager}\n                okText=\"确认\"\n                cancelText=\"取消\"\n                centered={true}\n                width={680}\n                style={{textAlign: \"center\"}}\n            >\n                <Spin spinning={this.state.transferLodding}>\n                    <Transfer\n                        dataSource={this.state.allGroupData}\n                        showSearch\n                        locale={{itemUnit:\"条\", itemsUnit: \"条\", searchPlaceholder:\"使用名称或路径搜索\"}}\n                        filterOption={this.filterOption}\n                        targetKeys={this.state.inGroupData}\n                        onChange={this.handleTransferChange.bind(this)}\n                        render={item => item.name+' '+item.url_path}\n                        listStyle={{width: 250, height: \"60vh\", textAlign: 'left'}}\n                        operations={['加入角色组', '移出角色组']}\n                    />\n                </Spin>\n            </Modal>\n\n        )\n    }\n}\n\nclass RolesManager extends Component {\n\n    constructor(props){\n        super(props);\n        this.handleAddRole = this.handleAddRole.bind(this);\n        this.handleEditRole = this.handleEditRole.bind(this);\n        this.handleCancelAddRole = this.handleCancelAddRole.bind(this);\n        this.createRole = this.createRole.bind(this);\n        this.roleEdit = this.roleEdit.bind(this);\n        this.onShowSizeChange = this.onShowSizeChange.bind(this);\n        this.state = {\n            columns: [\n                {\n                    title: 'ID', dataIndex: 'Id', key: 'Id', width: 30, className: 'small_font',\n                },\n                {\n                    title: '角色名', dataIndex: 'name', key: 'name', width: 160, className: 'small_font',\n                },\n                {\n                    title: '角色描述', dataIndex: 'description', key: 'description', className: \"small_font \"+{columnStyle},  width: 160,\n                },\n                {},\n                {\n                    title: '操作',\n                    key: 'operation',\n                    fixed: 'right',\n                    width: 430,\n                    align: 'center',\n                    className: 'small_font',\n                    render: (text, record) => {\n                        return (\n                            <div>\n                                <Button size=\"small\" onClick={this.managerUser.bind(this, record)}>管理用户</Button>\n                                <Divider type=\"vertical\" />\n                                <Button size=\"small\" onClick={this.managerAuthLink.bind(this, record)}>管理权限</Button>\n                                <Divider type=\"vertical\" />\n                                <Button size=\"small\" onClick={this.managerResource.bind(this, record)}>管理资源</Button>\n                                <Divider type=\"vertical\" />\n                                <Button type=\"info\" size=\"small\" onClick={this.roleEdit.bind(this, record)}>编辑</Button>\n                                <Divider type=\"vertical\" />\n                                <Button type=\"danger\" size=\"small\" onClick={this.confirmDeleteRole.bind(this, record)}>删除</Button>\n                            </div>\n                        )\n                    },\n                },\n            ],\n            tableData: [],\n            tableLoading: false,\n            roleModalVisible: false,\n            roleActionType: \"add\",\n            editRoleId: 0,\n            userManagerModalVisible: false,\n            resourceManagerModalVisible: false,\n            authLinkManagerModalVisible: false,\n            current_data_id: null,\n            pagination: {\n                showSizeChanger: true,\n                pageSizeOptions: ['10', '20', '30', '100'],\n                onShowSizeChange: this.onShowSizeChange,\n                showQuickJumper: false,\n                showTotal: (total) => `共 ${total} 条`,\n                pageSize: 10,\n                page: 1,\n                total: 0,\n                onChange: (current) => this.changePage(current),\n            },\n        }\n    }\n\n    onShowSizeChange(current, size){\n        this.setState({\n            pagination: {\n                ...this.state.pagination,\n                page: 1,\n                current: 1,\n                pageSize: size,\n            }\n        }, ()=>{\n            this.refreshTableData();\n        });\n    }\n\n    managerUser = (record) => {\n      this.setState({\n          roleId: record.Id,\n          userManagerModalVisible: true,\n          currentRoleName: record.name,\n      })\n    };\n\n    confirmDeleteRole = (record) => {\n        let that = this;\n        confirm({\n            title: '危险操作提示',\n            content: '删除该角色组时该角色组和与之绑定的所有用户的关系、所有资源的关系和权限链接的关系也会被删除，请谨慎操作！',\n            okText: '确认删除',\n            okType: 'danger',\n            cancelText: '取消',\n            onOk() {\n                deleteRole({\n                    id: record['Id']\n                }).then((res)=>{\n                    if(res.code === 0){\n                        message.success(\"删除成功\");\n                        that.refreshTableData();\n                    } else {\n                        message.error(res.msg);\n                    }\n                }).catch((err)=>{\n                    message.error(err.toLocaleString());\n                })\n            },\n            onCancel() {},\n        });\n    };\n\n    changePage = (e) => {\n        this.setState({\n            pagination: {\n                ...this.state.pagination,\n                page: e,\n                current: e\n            }\n        }, ()=>{\n            this.refreshTableData();\n        });\n    };\n\n    managerResource = (record) => {\n        this.setState(() => ({\n            roleId: record.Id,\n            resourceManagerModalVisible: true,\n            currentRoleName: record.name,\n        }));\n    };\n\n    managerAuthLink = (record) => {\n        this.setState(() => ({\n            roleId: record.Id,\n            authLinkManagerModalVisible: true,\n            currentRoleName: record.name,\n        }));\n    };\n\n    createRole() {\n        this.setState(() => ({\n            roleActionType: \"add\",\n            roleModalVisible: true\n        }));\n    };\n\n    roleEdit(record) {\n        let addRoleForm = this.roleModal;\n        addRoleForm.setFieldsValue({\n            \"roleName\": record.name,\n            \"description\": record.description,\n        });\n        this.setState(() => ({\n            roleActionType: \"update\",\n            roleModalVisible: true,\n            editRoleId: record.Id,\n        }));\n    }\n\n    handleAddRole() {\n        let addRoleForm = this.roleModal;\n        addRoleForm.validateFields((err, values) => {\n            if(!err){\n                postAddRole(values).then((res)=>{\n                    if(res.code === 0){\n                        message.success(\"创建成功\");\n                        this.setState({\n                            roleModalVisible: false\n                        });\n                        addRoleForm.resetFields();\n                        this.refreshTableData();\n                    } else {\n                        addRoleForm.setFields({\n                            roleName: {\n                                errors: [new Error(res.msg)],\n                            },\n                        });\n                        message.error(res.msg);\n                    }\n                }).catch((err)=>{\n                    message.error(err.toLocaleString());\n                });\n            }\n        });\n    }\n\n    handleEditRole() {\n        let addRoleForm = this.roleModal;\n        addRoleForm.validateFields((err, values) => {\n            if(!err){\n                putUpdateRole({\n                    ...values,\n                    id: this.state.editRoleId\n                }).then((res)=>{\n                    if(res.code === 0){\n                        message.success(\"修改成功\");\n                        this.setState({\n                            roleModalVisible: false\n                        });\n                        addRoleForm.resetFields();\n                        this.refreshTableData();\n                    } else {\n                        addRoleForm.setFields({\n                            roleName: {\n                                errors: [new Error(res.msg)],\n                            },\n                        });\n                        message.error(res.msg);\n                    }\n                }).catch((err)=>{\n                    message.error(err.toLocaleString());\n                });\n            }\n        });\n    }\n\n    handleCancelAddRole() {\n        let addRoleForm = this.roleModal;\n        addRoleForm.resetFields();\n        this.setState(() => ({\n            roleModalVisible: false,\n            userManagerModalVisible: false,\n            resourceManagerModalVisible: false,\n            authLinkManagerModalVisible: false,\n        }));\n    }\n\n    refreshTableData = () => {\n        this.setState({tableLoading: true});\n        getRolesList(this.state.pagination.page, this.state.pagination.pageSize).then((res)=>{\n            const pagination = this.state.pagination;\n            pagination.total = parseInt(res.data.total);\n            pagination.page = parseInt(res.data.page);\n            pagination.showTotal(parseInt(res.data.total));\n            this.setState({\n                pagination\n            });\n            let data = res['data']['roles'];\n            let tableData = [];\n            for (let i = 0; i < data.length; i++) {\n                tableData.push({\n                    key: data[i]['Id'],\n                    Id: data[i]['Id'],\n                    name: data[i]['name'],\n                    description: data[i]['description'],\n                });\n            }\n            this.setState({tableData: tableData, tableLoading: false});\n        }).catch((err)=>{\n            console.log(err)\n        });\n    };\n\n    componentDidMount() {\n        this.refreshTableData();\n    }\n\n    render() {\n        return (\n            <Content style={{\n                background: '#fff', padding: 20, margin: 0, height: \"100%\",\n            }}>\n                <OpsBreadcrumbPath pathData={[\"权限管理\", \"角色管理\", \"角色列表\"]} />\n                <div style={{ padding: \"0px 0px 10px 0px\" }}>\n                    <Row>\n                        <Col>\n                            <Button type=\"primary\" onClick={this.createRole}>新建角色</Button>\n                        </Col>\n                    </Row>\n                </div>\n                <RoleModal\n                    ref={(roleModal) => {this.roleModal = roleModal}}\n                    roleModalVisible={this.state.roleModalVisible}\n                    roleActionType={this.state.roleActionType}\n                    handleAddRole={this.handleAddRole}\n                    handleEditRole={this.handleEditRole}\n                    handleCancelAddRole={this.handleCancelAddRole}\n                />\n                {\n                    this.state.userManagerModalVisible ?\n                        <UserManagerModal\n                            roleId={this.state.roleId}\n                            userManagerModalVisible={this.state.userManagerModalVisible}\n                            currentRoleName={this.state.currentRoleName}\n                            hideModal={()=>{this.setState({userManagerModalVisible: false})}}\n                            handleCancelUserManager={this.handleCancelAddRole.bind(this)}\n                        /> : ''\n                }\n                {\n                    this.state.resourceManagerModalVisible ?\n                        <ResourceManagerModal\n                            roleId={this.state.roleId}\n                            resourceManagerModalVisible={this.state.resourceManagerModalVisible}\n                            currentRoleName={this.state.currentRoleName}\n                            hideModal={()=>{this.setState({resourceManagerModalVisible: false})}}\n                            handleCancelResourceManager={this.handleCancelAddRole.bind(this)}\n                        /> : ''\n                }\n                {\n                    this.state.authLinkManagerModalVisible ?\n                        <AuthLinkManagerModal\n                            roleId={this.state.roleId}\n                            authLinkManagerModalVisible={this.state.authLinkManagerModalVisible}\n                            currentRoleName={this.state.currentRoleName}\n                            hideModal={()=>{this.setState({authLinkManagerModalVisible: false})}}\n                            handleCancelAuthLinkManager={this.handleCancelAddRole.bind(this)}\n                        /> : ''\n                }\n                <Table\n                    columns={this.state.columns}\n                    dataSource={this.state.tableData}\n                    scroll={{ x: 'max-content' }}\n                    pagination={this.state.pagination}\n                    loading={this.state.tableLoading}\n                    rowClassName=\"fixedHeight\"\n                    size=\"small\"\n                />\n            </Content>\n        );\n    }\n}\n\nRolesManager = Form.create({ name: 'rolesManager' })(RolesManager);\n\nexport default RolesManager;\n","import React, {Component, Fragment} from 'react';\nimport {Layout, Table, Form, Popconfirm, Row, Col, Button, Modal, Input, message} from 'antd';\nimport {\n    deleteAuthLink,\n    getPermissionsList, postAddAuthLink,\n} from \"../../api/role\";\nimport OpsBreadcrumbPath from \"../breadcrumb_path\";\n\nconst { Content } = Layout;\n\nlet columnStyle = {\n    overFlow : \"hidden\",\n    textOverflow: \"ellipsis\",\n    display: \"-webkit-box\",\n};\n\nclass AuthLinkModal extends Component {\n\n    constructor(props) {\n        super(props);\n        this.handleAddAuthLink = this.handleAddAuthLink.bind(this);\n        this.state = {};\n    }\n\n    handleAddAuthLink() {\n        const { form, hideModal } = this.props;\n        form.validateFields((err, values) => {\n            if(!err){\n                postAddAuthLink(values).then((res)=>{\n                    if(res.code === 0){\n                        message.success(\"创建成功\");\n                        hideModal();\n                        this.props.refreshTableData();\n                    } else {\n                        form.setFields({\n                            name: {\n                                errors: [new Error(res.msg)],\n                            },\n                        });\n                        message.error(res.msg);\n                    }\n                }).catch((err)=>{\n                    message.error(err.toLocaleString());\n                });\n            }\n        });\n    }\n\n    render() {\n        const {getFieldDecorator} = this.props.form;\n        const formItemLayout = {\n            labelCol: {span: 6},\n            wrapperCol: {span: 14},\n        };\n        return (\n            <Fragment>\n                <Modal\n                    title=\"新建权限链接\"\n                    destroyOnClose=\"true\"\n                    visible={this.props.authLinkModalVisible}\n                    onOk={this.handleAddAuthLink}\n                    onCancel={this.props.handleCancelAddAuthLink}\n                    okText=\"确认\"\n                    cancelText=\"取消\"\n                >\n                    <Form ref>\n                        <Form.Item {...formItemLayout} label='权限名称'>\n                            {getFieldDecorator('name', {\n                                rules: [{ required: true, message: '请输入路径权限名称' }],\n                            })(\n                                <Input placeholder='请输入路径权限名称'/>\n                            )}\n                        </Form.Item>\n                        <Form.Item {...formItemLayout} label='权限描述'>\n                            {getFieldDecorator('description', {\n                                rules: [{ required: true, message: '请输入权限描述' }],\n                            })(\n                                <Input placeholder='请输入权限描述'/>\n                            )}\n                        </Form.Item>\n                        <Form.Item {...formItemLayout} label='权限URI路径'>\n                            {getFieldDecorator('path', {\n                                rules: [{ required: true, message: '请输入权限URI路径' }],\n                            })(\n                                <Input placeholder='请输入权限URI路径'/>\n                            )}\n                        </Form.Item>\n                    </Form>\n                </Modal>\n            </Fragment>\n        )\n    }\n}\n\nAuthLinkModal = Form.create({ name: 'add_auth_link' })(AuthLinkModal);\n\nclass PermissionsManager extends Component {\n\n    constructor(props){\n        super(props);\n        this.refreshTableData = this.refreshTableData.bind(this);\n        this.createAuthLink = this.createAuthLink.bind(this);\n        this.handleCancelAddAuthLink = this.handleCancelAddAuthLink.bind(this);\n        this.onShowSizeChange = this.onShowSizeChange.bind(this);\n        this.state = {\n            columns: [\n                {\n                    title: 'ID', dataIndex: 'Id', key: 'Id', width: 60, className: 'small_font',\n                },\n                {\n                    title: '权限名称', dataIndex: 'name', key: 'name', width: 200, className: 'small_font',\n                },\n                {\n                    title: '权限描述', dataIndex: 'description', key: 'description', className: \"small_font \"+{columnStyle},  width: 260,\n                },\n                {\n                    title: '权限路径', dataIndex: 'urlPath', key: 'urlPath', className: \"small_font \"+{columnStyle},  width: 360,\n                },\n                {},\n                {\n                    title: '操作',\n                    key: 'operation',\n                    fixed: 'right',\n                    width: 60,\n                    align: 'center',\n                    className: 'small_font',\n                    render: (text, record) => {\n                        return (\n                            <div>\n                                <Popconfirm\n                                    title=\"确定删除该项内容吗?\"\n                                    onConfirm={this.confirmDeleteAuthLink.bind(this, record)}\n                                    okText=\"确认\"\n                                    cancelText=\"取消\"\n                                >\n                                    <Button type=\"danger\" size=\"small\">删除</Button>\n                                </Popconfirm>\n                            </div>\n                        )\n                    },\n                },\n            ],\n            tableData: [],\n            tableLoading: false,\n            authLinkModalVisible: false,\n            current_data_id: null,\n            pagination: {\n                showSizeChanger: true,\n                pageSizeOptions: ['10', '20', '30', '100'],\n                onShowSizeChange: this.onShowSizeChange,\n                showQuickJumper: false,\n                showTotal: (total) => `共 ${total} 条`,\n                pageSize: 10,\n                page: 1,\n                total: 0,\n                onChange: (current) => this.changePage(current),\n            },\n        }\n    }\n\n    onShowSizeChange(current, size){\n        this.setState({\n            pagination: {\n                ...this.state.pagination,\n                page: 1,\n                current: 1,\n                pageSize: size,\n            }\n        }, ()=>{\n            this.refreshTableData();\n        });\n    }\n\n    confirmDeleteAuthLink = (e) => {\n        deleteAuthLink({\n            \"id\": e.Id\n        }).then((res)=>{\n            if(res.code === 0){\n                message.success(\"删除成功\");\n                this.refreshTableData();\n            } else {\n                message.error(res.msg);\n            }\n        }).catch((err)=>{\n            message.error(err.toLocaleString());\n        })\n    };\n\n    changePage = (e) => {\n        this.setState({\n            pagination: {\n                ...this.state.pagination,\n                page: e,\n                current: e\n            }\n        }, ()=>{\n            this.refreshTableData();\n        });\n    };\n\n    refreshTableData = () => {\n        this.setState({tableLoading: true});\n        getPermissionsList(this.state.pagination.page, this.state.pagination.pageSize).then((res)=>{\n            const pagination = this.state.pagination;\n            pagination.total = parseInt(res.data.total);\n            pagination.page = parseInt(res.data.page);\n            pagination.showTotal(parseInt(res.data.total));\n            this.setState({\n                pagination\n            });\n            let data = res['data']['permissions'];\n            let tableData = [];\n            for (let i = 0; i < data.length; i++) {\n                tableData.push({\n                    Id: data[i]['Id'],\n                    name: data[i]['name'],\n                    description: data[i]['description'],\n                    urlPath: data[i]['urlPath'],\n                });\n            }\n            this.setState({tableData: tableData, tableLoading: false});\n        }).catch((err)=>{\n            console.log(err)\n        });\n    };\n\n    componentDidMount() {\n        this.refreshTableData();\n    }\n\n    createAuthLink() {\n        this.setState({\n            authLinkModalVisible: true\n        })\n    }\n\n    handleCancelAddAuthLink() {\n        this.setState({\n            authLinkModalVisible: false\n        })\n    }\n\n    render() {\n        return (\n            <Content style={{\n                background: '#fff', padding: 20, margin: 0, height: \"100%\",\n            }}>\n                <OpsBreadcrumbPath pathData={[\"权限管理\", \"链接权限\", \"权限链接列表\"]} />\n                <div style={{ padding: \"0px 0px 10px 0px\" }}>\n                    <Row>\n                        <Col>\n                            <Button type=\"primary\" onClick={this.createAuthLink}>新建权限链接</Button>\n                        </Col>\n                    </Row>\n                </div>\n                <AuthLinkModal\n                    authLinkModalVisible={this.state.authLinkModalVisible}\n                    refreshTableData={this.refreshTableData}\n                    hideModal={()=>{this.setState({authLinkModalVisible: false})}}\n                    handleCancelAddAuthLink={this.handleCancelAddAuthLink}\n                />\n                <Table columns={this.state.columns} dataSource={this.state.tableData} scroll={{ x: 'max-content' }} pagination={this.state.pagination} loading={this.state.tableLoading} rowClassName=\"fixedHeight\" size=\"small\"/>\n            </Content>\n        );\n    }\n}\n\nPermissionsManager = Form.create({ name: 'permissionsManager' })(PermissionsManager);\n\nexport default PermissionsManager;\n","import React, { Component } from 'react';\nimport {Layout, Input, Form, Button, message} from 'antd';\nimport {postUpdatePassword} from \"../../api/user\";\n\nconst { Content } = Layout;\n\n\nclass PasswordManager extends Component {\n\n    constructor(props) {\n        super(props);\n        this.setState({\n\n        });\n    }\n\n    compareToFirstPassword = (rule, value, callback) => {\n        const form = this.props.form;\n        if (value && value !== form.getFieldValue('password')) {\n            callback('两次密码不一致!');\n        } else {\n            callback();\n        }\n    };\n\n    updatePassword = (e) => {\n        e.preventDefault();\n        this.props.form.validateFields((err, values) => {\n            if (!err) {\n                let reqData = {\n                    \"password\": values['password'],\n                    \"confirm_password\": values['confirm_password']\n                };\n                postUpdatePassword(reqData).then((res)=>{\n                    if(res.code === 0){\n                        message.success(\"密码修改成功!\");\n                    }\n                }).catch((err)=>{\n                    console.log(err)\n                });\n            }\n        });\n    };\n\n    render() {\n        const { getFieldDecorator } = this.props.form;\n        const formItemLayout = {\n            labelCol: { span: 2 },\n            wrapperCol: { span: 6 },\n        };\n        return (\n            <Content style={{\n                background: '#fff', padding: 20, margin: 0, height: \"100%\",\n            }}>\n                <Form onSubmit={this.updatePassword}>\n                    <Form.Item label=\"新密码\" hasFeedback {...formItemLayout}>\n                        {getFieldDecorator('password', {\n                            rules: [\n                                {\n                                    required: true,\n                                    message: '请输入新密码',\n                                }\n                            ],\n                        })(<Input />)}\n                    </Form.Item>\n                    <Form.Item label=\"确认密码\" hasFeedback {...formItemLayout}>\n                        {getFieldDecorator('confirm_password', {\n                            rules: [\n                                {\n                                    required: true,\n                                    message: '请确认新密码',\n                                },\n                                {\n                                    validator: this.compareToFirstPassword\n                                }\n                            ],\n                        })(<Input />)}\n                    </Form.Item>\n                    <Form.Item {...formItemLayout} style={{ textAlign: 'center' }}>\n                        <Button type=\"primary\" htmlType=\"submit\">\n                            确 认\n                        </Button>\n                    </Form.Item>\n                </Form>\n            </Content>\n        );\n    }\n    \n}\n\nPasswordManager = Form.create({ name: 'passwordManagerForm' })(PasswordManager);\n\nexport default PasswordManager;","import React, { Component } from \"react\";\nimport {Button, Card, Col, Layout, message, Row, Statistic} from \"antd\";\nimport OpsBreadcrumbPath from \"../breadcrumb_path\";\nimport {\n    getAliyunStatisData,\n    getSyncAliyunEcs,\n    getSyncAliyunKv,\n    getSyncAliyunRds,\n    getSyncAliyunSlb\n} from \"../../api/data_api\";\n\nconst { Content } = Layout;\n\nclass SyncAliyunContent extends Component {\n\n    constructor(props) {\n        super(props);\n        this.syncAliyunEcs = this.syncAliyunEcs.bind(this);\n        this.syncAliyunRds = this.syncAliyunRds.bind(this);\n        this.syncAliyunKv = this.syncAliyunKv.bind(this);\n        this.syncAliyunSlb = this.syncAliyunSlb.bind(this);\n        this.state = {\n            syncEcsLoading: false,\n            syncRdsLoading: false,\n            syncKvLoading: false,\n            syncSlbLoading: false,\n        }\n    }\n\n    componentDidMount() {\n        this.syncAliyunStatisData();\n    }\n\n    syncAliyunStatisData() {\n        getAliyunStatisData().then((res)=>{\n            if(res.code===0){\n                this.setState({\n                    ecsCount: res.data.ecsCount,\n                    rdsCount: res.data.rdsCount,\n                    kvCount: res.data.kvCount,\n                    slbCount: res.data.slbCount,\n                })\n            } else {\n                message.error(\"获取钉钉统计数据异常\")\n            }\n        }).catch((err)=>{\n            message.error(err.toLocaleString())\n        })\n    }\n\n    syncAliyunEcs() {\n        const loadingType = \"syncEcsLoading\";\n        this.setState({[loadingType]: true});\n        getSyncAliyunEcs().then((res)=>{\n            if(res.code===0){\n                message.success(\"同步数据成功\");\n                this.setState({[loadingType]: false});\n                this.syncAliyunStatisData();\n            } else {\n                message.error(res.msg);\n                this.setState({[loadingType]: false});\n            }\n        }).catch((err)=>{\n            message.error(err.toLocaleString());\n            this.setState({[loadingType]: false});\n        })\n    }\n\n    syncAliyunRds() {\n        const loadingType = \"syncRdsLoading\";\n        this.setState({[loadingType]: true});\n        getSyncAliyunRds().then((res)=>{\n            if(res.code===0){\n                message.success(\"同步数据成功\");\n                this.setState({[loadingType]: false});\n                this.syncAliyunStatisData();\n            } else {\n                message.error(res.msg);\n                this.setState({[loadingType]: false});\n            }\n        }).catch((err)=>{\n            message.error(err.toLocaleString());\n            this.setState({[loadingType]: false});\n        })\n    }\n\n    syncAliyunKv() {\n        const loadingType = \"syncKvLoading\";\n        this.setState({[loadingType]: true});\n        getSyncAliyunKv().then((res)=>{\n            if(res.code===0){\n                message.success(\"同步数据成功\");\n                this.setState({[loadingType]: false});\n                this.syncAliyunStatisData();\n            } else {\n                message.error(res.msg);\n                this.setState({[loadingType]: false});\n            }\n        }).catch((err)=>{\n            message.error(err.toLocaleString());\n            this.setState({[loadingType]: false});\n        })\n    }\n\n    syncAliyunSlb() {\n        const loadingType = \"syncSlbLoading\";\n        this.setState({[loadingType]: true});\n        getSyncAliyunSlb().then((res)=>{\n            if(res.code===0){\n                message.success(\"同步数据成功\");\n                this.setState({[loadingType]: false});\n                this.syncAliyunStatisData();\n            } else {\n                message.error(res.msg);\n                this.setState({[loadingType]: false});\n            }\n        }).catch((err)=>{\n            message.error(err.toLocaleString());\n            this.setState({[loadingType]: false});\n        })\n    }\n\n    render() {\n        return (\n            <Content style={{\n                background: '#fff', padding: 20, margin: 0, height: \"100%\",\n            }}>\n                <OpsBreadcrumbPath pathData={[\"数据管理\", \"阿里云数据\"]} />\n                <div style={{ marginBottom: 20 }}>\n                    <Card size=\"small\" title=\"平台数据总览\">\n                        <Row>\n                            <Col span={5}>\n                                <Statistic title=\"ECS总数\" value={this.state.ecsCount} precision={0} />\n                                <Button style={{ marginTop: 16 }} type=\"primary\"\n                                        loading={this.state.syncEcsLoading}\n                                        onClick={this.syncAliyunEcs}>\n                                    同步平台数据\n                                </Button>\n                            </Col>\n                            <Col span={5}>\n                                <Statistic title=\"RDS总数\" value={this.state.rdsCount} precision={0} />\n                                <Button style={{ marginTop: 16 }} type=\"primary\"\n                                        loading={this.state.syncRdsLoading}\n                                        onClick={this.syncAliyunRds}>\n                                    同步平台数据\n                                </Button>\n                            </Col>\n                            <Col span={5}>\n                                <Statistic title=\"Redis总数\" value={this.state.kvCount} precision={0} />\n                                <Button style={{ marginTop: 16 }} type=\"primary\"\n                                        loading={this.state.syncKvLoading}\n                                        onClick={this.syncAliyunKv}>\n                                    同步平台数据\n                                </Button>\n                            </Col>\n                            <Col span={5}>\n                                <Statistic title=\"SLB总数\" value={this.state.slbCount} precision={0} />\n                                <Button style={{ marginTop: 16 }} type=\"primary\"\n                                        loading={this.state.syncSlbLoading}\n                                        onClick={this.syncAliyunSlb}>\n                                    同步平台数据\n                                </Button>\n                            </Col>\n                        </Row>\n                    </Card>\n                </div>\n            </Content>\n        )\n    }\n\n}\n\nexport default SyncAliyunContent;","import req from \"../utils/axios\";\n\nconst SyncTimeOut = 90000;\n\nconst getSyncAliyunEcs = (params) =>{\n    return req.get('/data/syncAliyunEcs', params, SyncTimeOut)\n};\nexport {getSyncAliyunEcs}\n\nconst getSyncAliyunRds = (params) =>{\n    return req.get('/data/syncAliyunRds', params, SyncTimeOut)\n};\nexport {getSyncAliyunRds}\n\nconst getSyncAliyunKv = (params) =>{\n    return req.get('/data/syncAliyunKv', {}, SyncTimeOut)\n};\nexport {getSyncAliyunKv}\n\nconst getSyncAliyunSlb = (params) =>{\n    return req.get('/data/syncAliyunSlb', {}, SyncTimeOut)\n};\nexport {getSyncAliyunSlb}\n\nconst getAliyunStatisData = (params) =>{\n    return req.get('/data/syncAliyunStatisData')\n};\nexport {getAliyunStatisData}","import React, {Component} from \"react\";\nimport {\n    Button,\n    Col,\n    Input,\n    Row,\n    Table,\n    Layout,\n    DatePicker,\n    Select, message, Modal, Form, Typography, Divider, Popconfirm, Tooltip\n} from \"antd\";\nimport OpsBreadcrumbPath from \"../breadcrumb_path\";\nimport {\n    deleteCloudOtherRes,\n    getCloudAccouts,\n    getCloudOtherRes,\n    postCloudOtherRes, putCloudOtherRes\n} from \"../../api/cloud\";\nimport moment from \"moment\";\nimport ExtraInfoModal from \"./common/extra_info_modal\";\n\nconst {Option} = Select;\nconst {Text, Paragraph} = Typography;\nconst {Content} = Layout;\n\nclass OtherInfoModal extends Component {\n    constructor(props) {\n        super(props);\n        this.switchChange = this.switchChange.bind(this);\n        this.state = {\n            sitesData: [],\n            renewSwitch: true,\n            cloudAccountList: []\n        }\n    }\n\n    componentDidMount() {\n        this.loadCloudAccountData();\n    }\n\n    loadCloudAccountData() {\n        getCloudAccouts(1, 100).then((res)=>{\n            if(res.code===0){\n                this.setState({\n                    cloudAccountList: res.data.accounts,\n                })\n            } else {\n                message.error(res.msg);\n            }\n        }).catch((err)=>{\n            message.error(err.toLocaleString());\n        })\n    }\n\n    switchChange(value) {\n        this.setState({renewSwitch: value});\n    }\n\n    render() {\n        const { getFieldDecorator } = this.props.form;\n        const formItemLayout = {\n            labelCol: { span: 6 },\n            wrapperCol: { span: 17 },\n        };\n        let accountOptions;\n        accountOptions = this.state.cloudAccountList.map((item)=>{\n            return (\n                <Option key={item.id} value={item.id}>{item.accountName}</Option>\n            );\n        });\n        const { actionType } = this.props;\n        let actionName = \"新增\";\n        if(actionType===\"update\"){\n            actionName = \"编辑\"\n        }\n        return (\n            <Modal\n                title={actionName+\" - 资源信息\"}\n                destroyOnClose={true}\n                visible={this.props.server_info_modal_visible}\n                onOk={this.props.handlePostServerInfoSubmit}\n                onCancel={this.props.handlePostServerInfoCancel}\n                okText=\"确认\"\n                cancelText=\"取消\"\n                centered={true}\n                width={1000}\n            >\n                <Form>\n                    <Row>\n                        <Col span={11} offset={1}>\n                            <Form.Item label=\"资源类型\" {...formItemLayout}>\n                                {getFieldDecorator('resType', {\n                                    rules: [{ required: true, message: '请选择资源类型' }],\n                                })(\n                                    <Select>\n                                        <Option value=\"MongoDB\">MongoDB</Option>\n                                        <Option value=\"MaxCompute\">MaxCompute</Option>\n                                        <Option value=\"SSL\">SSL</Option>\n                                        <Option value=\"带宽\">带宽</Option>\n                                        <Option value=\"后付费\">后付费</Option>\n                                        <Option value=\"弹性IP\">弹性IP</Option>\n                                        <Option value=\"Memcached\">Memcached</Option>\n                                        <Option value=\"Kafka\">Kafka</Option>\n                                        <Option value=\"NAS\">NAS</Option>\n                                        <Option value=\"PolarDB\">PolarDB</Option>\n                                        <Option value=\"HBase\">HBase</Option>\n                                    </Select>\n                                )}\n                            </Form.Item>\n                        </Col>\n                        <Col span={11}>\n                            <Form.Item label=\"实例ID\" {...formItemLayout}>\n                                {getFieldDecorator('instanceId', {\n                                    rules: [{ }],\n                                })(\n                                    <Input />\n                                )}\n                            </Form.Item>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col span={11} offset={1}>\n                            <Form.Item label=\"实例名称\" {...formItemLayout}>\n                                {getFieldDecorator('instanceName', {\n                                    rules: [{ required: true, message: '请输入实例名称' }],\n                                })(\n                                    <Input />\n                                )}\n                            </Form.Item>\n                        </Col>\n                        <Col span={11}>\n                            <Form.Item label=\"连接地址\" {...formItemLayout}>\n                                {getFieldDecorator('connections', {\n                                    rules: [{ }],\n                                })(\n                                    <Input />\n                                )}\n                            </Form.Item>\n                        </Col>\n                    </Row>\n\n                    <Row>\n                        <Col span={11} offset={1}>\n                            <Form.Item label=\"区域\" {...formItemLayout}>\n                                {getFieldDecorator('region', {\n                                    rules: [{ }],\n                                })(\n                                    <Input />\n                                )}\n                            </Form.Item>\n                        </Col>\n                        <Col span={11}>\n                            <Form.Item label=\"Engine\" {...formItemLayout}>\n                                {getFieldDecorator('engine', {\n                                    rules: [{ }],\n                                })(\n                                    <Input />\n                                )}\n                            </Form.Item>\n                        </Col>\n                    </Row>\n\n                    <Row>\n                        <Col span={11} offset={1}>\n                            <Form.Item label=\"CPU\" {...formItemLayout}>\n                                {getFieldDecorator('cpu', {\n                                    rules: [{ }],\n                                })(\n                                    <Input />\n                                )}\n                            </Form.Item>\n                        </Col>\n                        <Col span={11}>\n                            <Form.Item label=\"磁盘\" {...formItemLayout}>\n                                {getFieldDecorator('disk', {\n                                    rules: [{ }],\n                                })(\n                                    <Input />\n                                )}\n                            </Form.Item>\n                        </Col>\n                    </Row>\n\n                    <Row>\n                        <Col span={11} offset={1}>\n                            <Form.Item label=\"内存\" {...formItemLayout}>\n                                {getFieldDecorator('memory', {\n                                    rules: [{ }],\n                                })(\n                                    <Input />\n                                )}\n                            </Form.Item>\n                        </Col>\n                        <Col span={11}>\n                            <Form.Item label=\"带宽\" {...formItemLayout}>\n                                {getFieldDecorator('bandwidth', {\n                                    rules: [{ }],\n                                })(\n                                    <Input />\n                                )}\n                            </Form.Item>\n                        </Col>\n                    </Row>\n\n                    <Row>\n                        <Col span={11} offset={1}>\n                            <Form.Item label=\"创建时间\" {...formItemLayout}>\n                                {getFieldDecorator('createTime', {\n                                    rules: [{ required: true, message: '请输入创建时间' }],\n                                })(\n                                    <DatePicker format=\"YYYY-MM-DD\" style={{width: '100%'}}/>\n                                )}\n                            </Form.Item>\n                        </Col>\n                        <Col span={11}>\n                            <Form.Item label=\"过期时间\" {...formItemLayout}>\n                                {getFieldDecorator('expiredTime', {\n                                    rules: [{ required: true, message: '请输入过期时间' }],\n                                })(\n                                    <DatePicker format=\"YYYY-MM-DD\" style={{width: '100%'}}/>\n                                )}\n                            </Form.Item>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col span={11} offset={1}>\n                            <Form.Item label=\"云账号\" {...formItemLayout}>\n                                {getFieldDecorator('cloudAccountId', {\n                                })(\n                                    <Select>\n                                        {accountOptions}\n                                    </Select>\n                                )}\n                            </Form.Item>\n                        </Col>\n                    </Row>\n                </Form>\n            </Modal>\n        )\n    }\n}\n\nOtherInfoModal = Form.create({ name: 'OtherInfoModal' })(OtherInfoModal);\n\nclass OtherContent extends Component{\n\n    constructor(props){\n        super(props);\n        this.keywordOnChange = this.keywordOnChange.bind(this);\n        this.handleQuery = this.handleQuery.bind(this);\n        this.handlePostOtherInfoSubmit = this.handlePostOtherInfoSubmit.bind(this);\n        this.handlePostOtherInfoCancel = this.handlePostOtherInfoCancel.bind(this);\n        this.onShowSizeChange = this.onShowSizeChange.bind(this);\n        this.changePage = this.changePage.bind(this);\n        this.handleAdd = this.handleAdd.bind(this);\n        this.handleResTypeChange = this.handleResTypeChange.bind(this);\n        this.handleCloudAccountChange = this.handleCloudAccountChange.bind(this);\n        this.state = {\n            columns: [\n                {\n                    title: 'Id', dataIndex: 'ID', key: 'ID', className: 'small_font',\n                    render: value => {\n                        return (\n                            <Text ellipsis={true}>{value}</Text>\n                        )\n                    }\n                },\n                {\n                    title: '资源类型', dataIndex: 'ResType', key: 'ResType', className: 'small_font',\n                    render: value => {\n                        return (\n                            <Text ellipsis={true}>{value}</Text>\n                        )\n                    }\n                },\n                {\n                    title: '实例名称', dataIndex: 'InstanceName', key: 'InstanceName', className: 'small_font',\n                    render: value => {\n                        return (\n                            <Tooltip title={value}>\n                                <Text ellipsis={true}>{value}</Text>\n                            </Tooltip>\n                        )\n                    }\n                },\n                {\n                    title: '云账号', dataIndex: 'CloudAccountName', key: 'CloudAccountName', className: 'small_font',\n                    render: value => {\n                        return (\n                            <Text ellipsis={true}>{value}</Text>\n                        )\n                    }\n                },\n                {\n                    title: '实例id', dataIndex: 'InstanceId', key: 'InstanceId', className: 'small_font',\n                    render: value => {\n                        return (\n                            <Text ellipsis={true}>{value}</Text>\n                        )\n                    }\n                },\n                {\n                    title: '访问地址', dataIndex: 'Connections', key: 'Connections', className: 'small_font',\n                    render: value => {\n                        return (\n                            <Paragraph style={{marginBottom: 0}} copyable={value!==\"\"}>{value}</Paragraph>\n                        );\n                    }\n                },\n                {\n                    title: 'Region', dataIndex: 'Region', key: 'Region', className: 'small_font',\n                    render: value => {\n                        return (\n                            <Text>{value}</Text>\n                        );\n                    }\n                },\n                {\n                    title: 'Engine', dataIndex: 'Engine', key: 'Engine', className: 'small_font',\n                    render: value => {\n                        return (\n                            <Text>{value}</Text>\n                        );\n                    }\n                },\n                {\n                    title: 'Cpu', dataIndex: 'Cpu', key: 'Cpu', className: 'small_font',\n                    render: value => {\n                        return (\n                            <Text>{value}</Text>\n                        );\n                    }\n                },\n                {\n                    title: '带宽', dataIndex: 'Bandwidth', key: 'Bandwidth', className: 'small_font',\n                    render: value => {\n                        return (\n                            <Text ellipsis={true}>{value}</Text>\n                        )\n                    }\n                },\n                {\n                    title: '创建时间', dataIndex: 'CreateTime', key: 'CreateTime', className: 'small_font',\n                    render: value => {\n                        return (\n                            <Text ellipsis={true}>{value}</Text>\n                        )\n                    }\n                },\n                {\n                    title: '过期时间', dataIndex: 'ExpiredTime', key: 'ExpiredTime', className: 'small_font',\n                    render: value => {\n                        return (\n                            <Text ellipsis={true}>{value}</Text>\n                        )\n                    }\n                },\n                {\n                    title: '操作',\n                    key: 'operation',\n                    fixed: 'right',\n                    align: 'center',\n                    className: 'small_font',\n                    render: (text, record) => {\n                        return (\n                            <div>\n                                <Button type=\"info\" size=\"small\" onClick={this.serverEdit.bind(this, record)}>编辑</Button>\n                                <Divider type=\"vertical\" />\n                                <Popconfirm\n                                    title=\"确定删除该项内容?\"\n                                    onConfirm={this.serverDelete.bind(this, record)}\n                                    okText=\"确认\"\n                                    cancelText=\"取消\"\n                                >\n                                    <Button type=\"danger\" size=\"small\">删除</Button>\n                                </Popconfirm>\n                            </div>\n                        )\n                    },\n                },\n            ],\n            tableLoading: false,\n            tableData: [],\n            pagination: {\n                showSizeChanger: true,\n                pageSizeOptions: ['10', '20', '30', '100'],\n                onShowSizeChange: this.onShowSizeChange,\n                showQuickJumper: false,\n                showTotal: (total) => `共 ${total} 条`,\n                pageSize: 10,\n                page: 1,\n                total: 0,\n                onChange: (current) => this.changePage(current),\n            },\n            actionType: \"add\",\n            editId: 0,\n            extraInfoModalVisible: false,\n            other_info_modal_visible: false,\n            queryExpiredTime: null,\n            queryKeyword: \"\",\n            queryCloudAccount: \"0\",\n            queryManageUser: \"0\",\n            cloudAccountList: [],\n            queryResType: \"所有\",\n            selectedRowKeys: [],\n            idsList: [],\n            updateMode: \"single\",\n        }\n    }\n\n    componentDidMount() {\n        this.refreshTableData();\n        this.loadCloudAccountsData();\n    }\n\n    loadCloudAccountsData() {\n        let that = this;\n        getCloudAccouts(1, 100).then((res)=>{\n            if(res.code===0){\n                that.setState({\n                    cloudAccountList: res.data.accounts,\n                })\n            } else {\n                message.error(res.msg);\n            }\n        }).catch((err)=>{\n            message.error(err.toLocaleString());\n        })\n    }\n\n    onShowSizeChange(current, size){\n        this.setState({\n            pagination: {\n                ...this.state.pagination,\n                page: 1,\n                current: 1,\n                pageSize: size,\n            }\n        }, ()=>{\n            this.refreshTableData();\n        });\n    }\n\n    changePage = (e) => {\n        this.setState({\n            pagination: {\n                ...this.state.pagination,\n                page: e,\n                current: e\n            }\n        }, ()=>{\n            this.refreshTableData();\n        });\n    };\n\n    refreshTableData = () => {\n        this.setState({tableLoading: true});\n        const queryParams = {\n            \"page\": this.state.pagination.page,\n            \"size\": this.state.pagination.pageSize,\n            \"queryKeyword\": this.state.queryKeyword,\n            \"queryResType\": this.state.queryResType,\n            \"queryExpiredTime\": this.state.queryExpiredTime===null ? null : this.state.queryExpiredTime.format('YYYY-MM-DD HH:mm:ss'),\n            \"queryCloudAccount\": this.state.queryCloudAccount,\n        };\n        getCloudOtherRes(queryParams).then((res)=>{\n            const pagination = this.state.pagination;\n            pagination.total = parseInt(res.data.total);\n            pagination.page = parseInt(res.data.page);\n            pagination.showTotal(parseInt(res.data.total));\n            this.setState({\n                pagination: {...pagination}\n            });\n            let data = res['data']['otherRes'];\n            let tableData = [];\n            for (let i = 0; i < data.length; i++) {\n                tableData.push({\n                    key: data[i]['ID'],\n                    ID: data[i]['ID'],\n                    CloudAccountId: data[i]['CloudAccountId'],\n                    CloudAccountName: data[i]['CloudAccountName'],\n                    ResType: data[i]['ResType'],\n                    InstanceId: data[i]['InstanceId'],\n                    InstanceName: data[i]['InstanceName'],\n                    Connections: data[i]['Connections'],\n                    Region: data[i]['Region'],\n                    Engine: data[i]['Engine'],\n                    Cpu: data[i]['Cpu'],\n                    Bandwidth: data[i]['Bandwidth'],\n                    RenewStatus: data[i]['RenewStatus'],\n                    RenewSiteId: data[i]['RenewSiteId'],\n                    BankAccount: data[i]['BankAccount'],\n                    CreateTime: moment(data[i]['CreateTime']).format(\"YYYY-MM-DD\"),\n                    ExpiredTime: moment(data[i]['ExpiredTime']).format(\"YYYY-MM-DD\"),\n                });\n            }\n            this.setState({tableData: tableData, tableLoading: false});\n        }).catch((err)=>{\n            message.error(err)\n        });\n    };\n\n    handleAdd() {\n        this.setState({other_info_modal_visible: true, actionType: \"add\", editId: 0});\n    }\n\n    handleQuery() {\n        this.setState({\n            pagination: {\n                ...this.state.pagination,\n                page: 1,\n                current: 1,\n            }\n        }, ()=>{\n            this.refreshTableData();\n        });\n    }\n\n    onExpiredDateChange = (moment) => {\n        if(moment == null) {\n            this.setState({queryExpiredTime: null});\n        } else {\n            this.setState({queryExpiredTime: moment});\n        }\n    };\n\n    keywordOnChange(e) {\n        this.setState({queryKeyword: e.target.value});\n    }\n\n    handleResTypeChange(value) {\n        this.setState({queryResType: value});\n    }\n\n    handleCloudAccountChange(value) {\n        this.setState({queryCloudAccount: value});\n    }\n\n    handleManageUserChange = (queryManageUser) => {\n        this.setState({queryManageUser});\n    };\n\n    serverEdit(data) {\n        const that = this;\n        this.setState({other_info_modal_visible: true, editId: data.ID, actionType: \"update\", updateMode: \"single\"}, ()=>{\n            that.otherInfoFormRef.props.form.setFieldsValue({\n                cloudAccountId: data.CloudAccountId !== 0 ?  data.CloudAccountId : null,\n                resType: data.ResType,\n                instanceId: data.InstanceId,\n                instanceName: data.InstanceName,\n                connections: data.Connections,\n                region: data.Region,\n                engine: data.Engine,\n                cpu: data.Cpu,\n                bandwidth: data.Bandwidth,\n                createTime: data.CreateTime !== \"\" ? moment(data.CreateTime, 'YYYY-MM-DD') : undefined,\n                expiredTime: data.ExpiredTime !== \"\" ? moment(data.ExpiredTime, 'YYYY-MM-DD') : undefined,\n            });\n        });\n    }\n\n    serverDelete(data) {\n        deleteCloudOtherRes(data.ID).then((res)=>{\n            if(res.code===0){\n                message.success(\"删除成功\");\n                this.refreshTableData();\n            } else {\n                message.error(res.msg);\n            }\n        }).catch((err)=>{\n            message.error(err.toLocaleString());\n        })\n    }\n\n    handlePostOtherInfoSubmit() {\n        this.otherInfoFormRef.props.form.validateFields((err, values) => {\n            if (!err) {\n                postCloudOtherRes({\n                    ...values,\n                    id: this.state.editId,\n                    createTime: values.createTime.format('YYYY-MM-DD'),\n                    expiredTime: values.expiredTime === undefined ? undefined : values.expiredTime.format('YYYY-MM-DD'),\n                }).then((res)=>{\n                    if(res.code===0){\n                        if(this.state.actionType === \"add\"){\n                            message.success(\"添加成功，请到权限管理中增加访问权限！\");\n                        } else {\n                            message.success(\"编辑成功\");\n                        }\n                        this.setState({other_info_modal_visible: false});\n                        this.refreshTableData();\n                    } else {\n                        message.error(res.msg);\n                    }\n                }).catch((err)=>{\n                    message.error(err.toLocaleString());\n                });\n            }\n        })\n    };\n\n    handlePostOtherInfoCancel() {\n        this.setState({other_info_modal_visible: false});\n    };\n\n    handleExtraInfoOk(data) {\n        let targetId = \"\";\n        if(this.state.updateMode===\"single\"){\n            targetId = String(this.state.editId);\n        } else {\n            targetId = this.state.idsList.join(\",\");\n        }\n        putCloudOtherRes({\n            ...data,\n            id: targetId,\n        }).then((res)=>{\n            if(res.code===0){\n                message.success(\"修改成功\");\n                this.setState({extraInfoModalVisible: false, selectedRowKeys: []});\n            } else {\n                message.error(res.msg);\n            }\n        }).catch((err)=>{\n            message.error(err.toLocaleString());\n        });\n    }\n\n    handleExtraInfoCancel(data) {\n        this.setState({extraInfoModalVisible: false});\n    }\n\n    handleBatchUpdate = () => {\n        const idList = this.state.selectedRowKeys;\n        if(idList.length===0){\n            message.warn(\"请先选择数据\");\n            return;\n        }\n        this.setState({extraInfoModalVisible: true, updateMode: 'batch', idsList: idList});\n    };\n\n    onSelectChange = selectedRowKeys => {\n        this.setState({ selectedRowKeys });\n    };\n\n    render() {\n        const { selectedRowKeys } = this.state;\n        const rowSelection = {\n            selectedRowKeys,\n            onChange: this.onSelectChange,\n        };\n        return (\n            <Content style={{\n                background: '#fff', padding: \"5px 20px\", margin: 0, height: \"100%\",\n            }}>\n                <OpsBreadcrumbPath pathData={[\"云资源\", \"其它资源\", \"其它资源汇总列表\"]} />\n                <Row style={{ padding: \"0px 0px 10px 0px\" }}>\n                    <Col span={4} className=\"col-span\">\n                        <DatePicker style={{ width: \"100%\" }} defaultValue={this.state.queryExpiredTime} placeholder=\"到期截止时间\" onChange={this.onExpiredDateChange}/>\n                    </Col>\n                    <Col span={4} className=\"col-span\">\n                        <Input placeholder=\"输入实例id/名称/地址查询\" value={this.state.queryKeyword} onChange={this.keywordOnChange}/>\n                    </Col>\n                    <Col span={3} className=\"col-span\">\n                        <Select defaultValue={this.state.queryResType} style={{ width: \"100%\" }} onChange={this.handleResTypeChange}>\n                            <Option value=\"所有\">所有</Option>\n                            <Option value=\"MongoDB\">MongoDB</Option>\n                            <Option value=\"MaxCompute\">MaxCompute</Option>\n                            <Option value=\"SSL\">SSL</Option>\n                            <Option value=\"带宽\">带宽</Option>\n                            <Option value=\"后付费\">后付费</Option>\n                            <Option value=\"弹性IP\">弹性IP</Option>\n                            <Option value=\"Memcached\">Memcached</Option>\n                            <Option value=\"Kafka\">Kafka</Option>\n                            <Option value=\"NAS\">NAS</Option>\n                            <Option value=\"PolarDB\">PolarDB</Option>\n                            <Option value=\"HBase\">HBase</Option>\n                        </Select>\n                    </Col>\n                    <Col span={2} className=\"col-span\">\n                        <Button style={{ width: \"100%\" }} type=\"primary\" icon=\"search\" onClick={this.handleQuery}>查 询</Button>\n                    </Col>\n                    <Col span={2} className=\"col-span\">\n                        <Button style={{ width: \"100%\" }} icon=\"plus-circle\" onClick={this.handleAdd}>新 增</Button>\n                    </Col>\n                </Row>\n\n                {/*完善信息组件*/}\n                <ExtraInfoModal\n                    wrappedComponentRef={(form) => this.extraInfoFormRef = form}\n                    visible={this.state.extraInfoModalVisible}\n                    handleOk={this.handleExtraInfoOk}\n                    handleCancel={this.handleExtraInfoCancel}\n                />\n\n                <OtherInfoModal\n                    wrappedComponentRef={(form) => this.otherInfoFormRef = form}\n                    server_info_modal_visible={this.state.other_info_modal_visible}\n                    actionType={this.state.actionType}\n                    handlePostServerInfoSubmit={this.handlePostOtherInfoSubmit}\n                    handlePostServerInfoCancel={this.handlePostOtherInfoCancel}\n                />\n\n                <Table\n                    columns={this.state.columns}\n                    dataSource={this.state.tableData}\n                    scroll={{ x: 'max-content' }}\n                    pagination={this.state.pagination}\n                    loading={this.state.tableLoading}\n                    rowClassName=\"fixedHeight\"\n                    bordered\n                    size=\"small\"\n                    rowSelection={rowSelection}\n                />\n            </Content>\n        )\n    }\n\n}\n\nexport default OtherContent;","import React, {Component} from 'react';\nimport {Button, Card, Icon, Layout, Alert} from \"antd\";\nimport { Terminal } from 'xterm';\nimport { AttachAddon } from 'xterm-addon-attach';\nimport 'xterm/css/xterm.css';\nimport ReconnectingWebSocket from \"reconnecting-websocket\";\nimport {WSBase} from \"../../config\";\n\nconst { Content } = Layout;\nlet attachAddon;\n\nclass WebTerminalContent extends Component {\n\n    constructor(props) {\n        super(props);\n        this.goBack = this.goBack.bind(this);\n        this.rws = new ReconnectingWebSocket(WSBase + 'kubernetes/container_terminal');\n        this.terminal = new Terminal({\n            rows: 36,\n            fontSize: 14,\n            cursorBlink: true,\n            cursorStyle: 'block',\n            bellStyle: \"sound\",\n            theme: \"Console\",\n        });\n        this.terminal.prompt = () => {\n            this.terminal.write('\\r\\n$ ');\n        };\n        this.state = {\n            containerDetail: this.props.location.state,\n            connectionStatus: 0,\n        }\n    }\n\n    componentDidMount() {\n        this.terminal.open(document.getElementById('terminal'));\n        this.terminal.writeln('Welcome to use FuLu Web Terminal.');\n        this.terminal.prompt();\n        this.initWsConnection();\n        attachAddon = new AttachAddon(this.rws);\n        this.terminal.loadAddon(attachAddon);\n        this.terminal.focus();\n    }\n\n    componentWillUnmount() {\n        this.rws.send(JSON.stringify({\n            \"action\": \"connection_close\",\n            \"clusterId\": localStorage.getItem(\"clusterId\"),\n            \"namespace\": this.state.containerDetail.namespace,\n            \"podName\": this.state.containerDetail.podName,\n            \"containerName\": this.state.containerDetail.containerName,\n        }));\n        this.rws.close();\n        this.terminal.dispose();\n    }\n\n    initWsConnection() {\n        let that = this;\n        this.rws.addEventListener('open', () => {\n            that.rws.send(JSON.stringify({\n                \"action\": \"init_connection\",\n                \"clusterId\": localStorage.getItem(\"clusterId\"),\n                \"namespace\": that.state.containerDetail.namespace,\n                \"podName\": that.state.containerDetail.podName,\n                \"containerName\": that.state.containerDetail.containerName,\n            }));\n            that.setState({connectionStatus: 1});\n        });\n\n        this.rws.addEventListener('close', () => {\n            that.setState({connectionStatus: 0});\n        });\n\n        this.rws.addEventListener('error', () => {\n            that.setState({connectionStatus: 0});\n        });\n    }\n\n    goBack() {\n        this.rws.send(JSON.stringify({\n            \"action\": \"connection_close\",\n            \"clusterId\": localStorage.getItem(\"clusterId\"),\n            \"namespace\": this.state.containerDetail.namespace,\n            \"podName\": this.state.containerDetail.podName,\n            \"containerName\": this.state.containerDetail.containerName,\n        }));\n        this.rws.close();\n        this.props.history.goBack();\n    }\n\n    render() {\n        let connectContent = <Alert message=\"远程连接未建立\" type=\"error\" showIcon />;\n        if(this.state.connectionStatus===1){\n            connectContent = <Alert message=\"远程连接成功\" type=\"success\" showIcon />;\n        }\n        return (\n            <Content\n                style={{ background: '#fff', padding: \"5px 20px\", margin: 0, height: \"100%\" }}\n            >\n                <Button type=\"link\" onClick={this.goBack}>\n                    <Icon type=\"left\" />\n                    返回上级\n                </Button>\n                { connectContent }\n                <Card size=\"small\" title=\"虚拟终端\" style={{ width: '100%' }} bodyStyle={{ padding: 0 }}>\n                    <div id=\"terminal\" style={{ width: '100%' }}/>\n                </Card>\n            </Content>\n        )\n    }\n\n}\n\n\nexport default WebTerminalContent;\n","import req from \"../utils/axios\";\n\nconst getSettingsValue = (params) =>{\n    return req.get('settings/value', params)\n};\nexport {getSettingsValue}\n\nconst putSettingsValue = (data) => {\n    return req.put('settings/value', data)\n};\nexport {putSettingsValue}\n","import React, { Component } from 'react';\nimport {Card, Layout, Switch, message, Modal, Col, Row, DatePicker, Alert} from \"antd\";\nimport {getSettingsValue, putSettingsValue} from \"../../api/settings_api\";\n\nconst { Content } = Layout;\nconst { RangePicker } = DatePicker;\n\n\nclass SettingsContent extends Component {\n\n    constructor(props){\n        super(props);\n        this.onChangeAllowRenewConfirm = this.onChangeAllowRenewConfirm.bind(this);\n        this.dateOnChange = this.dateOnChange.bind(this);\n        this.handleSetExpireDateSubmit = this.handleSetExpireDateSubmit.bind(this);\n        this.handleSetExpireDateCancel = this.handleSetExpireDateCancel.bind(this);\n        this.state = {\n            expireSettingModalVisible: false,\n            isOpenRenewConfirm: false,\n            expireStartDate: null,\n            expireEndDate: null,\n        }\n    }\n\n    componentWillMount() {\n        this.loadAllowRenewConfirmStatus();\n    }\n\n    loadAllowRenewConfirmStatus() {\n        getSettingsValue({key_name: \"open_renew_confirm\"}).then((res)=>{\n            if(res.code===0){\n                this.setState({\n                    isOpenRenewConfirm: res.data[\"value\"]===\"true\"\n                })\n            } else {\n                message.error(res.msg);\n            }\n        }).catch((err)=>{\n            message.error(err.toLocaleString());\n        })\n    }\n\n    onChangeAllowRenewConfirm(data) {\n        this.setState({isOpenRenewConfirm: data});\n        if(data===true) {\n            this.setState({expireSettingModalVisible: true})\n        } else {\n            putSettingsValue({\n                key_name: \"open_renew_confirm\",\n                value: data.toLocaleString(),\n            }).then((res)=>{\n                if(res.code===0){\n                    message.success(\"设置成功\");\n                } else {\n                    message.error(res.msg);\n                }\n            }).catch((err)=>{\n                message.error(err.toLocaleString());\n            });\n        }\n    }\n\n    dateOnChange(date, dateString) {\n        this.setState({\n            expireStartDate: dateString[0],\n            expireEndDate: dateString[1],\n        })\n    };\n\n    handleSetExpireDateSubmit() {\n        putSettingsValue({\n            key_name: \"open_renew_confirm\",\n            value: this.state.isOpenRenewConfirm.toLocaleString(),\n        }).then((res)=>{\n            if(res.code===0){\n                message.success(\"设置成功\");\n            } else {\n                message.error(res.msg);\n            }\n        }).catch((err)=>{\n            message.error(err.toLocaleString());\n        });\n        putSettingsValue({\n            key_name: \"expire_start_date\",\n            value: this.state.expireStartDate,\n        }).then((res)=>{\n            if(res.code!==0){\n                message.error(res.msg);\n            }\n        }).catch((err)=>{\n            message.error(err.toLocaleString());\n        });\n        putSettingsValue({\n            key_name: \"expire_end_date\",\n            value: this.state.expireEndDate,\n        }).then((res)=>{\n            if(res.code!==0){\n                message.error(res.msg);\n            } else {\n                this.setState({expireSettingModalVisible: false});\n            }\n        }).catch((err)=>{\n            message.error(err.toLocaleString());\n        });\n    }\n\n    handleSetExpireDateCancel() {\n        this.setState({expireSettingModalVisible: false});\n    }\n\n    render() {\n        return (\n            <Content style={{\n            background: '#fff', padding: 20, margin: 0, height: \"100%\",\n            }}>\n                <Modal\n                    title=\"设置过期确认时间区间\"\n                    destroyOnClose={true}\n                    visible={this.state.expireSettingModalVisible}\n                    onOk={this.handleSetExpireDateSubmit}\n                    onCancel={this.handleSetExpireDateCancel}\n                    okText=\"确认\"\n                    cancelText=\"取消\"\n                    width={700}\n                >\n                    <Alert message=\"负责人只可确认该时间段内过期的资源\" banner />\n\n                    <Row style={{ marginTop: 30, marginBottom: 30 }}>\n                        <Col span={4}/>\n                        <Col span={3} style={{textAlign: \"right\"}}>\n                            <label style={{fontSize:14, lineHeight: \"32px\", marginRight: 10, fontWeight: 500}}>过期时间: </label>\n                        </Col>\n                        <Col span={13}>\n                            <RangePicker\n                                style={{width: \"100%\"}}\n                                onChange={this.dateOnChange}\n                                format=\"YYYY-MM-DD\"\n                            />\n                        </Col>\n                        <Col span={4}>\n                        </Col>\n                    </Row>\n                </Modal>\n                <Card style={{ width: 200, textAlign: \"center\" }}>\n                    <Switch checked={this.state.isOpenRenewConfirm} onChange={this.onChangeAllowRenewConfirm} />\n                    <p style={{paddingTop: 20, fontWeight: 500}}>是否开启续费确认窗口</p>\n                </Card>\n            </Content>\n        )\n    }\n\n}\n\nexport default SettingsContent;","import React, {Component} from 'react';\n\n\n\nclass LogoutContent extends Component {\n\n    componentWillMount() {\n        localStorage.removeItem(\"ops_token\");\n        localStorage.removeItem(\"token_info\");\n        window.location.href = \"/login\";\n    }\n\n    render() {\n        return (\n            <div>\n                注销中...\n            </div>\n        )\n    }\n\n}\n\n\nexport default LogoutContent;","import req from \"../utils/axios\";\n\nconst getUserFeedbackList = (page, size) =>{\n    return req.get('user/feedback', {page, size})\n};\nexport {getUserFeedbackList}","import React, {Component} from 'react';\nimport {Layout, Table, Form, Button, Row, Col} from 'antd';\nimport {\n    getUserFeedbackList\n} from \"../../api/system\";\nimport OpsBreadcrumbPath from \"../breadcrumb_path\";\n\nconst { Content } = Layout;\n\nlet columnStyle = {\n    overFlow : \"hidden\",\n    textOverflow: \"ellipsis\",\n    display: \"-webkit-box\",\n};\n\nclass UserFeedbackManager extends Component {\n\n    constructor(props){\n        super(props);\n        this.refreshTableData = this.refreshTableData.bind(this);\n        this.onShowSizeChange = this.onShowSizeChange.bind(this);\n        this.state = {\n            columns: [\n                {\n                    title: 'ID', dataIndex: 'id', key: 'id', width: 30, className: 'small_font',\n                },\n                {\n                    title: '用户', dataIndex: 'username', key: 'username', className: 'small_font',\n                },\n                {\n                    title: '内容', dataIndex: 'content', key: 'content', className: \"small_font \"+{columnStyle},\n                },\n                {\n                    title: '评分', dataIndex: 'score', key: 'score', className: \"small_font \"+{columnStyle},\n                },\n                {\n                    title: '创建时间', dataIndex: 'createTime', key: 'createTime', className: \"small_font \"+{columnStyle},\n                }\n            ],\n            tableData: [],\n            tableLoading: false,\n            authLinkModalVisible: false,\n            current_data_id: null,\n            pagination: {\n                showSizeChanger: true,\n                pageSizeOptions: ['10', '20', '30', '100'],\n                onShowSizeChange: this.onShowSizeChange,\n                showQuickJumper: false,\n                showTotal: (total) => `共 ${total} 条`,\n                pageSize: 10,\n                page: 1,\n                total: 0,\n                onChange: (current) => this.changePage(current),\n            },\n        }\n    }\n\n    onShowSizeChange(current, size){\n        this.setState({\n            pagination: {\n                ...this.state.pagination,\n                page: 1,\n                current: 1,\n                pageSize: size,\n            }\n        }, ()=>{\n            this.refreshTableData();\n        });\n    }\n\n    changePage = (e) => {\n        this.setState({\n            pagination: {\n                ...this.state.pagination,\n                page: e,\n                current: e\n            }\n        }, ()=>{\n            this.refreshTableData();\n        });\n    };\n\n    refreshTableData = () => {\n        this.setState({tableLoading: true});\n        getUserFeedbackList(this.state.pagination.page, this.state.pagination.pageSize).then((res)=>{\n            const pagination = this.state.pagination;\n            pagination.total = parseInt(res.data.total);\n            pagination.page = parseInt(res.data.page);\n            pagination.showTotal(parseInt(res.data.total));\n            this.setState({\n                pagination\n            });\n            let data = res['data']['feedbacks'];\n            let tableData = [];\n            for (let i = 0; i < data.length; i++) {\n                tableData.push({\n                    id: data[i]['id'],\n                    createTime: data[i]['createTime'],\n                    username: data[i]['username'],\n                    content: data[i]['content'],\n                    score: data[i]['score'],\n                });\n            }\n            this.setState({tableData: tableData, tableLoading: false});\n        }).catch((err)=>{\n            console.log(err)\n        });\n    };\n\n    componentDidMount() {\n        this.refreshTableData();\n    }\n\n    render() {\n        return (\n            <Content style={{\n                background: '#fff', padding: 20, margin: 0, height: \"100%\",\n            }}>\n                <OpsBreadcrumbPath pathData={[\"系统管理\", \"用户反馈\"]} />\n                <div style={{ marginBottom: 20 }}>\n                    <Row>\n                        <Col span={3}>\n                            <Button type=\"primary\" onClick={this.refreshTableData}>刷 新</Button>\n                        </Col>\n                    </Row>\n                </div>\n                <Table columns={this.state.columns} dataSource={this.state.tableData} scroll={{ x: 'max-content' }} pagination={this.state.pagination} loading={this.state.tableLoading} rowClassName=\"fixedHeight\" size=\"small\"/>\n            </Content>\n        );\n    }\n}\n\nUserFeedbackManager = Form.create({ name: 'UserFeedbackManager' })(UserFeedbackManager);\n\nexport default UserFeedbackManager;\n","import React, {Component} from 'react';\nimport {Card, Layout, Row, message, Button} from \"antd\";\nimport OpsBreadcrumbPath from \"../breadcrumb_path\";\nimport {getJenkinsAllJobs} from \"../../api/jenkins\";\n\n\nconst {Content} = Layout;\n\nclass JenkinsJobsContent extends Component {\n\n    constructor(props) {\n        super(props);\n        this.jumpJobDetail = this.jumpJobDetail.bind(this);\n        this.state = {\n            jobs: [],\n        }\n    }\n\n    componentDidMount() {\n        this.loadJenkinsAllJobs();\n    }\n\n    loadJenkinsAllJobs() {\n        getJenkinsAllJobs().then((res)=>{\n            if(res.code===0){\n                this.setState({jobs: res.data});\n            } else {\n                message.error(res.msg);\n            }\n        }).catch((err)=>{\n            message.error(err.toLocaleString());\n        })\n    }\n\n    jumpJobDetail(jobName) {\n        this.props.history.push({pathname: \"/admin/cicd/job_detail\", state: {\"jobName\": jobName}});\n    }\n\n    render() {\n        return (\n            <Content\n                style={{ background: '#fff', padding: \"5px 20px\", margin: 0, height: \"100%\" }}\n            >\n                <OpsBreadcrumbPath pathData={[\"CI & CD\", \"任务列表\"]} />\n                <Row>\n                    <Card title=\"当前任务\" size=\"small\">\n                        {\n                            this.state.jobs.map((item, index)=> {\n                                return (\n                                    <Card.Grid key={index} style={{ width: '25%', textAlign: 'center' }}>\n                                        <Button type=\"link\" onClick={this.jumpJobDetail.bind(this, item.name)}>{item.name}</Button>\n                                    </Card.Grid>\n                                )\n                            })\n                        }\n                    </Card>\n                </Row>\n            </Content>\n        )\n    }\n}\n\nexport default JenkinsJobsContent;","import req from '../utils/axios';\n\nconst getJenkinsAllJobs = (params) =>{\n    return req.get('jenkins/jobs', params)\n};\nexport {getJenkinsAllJobs}\n\nconst getJenkinsJobBuildList = (params) =>{\n    return req.get('jenkins/jobBuildList', params)\n};\nexport {getJenkinsJobBuildList}\n\nconst getJenkinsJobLastBuildLog = (params) =>{\n    return req.get('jenkins/jobLastBuildLog', params)\n};\nexport {getJenkinsJobLastBuildLog}\n\nconst getJenkinsJobBuildLog = (params) =>{\n    return req.get('jenkins/jobBuildLog', params)\n};\nexport {getJenkinsJobBuildLog}\n\nconst postJenkinsStartJob = (params) =>{\n    return req.post('jenkins/jobBuild', params)\n};\nexport {postJenkinsStartJob}\n\nconst postJenkinsEnableJob = (params) =>{\n    return req.post('jenkins/enableJob', params)\n};\nexport {postJenkinsEnableJob}\n\nconst postJenkinsDisableJob = (params) =>{\n    return req.post('jenkins/disableJob', params)\n};\nexport {postJenkinsDisableJob}","import React, {Component} from 'react';\nimport {Layout, message, Descriptions, List, Tag, Typography, Button, Drawer, Icon, Row, Col} from \"antd\";\nimport OpsBreadcrumbPath from \"../breadcrumb_path\";\nimport {\n    getJenkinsJobBuildList,\n    getJenkinsJobBuildLog, postJenkinsDisableJob, postJenkinsEnableJob,\n    postJenkinsStartJob\n} from \"../../api/jenkins\";\nimport moment from \"moment\";\nimport Spin from \"antd/es/spin\";\n\n\nconst {Content} = Layout;\nconst { Text } = Typography;\n\nclass Jenkins_job_detail extends Component {\n\n    constructor(props) {\n        super(props);\n        this.onDrawerClose = this.onDrawerClose.bind(this);\n        this.startBuildJob = this.startBuildJob.bind(this);\n        this.refreshJobInfo = this.refreshJobInfo.bind(this);\n        this.disableJob = this.disableJob.bind(this);\n        this.enableJob = this.enableJob.bind(this);\n        this.loadJenkinsJobBuildList = this.loadJenkinsJobBuildList.bind(this);\n        this.state = {\n            buildInfo: [],\n            buildConsoleLog: '',\n            logLoading: false,\n            jobBuilding: false,\n            refreshInfoLoading: false,\n            buildLog: [],\n            start: 0,\n            timer: null,\n            progressLoading: 'none',\n            nextBuildNumber: 0,\n        }\n    }\n\n    componentDidMount() {\n        this.loadJenkinsJobBuildList({\"name\": this.props.location.state.jobName});\n        this.setState({\n            \"buildName\": this.props.location.state.jobName\n        })\n    }\n\n    loadJenkinsJobBuildList(params) {\n        this.setState({refreshInfoLoading: true});\n        getJenkinsJobBuildList(params).then((res)=>{\n            if(res.code===0){\n                let buildLog = [];\n                if(res.data[\"buildLog\"]!==undefined && res.data[\"buildLog\"]!==null){\n                    buildLog = res.data[\"buildLog\"];\n                }\n                this.setState({\n                    buildInfo: res.data,\n                    buildLog: buildLog,\n                    nextBuildNumber: parseInt(res.data[\"nextBuildNumber\"]),\n                });\n            } else {\n                message.error(res.msg);\n            }\n            this.setState({refreshInfoLoading: false});\n        }).catch((err)=>{\n            message.error(err.toLocaleString());\n        })\n    }\n\n    refreshJobInfo() {\n        this.loadJenkinsJobBuildList({\"name\": this.props.location.state.jobName});\n    }\n\n    onDrawerClose() {\n        this.setState({\n            drawerVisible: false,\n            progressLoading: 'none',\n            buildConsoleLog: '',\n            start: 0,\n        });\n        clearTimeout(this.timer);\n        this.timer = null;\n        this.refreshJobInfo();\n    }\n\n    showBuildConsoleLog(buildId) {\n        this.setState({drawerVisible: true, logLoading: true, jobBuilding: true});\n        getJenkinsJobBuildLog({\n            \"name\": this.state.buildName,\n            \"buildId\": buildId,\n            \"start\": parseInt(this.state.start),\n        }).then((res)=>{\n            if(res.code===0){\n                this.setState({\n                    buildConsoleLog: this.state.buildConsoleLog + res.data[\"content\"],\n                    logLoading: false,\n                    jobBuilding: false,\n                    start: res.data[\"start\"],\n                });\n                if(res.data[\"hasMore\"]===\"true\") {\n                    this.setState({progressLoading: 'inline-block'});\n                    this.timer = setTimeout(() => {\n                        this.showBuildConsoleLog(buildId)\n                    }, 2000);\n                } else {\n                    this.setState({progressLoading: 'none'});\n                    clearTimeout(this.timer);\n                    this.timer = null;\n                    this.refreshJobInfo();\n                }\n            } else {\n                message.error(res.msg);\n            }\n        }).catch((err)=>{\n            message.error(err.toLocaleString());\n        })\n    }\n\n    startBuildJob() {\n        this.setState({jobBuilding: true});\n        postJenkinsStartJob({\n            \"name\": this.state.buildName,\n        }).then((res)=>{\n            if(res.code===0){\n                setTimeout(()=>{\n                    this.setState({jobBuilding: false});\n                    this.refreshJobInfo();\n                }, 4000);\n            } else {\n                message.error(res.msg);\n            }\n        }).catch((err)=>{\n            message.error(err.toLocaleString());\n        })\n    }\n\n    disableJob() {\n        postJenkinsDisableJob({\"name\": this.state.buildName}).then((res)=>{\n            if(res.code===0){\n                message.success(\"禁用成功\");\n                this.refreshJobInfo();\n            } else {\n                message.error(res.msg);\n            }\n        }).catch((err)=>{\n            message.error(err.toLocaleString());\n        })\n    }\n\n    enableJob() {\n        postJenkinsEnableJob({\"name\": this.state.buildName}).then((res)=>{\n            if(res.code===0){\n                message.success(\"启用成功\");\n                this.refreshJobInfo();\n            } else {\n                message.error(res.msg);\n            }\n        }).catch((err)=>{\n            message.error(err.toLocaleString());\n        })\n    }\n\n    render() {\n        let titleContent = (\n            <div>\n                构建日志\n                <Icon type=\"loading\" style={{marginLeft: '20px', display: this.state.progressLoading}}/>\n            </div>\n        );\n        let ableBuild = true;\n        let ableContent = (\n            <Button size=\"small\" onClick={this.disableJob} style={{ marginLeft: '20px' }}>\n                禁 用\n            </Button>\n        );\n        if(this.state.buildInfo[\"buildable\"]===false){\n            ableBuild = false;\n            ableContent = (\n                <Button size=\"small\" onClick={this.enableJob} style={{ marginLeft: '20px' }}>\n                    启 用\n                </Button>\n            );\n        }\n        return (\n            <Content\n                style={{ background: '#fff', padding: \"5px 20px\", margin: 0, height: \"100%\" }}\n            >\n                <OpsBreadcrumbPath pathData={[\"CI & CD\", \"任务详情\"]} />\n                <Row  style={{ padding: \"0px 0px 10px 0px\" }}>\n                    <Col span={2}>\n                        <Button type=\"primary\" onClick={this.refreshJobInfo}>刷 新</Button>\n                    </Col>\n                </Row>\n\n                <Spin spinning={this.state.refreshInfoLoading}>\n                    <Descriptions bordered size=\"small\" column={2}>\n                        <Descriptions.Item label=\"任务名\">{this.state.buildInfo.displayName}</Descriptions.Item>\n                        <Descriptions.Item label=\"任务描述\">{this.state.buildInfo.description}</Descriptions.Item>\n                        <Descriptions.Item label=\"任务操作\">\n                            <Button size=\"small\" disabled={!ableBuild} loading={this.state.jobBuilding} onClick={this.startBuildJob}>\n                                构建\n                            </Button>\n                            { ableContent }\n                        </Descriptions.Item>\n                    </Descriptions>\n                </Spin>\n\n                <Drawer\n                    title={titleContent}\n                    placement=\"left\"\n                    closable={false}\n                    onClose={this.onDrawerClose}\n                    visible={this.state.drawerVisible}\n                    width={700}\n                >\n                    <Spin spinning={this.state.logLoading}>\n                    <Text style={{whiteSpace: 'pre'}}>{this.state.buildConsoleLog}</Text>\n                    </Spin>\n                </Drawer>\n\n                <List\n                    header={<div>近5次构建状态</div>}\n                    footer={null}\n                    bordered\n                    dataSource={this.state.buildLog}\n                    style={{ marginTop: '10px', width: '50%' }}\n                    renderItem={item => {\n                            let data = JSON.parse(item);\n                            let buildTag = <Tag color=\"#2db7f5\">构建中</Tag>;\n                            if(data.result!==undefined && data.result !== null) {\n                                if(data.result===\"SUCCESS\") {\n                                    buildTag = <Tag color=\"#108ee9\">成 功</Tag>;\n                                } else if(data.result===\"FAILURE\") {\n                                    buildTag = <Tag color=\"#f50\">失 败</Tag>;\n                                } else if(data.result===\"ABORTED\") {\n                                    buildTag = <Tag color=\"#f50\">中 止</Tag>;\n                                } else {\n                                    buildTag = <Tag color=\"magenta\">{data.result}</Tag>;\n                                }\n                            }\n\n                            let timeTag = <Text type=\"secondary\">{moment(data.timestamp).format(\"MM-DD HH:mm:ss\")}</Text>;\n                            let actionContent = (\n                                <div style={{ display: 'inline-block', float: 'right' }}>\n                                    <Button type=\"link\" size=\"small\" onClick={this.showBuildConsoleLog.bind(this, data.id)}>构建日志</Button>\n                                </div>\n                            );\n                            return (\n                                <List.Item>\n                                    {buildTag} - {data.fullDisplayName} - {timeTag}\n                                    {actionContent}\n                                </List.Item>\n                            )\n                        }\n                    }\n                />\n            </Content>\n        )\n    }\n}\n\nexport default Jenkins_job_detail;","import React, {Component} from 'react';\nimport {Layout} from \"antd\";\nimport {Route, Switch} from \"react-router-dom\";\nimport JenkinsJobsContent from \"./jenkins_jobs\";\nimport Jenkins_job_detail from \"./jenkins_job_detail\";\n\n\nconst {Content} = Layout;\n\nclass JenkinsContent extends Component {\n\n    render() {\n        return (\n            <Content style={{\n                background: '#fff', padding: 0, margin: 0, height: \"100%\",\n            }}>\n                <Switch>\n                    <Route path=\"/admin/cicd/jobs\" component={JenkinsJobsContent} />\n                    <Route path=\"/admin/cicd/job_detail\" component={Jenkins_job_detail} />\n                </Switch>\n            </Content>\n        )\n    }\n}\n\nexport default JenkinsContent;","import req from '../utils/axios';\n\nconst getNodes = (params) =>{\n    return req.get('/kubernetes/nodes', params)\n};\nexport {getNodes}\n\nconst getNamespaces = (params) =>{\n    return req.get('/kubernetes/namespaces', params)\n};\nexport {getNamespaces}\n\nconst getDeployments = (params) =>{\n    return req.get('/kubernetes/deployments', params)\n};\nexport {getDeployments}\n\nconst getReplicationControllers = (params) =>{\n    return req.get('/kubernetes/replication_controllers', params)\n};\nexport {getReplicationControllers}\n\nconst getReplicaSets = (params) =>{\n    return req.get('/kubernetes/replica_sets', params)\n};\nexport {getReplicaSets}\n\nconst getServices = (params) =>{\n    return req.get('/kubernetes/services', params)\n};\nexport {getServices}\n\nconst getPods = (params) =>{\n    return req.get('/kubernetes/pods', params)\n};\nexport {getPods}\n\nconst getPodLogs = (params) =>{\n    return req.get('/kubernetes/pod/log', params)\n};\nexport {getPodLogs}\n\nconst postApplyYaml = (data) =>{\n    return req.post('/kubernetes/yaml_resource', data)\n};\nexport {postApplyYaml}\n\nconst getResourceYaml = (params) =>{\n    return req.get('/kubernetes/yaml', params)\n};\nexport {getResourceYaml}\n\nconst putResourceScale = (data) =>{\n    return req.put('/kubernetes/scale', data)\n};\nexport {putResourceScale}\n\nconst deleteResource = (data) =>{\n    return req.delete('/kubernetes/resource', data)\n};\nexport {deleteResource}\n\nconst getConfigDict = (params) =>{\n    return req.get('/kubernetes/config_dict', params)\n};\nexport {getConfigDict}\n\nconst getSecretDict = (params) =>{\n    return req.get('/kubernetes/secret_dict', params)\n};\nexport {getSecretDict}\n\nconst deleteConfigMap = (data) =>{\n    return req.delete('/kubernetes/config_map', data)\n};\nexport {deleteConfigMap}\n\nconst deleteSecret = (data) =>{\n    return req.delete('/kubernetes/secret', data)\n};\nexport {deleteSecret}\n\nconst getClusterData = (params) =>{\n    return req.get('/kubernetes/cluster', params)\n};\nexport {getClusterData}\n\nconst postCluster = (data) =>{\n    return req.post('/kubernetes/cluster', data)\n};\nexport {postCluster}\n\nconst deleteCluster = (data) =>{\n    return req.delete('/kubernetes/cluster', data)\n};\nexport {deleteCluster}\n\nconst getNodeMetrics = (params) =>{\n    return req.get('/kubernetes/metrics/nodes', params)\n};\nexport {getNodeMetrics}\n\nconst postPrometheus = (data) =>{\n    return req.post('/kubernetes/metrics/prometheus', data)\n};\nexport {postPrometheus}","\nconst K8sTemplate = {\n    \"rc\": `apiVersion: v1\nkind: ReplicationController\nmetadata:\n  name: redis-rc\nspec:\n  replicas: 1\n  selector:\n    app: redis\n  template:\n    metadata:\n      name: redis\n      labels:\n        app: redis\n    spec:\n      containers:\n      - name: redis\n        image: redis\n        ports:\n        - containerPort: 6379`,\n\n    \"rs\": `apiVersion: apps/v1\nkind: ReplicaSet\nmetadata:\n  name: redis-rs\n  labels:\n    app: redis\nspec:\n  replicas: 1\n  selector:\n    app: redis\n  template:\n    metadata:\n      labels:\n        app: redis\n    spec:\n      containers:\n      - name: redis\n        image: redis\n        ports:\n        - containerPort: 6379`,\n\n    \"deployment\": `apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: nginx-deployment\n  labels:\n    app: nginx\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: nginx\n  template:\n    metadata:\n      labels:\n        app: nginx\n    spec:\n      containers:\n      - name: nginx\n        image: nginx:latest\n        ports:\n        - containerPort: 80`,\n\n    \"statefull_rs\": `kind: StatefulSet\nmetadata:\n  name: web\nspec:\n  selector:\n    matchLabels:\n      app: nginx # has to match .spec.template.metadata.labels\n  serviceName: \"nginx\"\n  replicas: 3 # by default is 1\n  template:\n    metadata:\n      labels:\n        app: nginx # has to match .spec.selector.matchLabels\n    spec:\n      terminationGracePeriodSeconds: 10\n      containers:\n      - name: nginx\n        image: k8s.gcr.io/nginx-slim:0.8\n        ports:\n        - containerPort: 80\n          name: web\n        volumeMounts:\n        - name: www\n          mountPath: /usr/share/nginx/html\n  volumeClaimTemplates:\n  - metadata:\n      name: www\n    spec:\n      accessModes: [ \"ReadWriteOnce\" ]\n      storageClassName: \"my-storage-class\"\n      resources:\n        requests:\n          storage: 1Gi`,\n\n    \"daemon_set\": `apiVersion: apps/v1\nkind: DaemonSet\nmetadata:\n  name: fluentd-elasticsearch\n  namespace: kube-system\n  labels:\n    k8s-app: fluentd-logging\nspec:\n  selector:\n    matchLabels:\n      name: fluentd-elasticsearch\n  template:\n    metadata:\n      labels:\n        name: fluentd-elasticsearch\n    spec:\n      tolerations:\n      - key: node-role.kubernetes.io/master\n        effect: NoSchedule\n      containers:\n      - name: fluentd-elasticsearch\n        image: gcr.io/fluentd-elasticsearch/fluentd:v2.5.1\n        resources:\n          limits:\n            memory: 200Mi\n          requests:\n            cpu: 100m\n            memory: 200Mi\n        volumeMounts:\n        - name: varlog\n          mountPath: /var/log\n        - name: varlibdockercontainers\n          mountPath: /var/lib/docker/containers\n          readOnly: true\n      terminationGracePeriodSeconds: 30\n      volumes:\n      - name: varlog\n        hostPath:\n          path: /var/log\n      - name: varlibdockercontainers\n        hostPath:\n          path: /var/lib/docker/containers`,\n    \n    \"service\": `apiVersion: v1\nkind: Service\nmetadata:\n  name: redis\nspec:\n  type: NodePort\n  ports:\n   - port: 6379\n     nodePort: 30003\n  selector:\n    app: redis`,\n\n    \"config_map\": `apiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: example-config\ndata:\n  example.property.1: hello`,\n\n    \"secret_map\": `apiVersion: v1\nkind: Secret\nmetadata:\n  name: example-config\ntype: Opaque\nstringData:\n  example.property.1: \"test\"`,\n\n};\n\n\nexport default K8sTemplate;","import React, {Component} from 'react';\nimport {Card, Descriptions, Layout, Tag} from \"antd\";\n\n\nconst { Content } = Layout;\n\nclass RcDetailContent extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            rcDetail: this.props.location.state,\n        };\n    }\n\n    render() {\n        let labels = [];\n        for(let key in this.state.rcDetail.data.metadata.labels){\n            labels.push(<div key={key}><Tag color=\"geekblue\">\n                {key + \":\" + this.state.rcDetail.data.metadata.labels[key]}\n            </Tag></div>)\n        }\n        let selectors = [];\n        for(let key in this.state.rcDetail.data.spec.selector){\n            selectors.push(<div key={key}><Tag color=\"geekblue\">\n                {key + \":\" + this.state.rcDetail.data.spec.selector[key]}\n            </Tag></div>)\n        }\n        let images = [];\n        const containersData = this.state.rcDetail.data.spec.template.spec.containers;\n        for(let i=0; i<containersData.length; i++){\n            images.push(<div key={i}><Tag color=\"geekblue\">\n                {containersData[i][\"image\"]}\n            </Tag></div>)\n        }\n        return (\n            <Content\n                style={{ background: '#fff', padding: \"5px 20px\", margin: 0, height: \"100%\" }}\n            >\n                <Card size=\"small\" title=\"Replication Controller 详情\" style={{ width: '100%' }}>\n                    <Descriptions bordered size='small' column={2}>\n                        <Descriptions.Item label=\"名称\">{this.state.rcDetail.data.metadata.name}</Descriptions.Item>\n                        <Descriptions.Item label=\"命名空间\">{this.state.rcDetail.data.metadata.namespace}</Descriptions.Item>\n                        <Descriptions.Item label=\"创建时间\">{this.state.rcDetail.data.metadata.creationTimestamp}</Descriptions.Item>\n                        <Descriptions.Item label=\"标签\">{labels}</Descriptions.Item>\n                        <Descriptions.Item label=\"选择器\">{selectors}</Descriptions.Item>\n                        <Descriptions.Item label=\"镜像\">{images}</Descriptions.Item>\n                        <Descriptions.Item label=\"副本数\">{this.state.rcDetail.data.status.replicas}</Descriptions.Item>\n                        <Descriptions.Item label=\"运行中\">{this.state.rcDetail.data.status.readyReplicas}</Descriptions.Item>\n                    </Descriptions>\n                </Card>\n            </Content>\n        )\n    }\n\n}\n\n\nexport default RcDetailContent;","import React, {Component} from 'react';\nimport {Card, Descriptions, Layout, Tag} from \"antd\";\n\n\nconst { Content } = Layout;\n\nclass ServiceDetailContent extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            serviceDetail: this.props.location.state,\n        };\n    }\n\n    render() {\n        let labels = [];\n        for(let key in this.state.serviceDetail.data.metadata.labels) {\n            labels.push(<div key={key}><Tag color=\"geekblue\">\n                {key + \":\" + this.state.serviceDetail.data.metadata.labels[key]}\n            </Tag></div>)\n        }\n        let selectors = [];\n        for(let key in this.state.serviceDetail.data.spec.selector) {\n            selectors.push(<div key={key}><Tag color=\"geekblue\">\n                {key + \":\" + this.state.serviceDetail.data.spec.selector[key]}\n            </Tag></div>)\n        }\n        let portsList = [];\n        let ports = this.state.serviceDetail.data.spec.ports;\n        for(let i=0; i<ports.length; i++){\n            let portContent = \"\";\n            if(ports[i].hasOwnProperty(\"port\")){\n                portContent += ports[i][\"port\"]+\"(port) \";\n            }\n            if(ports[i].hasOwnProperty(\"targetPort\")){\n                portContent += ports[i][\"targetPort\"]+\"(targetPort) \";\n            }\n            if(ports[i].hasOwnProperty(\"nodePort\")){\n                portContent += ports[i][\"nodePort\"]+\"(nodePort) \";\n            }\n            portsList.push(<Tag color=\"geekblue\">\n                {ports[i][\"protocol\"] + \": \" +portContent}\n             </Tag>)\n        }\n        return (\n            <Content\n                style={{ background: '#fff', padding: \"5px 20px\", margin: 0, height: \"100%\" }}\n            >\n                <Card size=\"small\" title=\"Service 详情\" style={{ width: '100%' }}>\n                    <Descriptions bordered size='small' column={2}>\n                        <Descriptions.Item label=\"名称\">{this.state.serviceDetail.data.metadata.name}</Descriptions.Item>\n                        <Descriptions.Item label=\"命名空间\">{this.state.serviceDetail.data.metadata.namespace}</Descriptions.Item>\n                        <Descriptions.Item label=\"创建时间\">{this.state.serviceDetail.data.metadata.creationTimestamp}</Descriptions.Item>\n                        <Descriptions.Item label=\"标签\">{labels}</Descriptions.Item>\n                        <Descriptions.Item label=\"clusterIP\">{this.state.serviceDetail.data.spec.clusterIP}</Descriptions.Item>\n                        <Descriptions.Item label=\"类型\">{this.state.serviceDetail.data.spec.type}</Descriptions.Item>\n                        <Descriptions.Item label=\"sessionAffinity\">{this.state.serviceDetail.data.spec.sessionAffinity}</Descriptions.Item>\n                        <Descriptions.Item label=\"端口\">{portsList}</Descriptions.Item>\n                        <Descriptions.Item label=\"选择标签\">{selectors}</Descriptions.Item>\n                    </Descriptions>\n                </Card>\n            </Content>\n        )\n    }\n\n}\n\n\nexport default ServiceDetailContent;","import React, {Component} from 'react';\nimport {\n    Button,\n    Card,\n    Descriptions,\n    Layout,\n    Tag,\n    message,\n    List,\n    Typography,\n    Row,\n    Col,\n    Tabs\n} from \"antd\";\nimport createG2 from 'g2-react';\nimport {getNodeMetrics} from \"../../api/kubernetes\";\nimport {K8sContainerIconSvg} from \"../../assets/Icons\";\nimport moment from 'moment';\n\nconst { Text } = Typography;\nconst { Content } = Layout;\nconst { TabPane } = Tabs;\n\nconst MemoryChart = createG2(chart => {\n    chart.col('timestamp', {\n      alias: '时间',\n    });\n    chart.col('value', {\n      alias: '内存(M)'\n    });\n    chart.line().position('timestamp*value').size(2);\n    chart.render();\n});\n\nconst CpuChart = createG2(chart => {\n    chart.col('timestamp', {\n      alias: '时间',\n    });\n    chart.col('value', {\n      alias: 'CPU(%)'\n    });\n    chart.line().position('timestamp*value').size(2);\n    chart.render();\n});\n\nclass PodDetailContent extends Component {\n\n    constructor(props) {\n        super(props);\n        this.loadPodLog = this.loadPodLog.bind(this);\n        this.handleCancelLogModal = this.handleCancelLogModal.bind(this);\n        this.openWebTerminal = this.openWebTerminal.bind(this);\n        this.state = {\n            serviceDetail: this.props.location.state,\n            memoryChartData: [],\n            cpuChartData: [],\n        };\n    }\n\n    loadPodLog(containerName) {\n        if(this.state.serviceDetail.data.status.phase!==\"Running\"){\n            message.error(\"当前pod未运行，无法查看日志！\");\n            return;\n        }\n        this.props.history.push({\n            'pathname': '/admin/k8s_cluster/manage/container_log',\n            'state': {\n                \"namespace\": this.state.serviceDetail.data.metadata.namespace,\n                \"podName\": this.state.serviceDetail.data.metadata.name,\n                \"containerName\": containerName,\n            }\n        });\n    }\n\n    handleCancelLogModal() {\n        this.setState({logModalVisible: false, logLoading: false});\n    }\n\n    openWebTerminal(containerName) {\n        if(this.state.serviceDetail.data.status.phase!==\"Running\"){\n            message.error(\"当前pod未运行，无法使用终端！\");\n            return;\n        }\n        this.props.history.push({\n            'pathname': '/admin/k8s_cluster/manage/container_terminal',\n            'state': {\n                \"namespace\": this.state.serviceDetail.data.metadata.namespace,\n                \"podName\": this.state.serviceDetail.data.metadata.name,\n                \"containerName\": containerName,\n            }\n        });\n    }\n\n    tabChange(key) {\n        if(key===\"Pod监控\"){\n            let cpuQuery = 'sum(rate(container_cpu_usage_seconds_total{pod=\"'+this.state.serviceDetail.data.metadata.name+'\", container!=\"POD\", container!=\"\"}[5m])) / (sum(container_spec_cpu_quota{image!=\"\"}/100000) ) * 100 ';\n            getNodeMetrics({query: encodeURIComponent(cpuQuery)}).then((res)=>{\n                if(res.code===0){\n                    let data = JSON.parse(res.data);\n                    let points = data[\"data\"][\"result\"][0][\"values\"];\n                    let cpuChartData = [];\n                    for(let i=0; i<points.length; i++){\n                        cpuChartData.push({\n                            \"timestamp\": moment(points[i][0]*1000).format(\"HH:mm:ss\"),\n                            \"value\": (parseFloat(points[i][1])),\n                        });\n                    }\n                    this.setState({cpuChartData});\n                } else {\n                    message.error(res.msg);\n                }\n            });\n            let memoryQuery = 'container_memory_usage_bytes{pod=\"'+this.state.serviceDetail.data.metadata.name+'\", container!=\"POD\", container!=\"\"}';\n            getNodeMetrics({query: encodeURIComponent(memoryQuery)}).then((res)=>{\n                if(res.code===0){\n                    let data = JSON.parse(res.data);\n                    let points = data[\"data\"][\"result\"][0][\"values\"];\n                    let memoryChartData = [];\n                    for(let i=0; i<points.length; i++){\n                        memoryChartData.push({\n                            \"timestamp\": moment(points[i][0]*1000).format(\"HH:mm:ss\"),\n                            \"value\": (parseInt(points[i][1])/1024/1024),\n                        });\n                    }\n                    this.setState({memoryChartData});\n                } else {\n                    message.error(res.msg);\n                }\n            });\n        }\n    }\n\n    render() {\n        let labels = [];\n        for(let key in this.state.serviceDetail.data.metadata.labels){\n            labels.push(<div key={key}><Tag color=\"geekblue\">\n                {key + \":\" + this.state.serviceDetail.data.metadata.labels[key]}\n            </Tag></div>)\n        };\n        let containersList = this.state.serviceDetail.data.spec.containers.map((item)=>{\n            let portsList = [];\n            if(item.hasOwnProperty(\"ports\")){\n                for(let i=0; i<item.ports.length; i++){\n                    portsList.push(<Tag color=\"geekblue\">\n                        { item.ports[i][\"containerPort\"]+ \"(\" + item.ports[i][\"protocol\"] + \")\"}\n                    </Tag>)\n                }\n            }\n            return (\n                <Row style={{ borderBottom: '1px solid #e8e8e8' }}>\n                    <Col>\n                        <List itemLayout=\"horizontal\">\n                            <List.Item>\n                                <List.Item.Meta\n                                    avatar={<K8sContainerIconSvg />}\n                                    title={<Text type=\"secondary\">容器名：{item.name} &nbsp;&nbsp;\n                                        <Button type=\"link\" onClick={this.loadPodLog.bind(this, item.name)}>查看日志</Button>\n                                        <Button type=\"link\" onClick={this.openWebTerminal.bind(this, item.name)}>执行命令</Button></Text>}\n                                    description={<Text type=\"secondary\">镜像：{item.image} &nbsp;&nbsp; 端口: {portsList}</Text>}\n                                />\n                            </List.Item>\n                        </List>\n                    </Col>\n                </Row>\n            )\n        });\n\n        return (\n            <Content\n                style={{ background: '#fff', padding: \"5px 20px\", margin: 0, height: \"100%\" }}\n            >\n                <Tabs defaultActiveKey=\"Pod详情\" onChange={this.tabChange.bind(this)}>\n                    <TabPane tab=\"Pod详情\" key=\"Pod详情\">\n                        <Descriptions bordered size='small' column={2}>\n                            <Descriptions.Item label=\"Pod名称\">{this.state.serviceDetail.data.metadata.name}</Descriptions.Item>\n                            <Descriptions.Item label=\"命名空间\">{this.state.serviceDetail.data.metadata.namespace}</Descriptions.Item>\n                            <Descriptions.Item label=\"创建时间\">{this.state.serviceDetail.data.metadata.creationTimestamp}</Descriptions.Item>\n                            <Descriptions.Item label=\"标签\">{labels}</Descriptions.Item>\n                            <Descriptions.Item label=\"状态\">{this.state.serviceDetail.data.status.phase}</Descriptions.Item>\n                            <Descriptions.Item label=\"Host IP\">{this.state.serviceDetail.data.status.hostIP}</Descriptions.Item>\n                            <Descriptions.Item label=\"Pod IP\">{this.state.serviceDetail.data.status.podIP}</Descriptions.Item>\n                        </Descriptions>\n                        <Card size=\"small\" title=\"容器列表\" style={{ width: '100%', marginTop: '10px' }}>\n                            { containersList }\n                        </Card>\n                    </TabPane>\n                    <TabPane tab=\"Pod监控\" key=\"Pod监控\">\n                        <MemoryChart\n                            data={this.state.memoryChartData}\n                            height={300}\n                            forceFit={true} />\n                        <CpuChart\n                            data={this.state.cpuChartData}\n                            height={300}\n                            forceFit={true} />\n                    </TabPane>\n                </Tabs>\n                \n\n            </Content>\n        )\n    }\n\n}\n\nexport default PodDetailContent;\n","import React, {Component} from 'react';\nimport {Button, Icon, Layout, message, Row, Spin} from \"antd\";\nimport {getPodLogs} from \"../../api/kubernetes\";\n\n\nconst {Content} = Layout;\n\nclass ContainerLogContent extends Component {\n\n    constructor(props) {\n        super(props);\n        this.goBack = this.goBack.bind(this);\n        this.syncLogs = this.syncLogs.bind(this);\n        this.state = {\n            logLoading: false,\n            containerInfo: this.props.location.state,\n        }\n    }\n\n    componentDidMount() {\n        this.syncLogs();\n    }\n\n    goBack() {\n        this.setState({logContent: ''}, ()=>{\n            this.props.history.goBack();\n        });\n    }\n\n    syncLogs() {\n        this.setState({logLoading: true});\n        getPodLogs({\n            namespace: this.state.containerInfo.namespace,\n            podName: this.state.containerInfo.podName,\n            containerName: this.state.containerInfo.containerName,\n        }).then((res)=>{\n            if(res.code===0){\n                this.setState({logContent: res.data, logLoading: false}, ()=>{\n                    this.scrollToBottom();\n                });\n            } else {\n                message.error(res.msg);\n            }\n        }).catch((err)=>{\n            message.error(err.toLocaleString());\n        })\n    }\n\n    scrollToBottom() {\n        let panel = document.getElementById('logPanel');\n        panel.scrollTop = panel.scrollHeight;\n    }\n\n    render() {\n        return (\n            <Content\n                style={{ background: '#fff', padding: \"5px 20px\", margin: 0, height: \"100%\" }}\n            >\n                <Row style={{ padding: \"0px 0px 10px 0px\" }}>\n                    <Button type=\"link\" onClick={this.goBack}>\n                        <Icon type=\"left\" />\n                        返回上级\n                    </Button>\n                    <Button type=\"link\" icon=\"reload\" onClick={this.syncLogs} style={{ float: 'right' }}>刷 新</Button>\n                </Row>\n                <Spin spinning={this.state.logLoading}>\n                <div style={{ height: '85vh' }}>\n                    <div id=\"logPanel\" style={{ whiteSpace: 'pre-line', backgroundColor: 'rgb(19, 19, 19)', color: '#fff',\n                        fontSize: '14px', lineHeight: '20px', height: '100%', padding: '10px', overflow: 'scroll' }}>\n                        {this.state.logContent}\n                    </div>\n                </div>\n                </Spin>\n            </Content>\n        )\n    }\n}\n\nexport default ContainerLogContent;","import React, {Component} from 'react';\nimport {Card, Descriptions, Layout, List, Tag, Typography, Tabs, message} from \"antd\";\nimport createG2 from 'g2-react';\nimport {getNodeMetrics} from \"../../api/kubernetes\";\nimport moment from 'moment';\n\nconst { Content } = Layout;\nconst { Text } = Typography;\nconst { TabPane } = Tabs;\n\nconst MemoryChart = createG2(chart => {\n    chart.col('timestamp', {\n      alias: '时间',\n    });\n    chart.col('value', {\n      alias: '内存使用(M)'\n    });\n    chart.line().position('timestamp*value').size(2);\n    chart.render();\n  });\n\nconst CpuChart = createG2(chart => {\n    chart.col('timestamp', {\n        alias: '时间',\n    });\n    chart.col('value', {\n        alias: 'CPU(%)'\n    });\n    chart.line().position('timestamp*value').size(2);\n    chart.render();\n});\n\nconst DiskChart = createG2(chart => {\n    chart.col('timestamp', {\n        alias: '时间',\n    });\n    chart.col('value', {\n        alias: '磁盘(%)'\n    });\n    chart.line().position('timestamp*value').size(2);\n    chart.render();\n});\n\nclass NodeDetailContent extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            nodeDetail: this.props.location.state,\n            memoryChartData: [],\n        };\n    }\n\n    tabChange(key) {\n        if(key===\"Node监控\"){\n            getNodeMetrics({query: \"node_memory_MemTotal_bytes-node_memory_MemAvailable_bytes\"}).then((res)=>{\n                if(res.code===0){\n                    let data = JSON.parse(res.data);\n                    let points = data[\"data\"][\"result\"][0][\"values\"];\n                    let memoryChartData = [];\n                    for(let i=0; i<points.length; i++){\n                        memoryChartData.push({\n                            \"timestamp\": moment(points[i][0]*1000).format(\"HH:mm:ss\"),\n                            \"value\": (parseInt(points[i][1])/1024/1024),\n                        });\n                    }\n                    this.setState({memoryChartData});\n                } else {\n                    message.error(res.msg);\n                }\n            });\n            getNodeMetrics({query: encodeURIComponent('100 - (avg by (instance) (irate(node_cpu_seconds_total{mode=\"idle\"}[5m])) * 100)')}).then((res)=>{\n                if(res.code===0){\n                    let data = JSON.parse(res.data);\n                    let points = data[\"data\"][\"result\"][0][\"values\"];\n                    let cpuChartData = [];\n                    for(let i=0; i<points.length; i++){\n                        cpuChartData.push({\n                            \"timestamp\": moment(points[i][0]*1000).format(\"HH:mm:ss\"),\n                            \"value\": parseFloat(points[i][1]),\n                        });\n                    }\n                    this.setState({cpuChartData});\n                } else {\n                    message.error(res.msg);\n                }\n            });\n            getNodeMetrics({query: encodeURIComponent('100 - (node_filesystem_avail_bytes/node_filesystem_size_bytes * 100)')}).then((res)=>{\n                if(res.code===0){\n                    let data = JSON.parse(res.data);\n                    let points = data[\"data\"][\"result\"][0][\"values\"];\n                    let diskChartData = [];\n                    for(let i=0; i<points.length; i++){\n                        diskChartData.push({\n                            \"timestamp\": moment(points[i][0]*1000).format(\"HH:mm:ss\"),\n                            \"value\": parseFloat(points[i][1]),\n                        });\n                    }\n                    this.setState({diskChartData});\n                } else {\n                    message.error(res.msg);\n                }\n            });\n        }\n    }\n\n    render() {\n        let labels = [];\n        for(let key in this.state.nodeDetail.data.metadata.labels){\n            labels.push(<div key={key}><Tag color=\"geekblue\">\n                {key + \":\" + this.state.nodeDetail.data.metadata.labels[key]}\n            </Tag></div>)\n        }\n        let annotations = [];\n        for(let key in this.state.nodeDetail.data.metadata.annotations){\n            annotations.push(<div key={key}><Tag color=\"geekblue\">\n                {key + \":\" + this.state.nodeDetail.data.metadata.annotations[key]}\n            </Tag></div>)\n        }\n        let addresses = [];\n        const addressesData = this.state.nodeDetail.data.status.addresses;\n        for(let i=0; i<addressesData.length; i++){\n            addresses.push(<Text>{addressesData[i][\"type\"] + \":  \" + addressesData[i][\"address\"]}</Text>);\n            addresses.push(<br/>);\n        }\n        return (\n            <Content\n                style={{ background: '#fff', padding: \"5px 20px\", margin: 0, height: \"100%\" }}\n            >\n                <Tabs defaultActiveKey=\"Node信息\" onChange={this.tabChange.bind(this)}>\n                    <TabPane tab=\"Node信息\" key=\"Node信息\">\n                        <Descriptions bordered size='small' column={1}>\n                            <Descriptions.Item label=\"名称\">{this.state.nodeDetail.data.metadata.name}</Descriptions.Item>\n                            <Descriptions.Item label=\"创建时间\">{this.state.nodeDetail.data.metadata.creationTimestamp}</Descriptions.Item>\n                            <Descriptions.Item label=\"标签\">{labels}</Descriptions.Item>\n                            <Descriptions.Item label=\"注解\">{annotations}</Descriptions.Item>\n                            <Descriptions.Item label=\"地址\">{addresses}</Descriptions.Item>\n                            <Descriptions.Item label=\"kubelet端口\">{this.state.nodeDetail.data.status.daemonEndpoints.kubeletEndpoint.Port}</Descriptions.Item>\n                            <Descriptions.Item label=\"容器版本\">{this.state.nodeDetail.data.status.nodeInfo.containerRuntimeVersion}</Descriptions.Item>\n                            <Descriptions.Item label=\"kubelet版本\">{this.state.nodeDetail.data.status.nodeInfo.kubeletVersion}</Descriptions.Item>\n                            <Descriptions.Item label=\"kubeProxy版本\">{this.state.nodeDetail.data.status.nodeInfo.kubeProxyVersion}</Descriptions.Item>\n                            <Descriptions.Item label=\"系统\">{this.state.nodeDetail.data.status.nodeInfo.operatingSystem}</Descriptions.Item>\n                            <Descriptions.Item label=\"架构\">{this.state.nodeDetail.data.status.nodeInfo.architecture}</Descriptions.Item>\n                        </Descriptions>\n                    </TabPane>\n                    <TabPane tab=\"Node监控\" key=\"Node监控\">\n                        <MemoryChart\n                            data={this.state.memoryChartData}\n                            height={300}\n                            forceFit={true} />\n                        <CpuChart\n                            data={this.state.cpuChartData}\n                            height={300}\n                            forceFit={true} />\n                        <DiskChart\n                            data={this.state.diskChartData}\n                            height={300}\n                            forceFit={true} />\n                    </TabPane>\n                </Tabs>\n                {/* <Card size=\"small\" title=\"镜像列表\" style={{ width: '100%' }}>\n                    <List\n                        size=\"small\"\n                        itemLayout=\"vertical\"\n                        bordered={false}\n                        dataSource={this.state.nodeDetail.data.status.images}\n                        renderItem={item => {\n                                let imageList = [];\n                                for(let i=0; i<item.names.length; i++){\n                                    let size = (item.sizeBytes / 1024.0 /1024.0).toFixed(2);\n                                    imageList.push(<div><Text style={{ width: \"550px\" }} ellipsis={true}>{item.names[i]}</Text><Tag color=\"#2db7f5\" style={{ float: \"right\" }}>{size}MB</Tag></div>);\n                                    imageList.push(<br/>);\n                                }\n                                return (\n                                    <List.Item>{ imageList }</List.Item>\n                                )\n                            }\n                        }\n                    />\n                </Card> */}\n            </Content>\n        )\n    }\n\n}\n\n\nexport default NodeDetailContent;","import React, {Component} from 'react';\nimport {Card, Descriptions, Layout, Tag} from \"antd\";\n\n\nconst { Content } = Layout;\n\nclass RsDetailContent extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            rsDetail: this.props.location.state,\n        };\n    }\n\n    render() {\n        let labels = [];\n        for(let key in this.state.rsDetail.data.metadata.labels){\n            labels.push(<div key={key}><Tag color=\"geekblue\">\n                {key + \":\" + this.state.rsDetail.data.metadata.labels[key]}\n            </Tag></div>)\n        }\n        let annotations = [];\n        for(let key in this.state.rsDetail.data.metadata.annotations){\n            annotations.push(<div key={key}><Tag color=\"geekblue\">\n                {key + \":\" + this.state.rsDetail.data.metadata.annotations[key]}\n            </Tag></div>)\n        }\n        let selectors = [];\n        for(let key in this.state.rsDetail.data.spec.selector.matchLabels){\n            selectors.push(<div key={key}><Tag color=\"geekblue\">\n                {key + \":\" + this.state.rsDetail.data.spec.selector.matchLabels[key]}\n            </Tag></div>)\n        }\n        let images = [];\n        const containersData = this.state.rsDetail.data.spec.template.spec.containers;\n        for(let i=0; i<containersData.length; i++){\n            images.push(<div key={i}><Tag color=\"geekblue\">\n                {containersData[i][\"image\"]}\n            </Tag></div>)\n        }\n        return (\n            <Content\n                style={{ background: '#fff', padding: \"5px 20px\", margin: 0, height: \"100%\" }}\n            >\n                <Card size=\"small\" title=\"ReplicaSet 详情\" style={{ width: '100%' }}>\n                    <Descriptions bordered size='small' column={2}>\n                        <Descriptions.Item label=\"名称\">{this.state.rsDetail.data.metadata.name}</Descriptions.Item>\n                        <Descriptions.Item label=\"命名空间\">{this.state.rsDetail.data.metadata.namespace}</Descriptions.Item>\n                        <Descriptions.Item label=\"创建时间\">{this.state.rsDetail.data.metadata.creationTimestamp}</Descriptions.Item>\n                        <Descriptions.Item label=\"标签\">{labels}</Descriptions.Item>\n                        <Descriptions.Item label=\"注解\">{annotations}</Descriptions.Item>\n                        <Descriptions.Item label=\"选择器\">{selectors}</Descriptions.Item>\n                        <Descriptions.Item label=\"镜像\">{images}</Descriptions.Item>\n                        <Descriptions.Item label=\"副本数\">{this.state.rsDetail.data.status.replicas}</Descriptions.Item>\n                        <Descriptions.Item label=\"运行中\">{this.state.rsDetail.data.status.readyReplicas}</Descriptions.Item>\n                    </Descriptions>\n                </Card>\n            </Content>\n        )\n    }\n\n}\n\n\nexport default RsDetailContent;","import React, {Component} from 'react';\nimport {Card, Descriptions, Layout, Tag} from \"antd\";\n\n\nconst { Content } = Layout;\n\nclass DeploymentDetailContent extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            rsDetail: this.props.location.state,\n        };\n    }\n\n    render() {\n        let labels = [];\n        for(let key in this.state.rsDetail.data.metadata.labels){\n            labels.push(<div key={key}><Tag color=\"geekblue\">\n                {key + \":\" + this.state.rsDetail.data.metadata.labels[key]}\n            </Tag></div>)\n        }\n        let annotations = [];\n        for(let key in this.state.rsDetail.data.metadata.annotations){\n            annotations.push(<div key={key}><Tag color=\"geekblue\">\n                {key + \":\" + this.state.rsDetail.data.metadata.annotations[key]}\n            </Tag></div>)\n        }\n        let selectors = [];\n        for(let key in this.state.rsDetail.data.spec.selector.matchLabels){\n            selectors.push(<div key={key}><Tag color=\"geekblue\">\n                {key + \":\" + this.state.rsDetail.data.spec.selector.matchLabels[key]}\n            </Tag></div>)\n        }\n        let images = [];\n        const containersData = this.state.rsDetail.data.spec.template.spec.containers;\n        for(let i=0; i<containersData.length; i++){\n            images.push(<div key={i}><Tag color=\"geekblue\">\n                {containersData[i][\"image\"]}\n            </Tag></div>)\n        }\n        return (\n            <Content\n                style={{ background: '#fff', padding: \"5px 20px\", margin: 0, height: \"100%\" }}\n            >\n                <Card size=\"small\" title=\"Deployment 详情\" style={{ width: '100%' }}>\n                    <Descriptions bordered size='small' column={2}>\n                        <Descriptions.Item label=\"名称\">{this.state.rsDetail.data.metadata.name}</Descriptions.Item>\n                        <Descriptions.Item label=\"命名空间\">{this.state.rsDetail.data.metadata.namespace}</Descriptions.Item>\n                        <Descriptions.Item label=\"创建时间\">{this.state.rsDetail.data.metadata.creationTimestamp}</Descriptions.Item>\n                        <Descriptions.Item label=\"标签\">{labels}</Descriptions.Item>\n                        <Descriptions.Item label=\"注解\">{annotations}</Descriptions.Item>\n                        <Descriptions.Item label=\"选择器\">{selectors}</Descriptions.Item>\n                        <Descriptions.Item label=\"镜像\">{images}</Descriptions.Item>\n                        <Descriptions.Item label=\"副本数\">{this.state.rsDetail.data.status.replicas}</Descriptions.Item>\n                        <Descriptions.Item label=\"运行中\">{this.state.rsDetail.data.status.readyReplicas}</Descriptions.Item>\n                    </Descriptions>\n                </Card>\n            </Content>\n        )\n    }\n}\n\nexport default DeploymentDetailContent;","import React, {Component} from 'react';\nimport {\n    Layout,\n    Row,\n    message,\n    Col,\n    Select,\n    Tabs,\n    Card,\n    Table,\n    Tag,\n    Button,\n    Modal,\n    Alert,\n    Spin,\n    Icon,\n    Tooltip,\n    Drawer, Menu, Dropdown, InputNumber, Collapse, Divider, Input\n} from \"antd\";\nimport OpsBreadcrumbPath from \"../breadcrumb_path\";\nimport {\n    deleteConfigMap,\n    deleteResource, deleteSecret, getConfigDict,\n    getDeployments,\n    getNamespaces,\n    getNodes, getPods,\n    getReplicaSets,\n    getReplicationControllers, getResourceYaml, getSecretDict,\n    getServices, postApplyYaml, putResourceScale\n} from \"../../api/kubernetes\";\nimport moment from \"moment\";\nimport {Controlled as CodeMirror} from 'react-codemirror2'\nimport 'codemirror/lib/codemirror.css';\nimport K8sTemplate from \"../../utils/k8s_template\";\nimport {Route, Switch} from \"react-router-dom\";\nimport RcDetailContent from \"./rc_detail\";\nimport ServiceDetailContent from \"./service_detail\";\nimport PodDetailContent from \"./pod_detail\";\nimport WebTerminalContent from \"./web_terminal\";\nimport ContainerLogContent from \"./container_log\";\nimport NodeDetailContent from \"./node_detail\";\nimport RsDetailContent from \"./rs_detail\";\nimport DeploymentDetailContent from \"./deployment_detail\";\nimport {StatusDoneSvg, StatusProgressSvg} from \"../../assets/Icons\";\nimport Highlighter from \"react-highlight-words\";\n\nconst { TabPane } = Tabs;\nconst { Content } = Layout;\nconst { Option }  = Select;\nconst { Panel } = Collapse;\nconst { confirm } = Modal;\n\nconst customPanelStyle = {\n    background: '#f7f7f7',\n    borderRadius: 4,\n    marginBottom: 24,\n    border: 0,\n    overflow: 'hidden',\n};\n\nclass K8sNamespacesContent extends Component {\n\n    constructor(props) {\n        super(props);\n        this.refreshNamespaceResources = this.refreshNamespaceResources.bind(this);\n        this.selectChange = this.selectChange.bind(this);\n        this.yarmCreateK8sResource = this.yarmCreateK8sResource.bind(this);\n        this.handleOk = this.handleOk.bind(this);\n        this.handleCancel = this.handleCancel.bind(this);\n        this.selectTemplateChange = this.selectTemplateChange.bind(this);\n        this.onDrawerClose = this.onDrawerClose.bind(this);\n        this.handleYamlDetailCancel = this.handleYamlDetailCancel.bind(this);\n        this.handleScaleCancel = this.handleScaleCancel.bind(this);\n        this.handleScaleCommit = this.handleScaleCommit.bind(this);\n        this.onInputNumberChange = this.onInputNumberChange.bind(this);\n        this.handleConfigCancel = this.handleConfigCancel.bind(this);\n        this.state = {\n            nodeColumns: [\n                {\n                    title: '名称',\n                    dataIndex: 'metadata.name',\n                    key: 'name',\n                    ...this.getColumnSearchProps('name'),\n                    render: (text, record) => {\n                        return (\n                            <Button type=\"link\" onClick={this.showDetail.bind(this, 'node', record)}>{text}</Button>\n                        )\n                    },\n                },\n                {\n                    title: '标签',\n                    key: 'labels',\n                    render: (text, record) => {\n                        let labels = [];\n                        for(let key in record.metadata.labels){\n                            labels.push(<div key={key}><Tag color=\"geekblue\">\n                                {key + \":\" + record.metadata.labels[key]}\n                            </Tag></div>)\n                        }\n                        return (\n                            labels\n                        )\n                    },\n                },\n                {\n                    title: '已就绪',\n                    key: 'ready',\n                    render: (text, record) => {\n                        let data = record.status.conditions;\n                        let content = <Tag color='#f50'>False</Tag>;\n                        for(let i=0; i<data.length; i++){\n                            if(data[i]['type']===\"Ready\"){\n                                if(data[i]['status']!=='False'){\n                                    content = <Tag color='#87d068'>True</Tag>\n                                }\n                                break;\n                            }\n                        }\n                        return (\n                            content\n                        )\n                    },\n                },\n                {\n                    title: '磁盘压力',\n                    key: 'disk',\n                    render: (text, record) => {\n                        let data = record.status.conditions;\n                        let content = <Tag color='#87d068'>无压力</Tag>;\n                        for(let i=0; i<data.length; i++){\n                            if(data[i]['type']===\"DiskPressure\"){\n                                if(data[i]['status']!=='False'){\n                                    content = <Tag color='#f50'>有压力</Tag>\n                                }\n                                break;\n                            }\n                        }\n                        return (\n                            content\n                        )\n                    },\n                },\n                {\n                    title: '内存压力',\n                    key: 'memory',\n                    render: (text, record) => {\n                        let data = record.status.conditions;\n                        let content = <Tag color='#87d068'>无压力</Tag>;\n                        for(let i=0; i<data.length; i++){\n                            if(data[i]['type']===\"MemoryPressure\"){\n                                if(data[i]['status']!=='False'){\n                                    content = <Tag color='#f50'>有压力</Tag>\n                                }\n                                break;\n                            }\n                        }\n                        return (\n                            content\n                        )\n                    },\n                },\n                {\n                    title: 'PID压力',\n                    key: 'pid',\n                    render: (text, record) => {\n                        let data = record.status.conditions;\n                        let content = <Tag color='#87d068'>无压力</Tag>;\n                        for(let i=0; i<data.length; i++){\n                            if(data[i]['type']===\"PIDPressure\"){\n                                if(data[i]['status']!=='False'){\n                                    content = <Tag color='#f50'>有压力</Tag>\n                                }\n                                break;\n                            }\n                        }\n                        return (\n                            content\n                        )\n                    },\n                },\n                {\n                    title: '创建时间',\n                    key: 'create_time',\n                    render: (text, record) => moment(record.metadata.creationTimestamp).format(\"YYYY-MM-DD\")\n                },\n            ],\n            rcColumns: [\n                {\n                    title: '名称',\n                    dataIndex: 'metadata.name',\n                    key: 'name',\n                    ...this.getColumnSearchProps('name'),\n                    render: (text, record) => {\n                        let icon = <StatusDoneSvg/>;\n                        if(record.status.readyReplicas === undefined\n                            || record.status.readyReplicas < record.status.replicas) {\n                            icon = <StatusProgressSvg/>;\n                        }\n                        return (\n                            <div>\n                                <span style={{ position: 'relative', top: '5px' }}>{icon}</span>\n                                <Button type=\"link\" onClick={this.showDetail.bind(this, 'rc', record)}>{text}</Button>\n                            </div>\n                        )\n                    },\n                },\n                {\n                    title: '命名空间',\n                    dataIndex: 'metadata.namespace',\n                    key: 'namespace',\n                },\n                {\n                    title: '标签',\n                    key: 'labels',\n                    render: (text, record) => {\n                        let labels = [];\n                        for(let key in record.metadata.labels){\n                            labels.push(<div key={key}><Tag color=\"geekblue\">\n                                {key + \":\" + record.metadata.labels[key]}\n                            </Tag></div>)\n                        }\n                        return (\n                            labels\n                        )\n                    },\n                },\n                {\n                    title: '容器组',\n                    key: 'replicas',\n                    render: (text, record) => {\n                        let readyReplicas = \" - \";\n                        if(record.status.hasOwnProperty(\"readyReplicas\")){\n                            readyReplicas = record.status.readyReplicas;\n                        }\n                        return (\n                            readyReplicas + \" / \" + record.status.replicas\n                        )\n                    }\n                },\n                {\n                    title: '创建时间',\n                    key: 'create_time',\n                    render: (text, record) => moment(record.metadata.creationTimestamp).format(\"YYYY-MM-DD\")\n                },\n                {\n                    title: '镜像',\n                    key: 'image',\n                    render: (text, record) => {\n                        let data = record.spec.template.spec.containers;\n                        let labels = [];\n                        for(let i=0; i<data.length; i++){\n                            labels.push(<div key={i}><Tag color=\"geekblue\">\n                                {data[i].image}\n                            </Tag></div>)\n                        }\n                        return (\n                            labels\n                        )\n                    },\n                },\n                {\n                    title: '操作',\n                    key: 'action',\n                    fixed: 'right',\n                    render: (text, record) => {\n                        const menu = (\n                            <Menu>\n                                <Menu.Item key=\"0\">\n                                    <a rel=\"noopener noreferrer\" href=\"#\" onClick={this.autoScaleHandler.bind(this, 'rc', record)}>\n                                        伸缩\n                                    </a>\n                                </Menu.Item>\n                                <Menu.Item key=\"1\">\n                                    <a rel=\"noopener noreferrer\" onClick={this.deleteHandler.bind(this, 'rc', record)}>\n                                        删除\n                                    </a>\n                                </Menu.Item>\n                                <Menu.Item key=\"2\">\n                                    <a rel=\"noopener noreferrer\" onClick={this.showYamlHandler.bind(this, 'rc', record)}>\n                                        查看yaml文件\n                                    </a>\n                                </Menu.Item>\n                            </Menu>\n                        );\n                        return (\n                            <Dropdown overlay={menu} trigger={['click']}>\n                                <a className=\"ant-dropdown-link\" href=\"#\">\n                                    资源操作 <Icon type=\"down\" />\n                                </a>\n                            </Dropdown>\n                        )\n                    },\n                },\n            ],\n            rsColumns: [\n                {\n                    title: '名称',\n                    dataIndex: 'metadata.name',\n                    key: 'name',\n                    ...this.getColumnSearchProps('name'),\n                    render: (text, record) => {\n                        let icon = <StatusDoneSvg/>;\n                        if(record.status.readyReplicas === undefined\n                            || record.status.readyReplicas < record.status.replicas) {\n                            icon = <StatusProgressSvg/>;\n                        }\n                        return (\n                            <div>\n                                <span style={{ position: 'relative', top: '5px' }}>{icon}</span>\n                                <Button type=\"link\" onClick={this.showDetail.bind(this, 'rs', record)}>{text}</Button>\n                            </div>\n                        )\n                    },\n                },\n                {\n                    title: '命名空间',\n                    dataIndex: 'metadata.namespace',\n                    key: 'namespace',\n                },\n                {\n                    title: '标签',\n                    key: 'labels',\n                    render: (text, record) => {\n                        let labels = [];\n                        for(let key in record.metadata.labels){\n                            labels.push(<div key={key}><Tag color=\"geekblue\">\n                                {key + \":\" + record.metadata.labels[key]}\n                            </Tag></div>)\n                        }\n                        return (\n                            labels\n                        )\n                    },\n                },\n                {\n                    title: '容器组',\n                    key: 'replicas',\n                    render: (text, record) => {\n                        let readyReplicas = \" - \";\n                        if(record.status.hasOwnProperty(\"readyReplicas\")){\n                            readyReplicas = record.status.readyReplicas;\n                        }\n                        return (\n                            readyReplicas + \" / \" + record.status.replicas\n                        )\n                    }\n                },\n                {\n                    title: '创建时间',\n                    key: 'create_time',\n                    render: (text, record) => moment(record.metadata.creationTimestamp).format(\"YYYY-MM-DD\")\n                },\n                {\n                    title: '镜像',\n                    key: 'image',\n                    render: (text, record) => {\n                        let data = record.spec.template.spec.containers;\n                        let labels = [];\n                        for(let i=0; i<data.length; i++){\n                            labels.push(<div key={i}><Tag color=\"geekblue\">\n                                {data[i].image}\n                            </Tag></div>)\n                        }\n                        return (\n                            labels\n                        )\n                    },\n                },\n                {\n                    title: '操作',\n                    key: 'action',\n                    fixed: 'right',\n                    render: (text, record) => {\n                        const menu = (\n                            <Menu>\n                                <Menu.Item key=\"0\">\n                                    <a rel=\"noopener noreferrer\" href=\"#\" onClick={this.autoScaleHandler.bind(this, 'rs', record)}>\n                                        伸缩\n                                    </a>\n                                </Menu.Item>\n                                <Menu.Item key=\"1\">\n                                    <a rel=\"noopener noreferrer\" onClick={this.deleteHandler.bind(this, 'rs', record)}>\n                                        删除\n                                    </a>\n                                </Menu.Item>\n                                <Menu.Item key=\"2\">\n                                    <a rel=\"noopener noreferrer\" onClick={this.showYamlHandler.bind(this, 'rs', record)}>\n                                        查看yaml文件\n                                    </a>\n                                </Menu.Item>\n                            </Menu>\n                        );\n                        return (\n                            <Dropdown overlay={menu} trigger={['click']}>\n                                <a className=\"ant-dropdown-link\" href=\"#\">\n                                    资源操作 <Icon type=\"down\" />\n                                </a>\n                            </Dropdown>\n                        )\n                    },\n                },\n            ],\n            serviceColumns: [\n                {\n                    title: '名称',\n                    dataIndex: 'metadata.name',\n                    key: 'name',\n                    ...this.getColumnSearchProps('name'),\n                    render: (text, record) => {\n                        return (\n                            <Button type=\"link\" onClick={this.showDetail.bind(this, 'service', record)}>{text}</Button>\n                        )\n                    },\n                },\n                {\n                    title: '命名空间',\n                    dataIndex: 'metadata.namespace',\n                    key: 'namespace',\n                },\n                {\n                    title: '标签',\n                    key: 'labels',\n                    render: (text, record) => {\n                        let labels = [];\n                        for(let key in record.metadata.labels){\n                            labels.push(<div key={key}><Tag color=\"geekblue\">\n                                {key + \":\" + record.metadata.labels[key]}\n                            </Tag></div>)\n                        }\n                        return (\n                            labels\n                        )\n                    },\n                },\n                {\n                    title: '集群IP',\n                    key: 'replicas',\n                    render: (text, record) => {\n                        return (\n                            record.spec.clusterIP\n                        )\n                    }\n                },\n                {\n                    title: '内部端点',\n                    key: 'image',\n                    render: (text, record) => {\n                        let data = record.spec.ports;\n                        let labels = [];\n                        for(let i=0; i<data.length; i++){\n                            labels.push(<div key={i}><Tag color=\"geekblue\">\n                                {record.metadata.name+\".\"+record.metadata.namespace+\":\"+data[i][\"port\"] + \" \" + data[i][\"protocol\"]}\n                            </Tag></div>)\n                        }\n                        return (\n                            labels\n                        )\n                    },\n                },\n                {\n                    title: '创建时间',\n                    key: 'create_time',\n                    render: (text, record) => moment(record.metadata.creationTimestamp).format(\"YYYY-MM-DD\")\n                },\n                {\n                    title: '操作',\n                    key: 'action',\n                    fixed: 'right',\n                    render: (text, record) => {\n                        const menu = (\n                            <Menu>\n                                <Menu.Item key=\"0\">\n                                    <a rel=\"noopener noreferrer\" onClick={this.deleteHandler.bind(this, 'service', record)}>\n                                        删除\n                                    </a>\n                                </Menu.Item>\n                                <Menu.Item key=\"1\">\n                                    <a rel=\"noopener noreferrer\" onClick={this.showYamlHandler.bind(this, 'service', record)}>\n                                        查看yaml文件\n                                    </a>\n                                </Menu.Item>\n                            </Menu>\n                        );\n                        return (\n                            <Dropdown overlay={menu} trigger={['click']}>\n                                <a className=\"ant-dropdown-link\" href=\"#\">\n                                    资源操作 <Icon type=\"down\" />\n                                </a>\n                            </Dropdown>\n                        )\n                    },\n                },\n            ],\n            deploymentColumns: [\n                {\n                    title: '名称',\n                    dataIndex: 'metadata.name',\n                    key: 'name',\n                    ...this.getColumnSearchProps('name'),\n                    render: (text, record) => {\n                        let icon = <StatusDoneSvg/>;\n                        if(record.status.readyReplicas === undefined\n                            || record.status.readyReplicas < record.status.replicas) {\n                            icon = <StatusProgressSvg/>;\n                        }\n                        return (\n                            <div>\n                                <span style={{ position: 'relative', top: '5px' }}>{icon}</span>\n                                <Button type=\"link\" onClick={this.showDetail.bind(this, 'deployment', record)}>{text}</Button>\n                            </div>\n                        )\n                    },\n                },\n                {\n                    title: '命名空间',\n                    dataIndex: 'metadata.namespace',\n                    key: 'namespace',\n                },\n                {\n                    title: '标签',\n                    key: 'labels',\n                    render: (text, record) => {\n                        let labels = [];\n                        for(let key in record.metadata.labels){\n                            labels.push(<div key={key}><Tag color=\"geekblue\">\n                                {key + \":\" + record.metadata.labels[key]}\n                            </Tag></div>)\n                        }\n                        return (\n                            labels\n                        )\n                    },\n                },\n                {\n                    title: '容器组',\n                    key: 'replicas',\n                    render: (text, record) => {\n                        let readyReplicas = \" - \";\n                        if(record.status.hasOwnProperty(\"readyReplicas\")){\n                            readyReplicas = record.status.readyReplicas;\n                        }\n                        return (\n                            readyReplicas + \" / \" + record.status.replicas\n                        )\n                    }\n                },\n                {\n                    title: '创建时间',\n                    key: 'create_time',\n                    render: (text, record) => moment(record.metadata.creationTimestamp).format(\"YYYY-MM-DD\")\n                },\n                {\n                    title: '镜像',\n                    key: 'image',\n                    render: (text, record) => {\n                        let data = record.spec.template.spec.containers;\n                        let labels = [];\n                        for(let i=0; i<data.length; i++){\n                            labels.push(<div key={i}><Tag color=\"geekblue\">\n                                {data[i].image}\n                            </Tag></div>)\n                        }\n                        return (\n                            labels\n                        )\n                    },\n                },\n                {\n                    title: '操作',\n                    key: 'action',\n                    fixed: 'right',\n                    render: (text, record) => {\n                        const menu = (\n                            <Menu>\n                                <Menu.Item key=\"0\">\n                                    <a rel=\"noopener noreferrer\" href=\"#\" onClick={this.autoScaleHandler.bind(this, 'deployment', record)}>\n                                        伸缩\n                                    </a>\n                                </Menu.Item>\n                                <Menu.Item key=\"1\">\n                                    <a rel=\"noopener noreferrer\" onClick={this.deleteHandler.bind(this, 'deployment', record)}>\n                                        删除\n                                    </a>\n                                </Menu.Item>\n                                <Menu.Item key=\"2\">\n                                    <a rel=\"noopener noreferrer\" onClick={this.showYamlHandler.bind(this, 'deployment', record)}>\n                                        查看yaml文件\n                                    </a>\n                                </Menu.Item>\n                            </Menu>\n                        );\n                        return (\n                            <Dropdown overlay={menu} trigger={['click']}>\n                                <a className=\"ant-dropdown-link\" href=\"#\">\n                                    资源操作 <Icon type=\"down\" />\n                                </a>\n                            </Dropdown>\n                        )\n                    },\n                },\n            ],\n            podColumns: [\n                {\n                    title: '名称',\n                    dataIndex: 'metadata.name',\n                    key: 'name',\n                    ...this.getColumnSearchProps('name'),\n                    render: (text, record) => {\n                        return (\n                            <Button type=\"link\" onClick={this.showDetail.bind(this, 'pod', record)}>{text}</Button>\n                        )\n                    },\n                },\n                {\n                    title: '命名空间',\n                    dataIndex: 'metadata.namespace',\n                    key: 'namespace',\n                },\n                {\n                    title: '节点',\n                    key: 'labels',\n                    dataIndex: 'spec.nodeName',\n                },\n                {\n                    title: '状态',\n                    key: 'status',\n                    dataIndex: 'status.phase',\n                    render: (text) => {\n                        let statusContent = <Tag color=\"#87d068\">{text}</Tag>;\n                        if(text===\"Failed\"){\n                            statusContent = <Tag color=\"#f50\">{text}</Tag>;\n                        }\n                        if(text===\"Pending\"){\n                            statusContent = <Tag color=\"#108ee9\">{text}</Tag>;\n                        }\n                        return statusContent;\n                    }\n                },\n                {\n                    title: '重启次数',\n                    key: 'count',\n                    render: (text, record) => {\n                        if(record.status.phase===\"Failed\") {\n                            return \"0\";\n                        }\n                        let data = record.status.containerStatuses;\n                        let labels = [];\n                        for(let i=0; i<data.length; i++){\n                            labels.push(<div key={i}><Tag color=\"geekblue\">\n                                {data[i]['name'] + \" - \" + data[i]['restartCount']}\n                            </Tag></div>)\n                        }\n                        return (\n                            labels\n                        )\n                    }\n                },\n                {\n                    title: '创建时间',\n                    key: 'create_time',\n                    render: (text, record) => moment(record.metadata.creationTimestamp).format(\"YYYY-MM-DD\")\n                },\n                {\n                    title: '操作',\n                    key: 'action',\n                    fixed: 'right',\n                    render: (text, record) => {\n                        const menu = (\n                            <Menu>\n                                <Menu.Item key=\"1\">\n                                    <a rel=\"noopener noreferrer\" onClick={this.deleteHandler.bind(this, 'pod', record)}>\n                                        删除\n                                    </a>\n                                </Menu.Item>\n                                <Menu.Item key=\"2\">\n                                    <a rel=\"noopener noreferrer\" onClick={this.showYamlHandler.bind(this, 'pod', record)}>\n                                        查看yaml文件\n                                    </a>\n                                </Menu.Item>\n                            </Menu>\n                        );\n                        return (\n                            <Dropdown overlay={menu} trigger={['click']}>\n                                <a className=\"ant-dropdown-link\" href=\"#\">\n                                    资源操作 <Icon type=\"down\" />\n                                </a>\n                            </Dropdown>\n                        )\n                    },\n                },\n            ],\n            configDictColumns: [\n                {\n                    title: '名称',\n                    dataIndex: 'metadata.name',\n                    key: 'name',\n                    ...this.getColumnSearchProps('name'),\n                    render: (text, record) => {\n                        return text\n                    },\n                },\n                {\n                    title: '命名空间',\n                    dataIndex: 'metadata.namespace',\n                    key: 'namespace',\n                },\n                {\n                    title: '创建时间',\n                    dataIndex: 'metadata.creationTimestamp',\n                    key: 'creationTimestamp',\n                },\n                {\n                    title: '数据值',\n                    key: 'data',\n                    fixed: 'right',\n                    render: (text, record) => {\n                        return (\n                            <div>\n                                <Button type=\"link\" onClick={this.showDictValue.bind(this, record)}>查看</Button>\n                                <Divider type=\"vertical\" />\n                                <Button type=\"link\" onClick={this.deleteDictValue.bind(this, 'config_map', record)}>删除</Button>\n                            </div>\n                        )\n                    },\n                },\n            ],\n            secretDictColumns: [\n                {\n                    title: '名称',\n                    dataIndex: 'metadata.name',\n                    key: 'name',\n                    ...this.getColumnSearchProps('name'),\n                    render: (text) => {\n                        return text\n                    },\n                },\n                {\n                    title: '命名空间',\n                    dataIndex: 'metadata.namespace',\n                    key: 'namespace',\n                },\n                {\n                    title: '类型',\n                    dataIndex: 'type',\n                    key: 'type',\n                },\n                {\n                    title: '创建时间',\n                    dataIndex: 'metadata.creationTimestamp',\n                    key: 'creationTimestamp',\n                },\n                {\n                    title: '数据值',\n                    key: 'data',\n                    fixed: 'right',\n                    render: (text, record) => {\n                        return (\n                            <div>\n                                <Button type=\"link\" onClick={this.showDictValue.bind(this, record)}>查看</Button>\n                                <Divider type=\"vertical\" />\n                                <Button type=\"link\" onClick={this.deleteDictValue.bind(this, 'secret', record)}>删除</Button>\n                            </div>\n                        )\n                    },\n                },\n            ],\n            namespaceList: [],\n            replicationControllerList: [],\n            deploymentList: [],\n            replicaSetList: [],\n            serviceList: [],\n            podList: [],\n            nodeList: [],\n            configDictList: [],\n            secretDictList: [],\n            dictConfigValue: {},\n            refreshDataLoading: false,\n            detailDrawerVisible: false,\n            yamlModalVisible: false,\n            scaleModalVisible: false,\n            configModalVisible: false,\n            yamlDetail: \"\",\n            currentNamespace: \"default\",\n            yamlCode: '',\n            replicaCount: 0,\n            scaleResType: \"\",\n            scaleResData: {\n                spec: {\n                    replicas: 0,\n                }\n            },\n        }\n    }\n\n    componentDidMount() {\n        this.getK8sNamespaces();\n        this.refreshNamespaceResources();\n        this.getK8sNodes();\n    }\n\n    selectChange(value) {\n        this.setState({currentNamespace: value}, ()=>{\n            this.refreshNamespaceResources();\n        });\n    }\n\n    getK8sNamespaces() {\n        getNamespaces().then((res)=>{\n            if(res.code===0) {\n                this.setState({namespaceList: res.data.items});\n            } else {\n                message.error(res.msg);\n            }\n        }).catch((err)=>{\n            message.error(err.toLocaleString());\n        })\n    }\n\n    getK8sNodes() {\n        getNodes().then((res)=>{\n            if(res.code===0){\n                this.setState({\n                    nodeList: res.data.items\n                })\n            } else {\n                message.error(res.msg);\n            }\n        }).catch((err)=>{\n            message.error(err.toLocaleString());\n        })\n    }\n\n    refreshNamespaceResources() {\n        this.getNamespaceDeployments();\n        this.getNamespaceReplicationControllers();\n        this.getNamespaceReplicaSets();\n        this.getNamespaceServices();\n        this.getNamespacePods();\n        this.getNamespaceConfigDict();\n        this.getNamespaceSecretDict();\n        this.showLoading();\n    }\n\n    showLoading = () => {\n        this.setState({refreshDataLoading: true});\n        setTimeout(()=>{\n            this.setState({refreshDataLoading: false});\n        }, 800);\n    };\n\n    getNamespaceDeployments() {\n        getDeployments({\n            \"namespace\": this.state.currentNamespace\n        }).then((res)=>{\n            if(res.code===0){\n                this.setState({\n                    deploymentList: res.data.items\n                })\n            } else {\n                message.error(res.msg);\n            }\n        }).catch((err)=>{\n            message.error(err.toLocaleString());\n        })\n    }\n\n    getNamespaceReplicationControllers() {\n        getReplicationControllers({\n            \"namespace\": this.state.currentNamespace\n        }).then((res)=>{\n            if(res.code===0){\n                this.setState({\n                    replicationControllerList: res.data.items\n                })\n            } else {\n                message.error(res.msg);\n            }\n        }).catch((err)=>{\n            message.error(err.toLocaleString());\n        })\n    }\n\n    getNamespaceReplicaSets() {\n        getReplicaSets({\n            \"namespace\": this.state.currentNamespace\n        }).then((res)=>{\n            if(res.code===0){\n                this.setState({\n                    replicaSetList: res.data.items\n                });\n            } else {\n                message.error(res.msg);\n            }\n        }).catch((err)=>{\n            message.error(err.toLocaleString());\n        })\n    }\n\n    getNamespaceServices() {\n        getServices({\n            \"namespace\": this.state.currentNamespace\n        }).then((res)=>{\n            if(res.code===0){\n                this.setState({\n                    serviceList: res.data.items\n                });\n            } else {\n                message.error(res.msg);\n            }\n        }).catch((err)=>{\n            message.error(err.toLocaleString());\n        })\n    }\n\n    getNamespacePods() {\n        getPods({\n            \"namespace\": this.state.currentNamespace\n        }).then((res)=>{\n            if(res.code===0){\n                this.setState({\n                    podList: res.data.items\n                });\n            } else {\n                message.error(res.msg);\n            }\n        }).catch((err)=>{\n            message.error(err.toLocaleString());\n        })\n    }\n\n    getNamespaceConfigDict() {\n        getConfigDict({\n            \"namespace\": this.state.currentNamespace\n        }).then((res)=>{\n            if(res.code===0){\n                this.setState({\n                    configDictList: res.data.items\n                });\n            } else {\n                message.error(res.msg);\n            }\n        }).catch((err)=>{\n            message.error(err.toLocaleString());\n        })\n    }\n\n    getNamespaceSecretDict() {\n        getSecretDict({\n            \"namespace\": this.state.currentNamespace\n        }).then((res)=>{\n            if(res.code===0){\n                this.setState({\n                    secretDictList: res.data.items\n                });\n            } else {\n                message.error(res.msg);\n            }\n        }).catch((err)=>{\n            message.error(err.toLocaleString());\n        })\n    }\n\n    getColumnSearchProps = dataIndex => ({\n        filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\n            <div style={{ padding: 8 }}>\n                <Input\n                    ref={node => {\n                        this.searchInput = node;\n                    }}\n                    value={selectedKeys[0]}\n                    onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\n                    onPressEnter={() => this.handleSearch(selectedKeys, confirm)}\n                    style={{ width: 188, marginBottom: 8, display: 'block' }}\n                />\n                <Button\n                    type=\"primary\"\n                    onClick={() => this.handleSearch(selectedKeys, confirm)}\n                    icon=\"search\"\n                    size=\"small\"\n                    style={{ width: 90, marginRight: 8 }}\n                >\n                    查找\n                </Button>\n                <Button onClick={() => this.handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\n                    重置\n                </Button>\n            </div>\n        ),\n        filterIcon: filtered => (\n            <Icon type=\"search\" style={{ color: filtered ? '#1890ff' : '#40a9ff' }} />\n        ),\n        onFilter: (value, record) => {\n            console.log(dataIndex, record);\n          return (\n              record[\"metadata\"][dataIndex]\n                  .toString()\n                  .toLowerCase()\n                  .includes(value.toLowerCase())\n          )\n        },\n        onFilterDropdownVisibleChange: visible => {\n            if (visible) {\n                setTimeout(() => this.searchInput.select());\n            }\n        },\n        render: text => (\n            <Highlighter\n                highlightStyle={{ backgroundColor: '#ffc069', padding: 0 }}\n                searchWords={[this.state.searchText]}\n                autoEscape\n                textToHighlight={text.toString()}\n            />\n        ),\n    });\n\n    handleSearch = (selectedKeys, confirm) => {\n        confirm();\n        this.setState({ searchText: selectedKeys[0] });\n    };\n\n    handleReset = clearFilters => {\n        clearFilters();\n        this.setState({ searchText: '' });\n    };\n\n    showDictValue(data) {\n        this.setState({\n            configModalVisible: true,\n            dictConfigValue: data.data,\n        })\n    }\n\n    deleteDictValue(type, data) {\n        switch (type) {\n            case \"config_map\":\n                deleteConfigMap({\n                    namespace: this.state.currentNamespace,\n                    resName: data.metadata.name,\n                }).then((res)=>{\n                    if(res.code===0){\n                        message.success(\"删除成功\");\n                        this.refreshNamespaceResources();\n                    } else {\n                        message.error(res.msg);\n                    }\n                }).catch((err)=>{\n                    message.error(err.toLocaleString());\n                });\n                break;\n            case \"secret\":\n                deleteSecret({\n                    namespace: this.state.currentNamespace,\n                    resName: data.metadata.name,\n                }).then((res)=>{\n                    if(res.code===0){\n                        message.success(\"删除成功\");\n                        this.refreshNamespaceResources();\n                    } else {\n                        message.error(res.msg);\n                    }\n                }).catch((err)=>{\n                    message.error(err.toLocaleString());\n                });\n                break;\n            default:\n                message.warn(\"不支持的类型\")\n                break;\n        }\n    }\n\n    handleConfigCancel() {\n        this.setState({\n            configModalVisible: false,\n        })\n    }\n\n    yarmCreateK8sResource() {\n        this.setState({createModalVisible: true});\n    }\n\n    handleOk() {\n        if(this.state.yamlCode.trim()===\"\"){\n            message.warn(\"需要填写文件内容！\");\n            return;\n        }\n        postApplyYaml({\n            namespace: this.state.currentNamespace,\n            yamlContent: this.state.yamlCode,\n        }).then((res)=>{\n            if(res.code===0){\n                this.setState({createModalVisible: false});\n                message.success(\"提交成功，请到对应资源栏查看详情\");\n                this.refreshNamespaceResources();\n            } else {\n                message.error(res.msg);\n            }\n        }).catch((err)=>{\n            message.error(err.toLocaleString());\n        })\n    }\n\n    handleCancel() {\n        this.setState({createModalVisible: false});\n    }\n\n    selectTemplateChange(data) {\n        this.setState({yamlCode: K8sTemplate[data]});\n    }\n\n    showDetail(resourceType, data) {\n        this.setState({detailDrawerVisible: true});\n        switch (resourceType) {\n            case 'node':\n                this.props.history.push({'pathname': '/admin/k8s_cluster/manage/node_detail', 'state': {data}});\n                break;\n            case 'rc':\n                this.props.history.push({'pathname': '/admin/k8s_cluster/manage/rc_detail', 'state': {data}});\n                break;\n            case 'rs':\n                this.props.history.push({'pathname': '/admin/k8s_cluster/manage/rs_detail', 'state': {data}});\n                break;\n            case 'deployment':\n                this.props.history.push({'pathname': '/admin/k8s_cluster/manage/deployment_detail', 'state': {data}});\n                break;\n            case 'service':\n                this.props.history.push({'pathname': '/admin/k8s_cluster/manage/service_detail', 'state': {data}});\n                break;\n            case 'pod':\n                this.props.history.push({'pathname': '/admin/k8s_cluster/manage/pod_detail', 'state': {data}});\n                break;\n            default:\n                message.error(\"不支持的类型：\"+resourceType);\n                break;\n        }\n    }\n\n    onDrawerClose() {\n        this.setState({detailDrawerVisible: false});\n    }\n\n    autoScaleHandler(resType, data) {\n        this.setState({\n            scaleModalVisible: true,\n            scaleResType: resType,\n            scaleResData: data,\n        })\n    }\n\n    deleteHandler(resType, data) {\n        const that = this;\n        confirm({\n            title: '操作警告?',\n            content: '确定删除该 kubenetes 资源吗？',\n            icon: <Icon type=\"warning\" />,\n            onOk() {\n                deleteResource({\n                    \"namespace\": data.metadata.namespace,\n                    \"resType\": resType,\n                    \"resName\": data.metadata.name,\n                }).then((res)=>{\n                    if(res.code===0){\n                        message.success(\"删除成功\");\n                        that.showLoading();\n                    } else {\n                        message.error(res.msg);\n                    }\n                }).catch((err)=>{\n                    message.error(err.toLocaleString());\n                });\n            },\n            onCancel() {\n                console.log('Cancel');\n            },\n        });\n\n    }\n\n    showYamlHandler(resType, data) {\n        this.setState({yamlModalVisible: true});\n        getResourceYaml({\n            \"namespace\": data.metadata.namespace,\n            \"resType\": resType,\n            \"resName\": data.metadata.name,\n        }).then((res)=>{\n            if(res.code===0){\n                this.setState({yamlDetail: res.data});\n            } else {\n                message.error(res.msg);\n            }\n        }).catch((err)=>{\n            message.error(err.toLocaleString());\n        });\n    }\n\n    handleYamlDetailCancel() {\n        this.setState({yamlModalVisible: false});\n    }\n\n    handleScaleCancel() {\n        this.setState({scaleModalVisible: false});\n    }\n\n    handleScaleCommit() {\n        putResourceScale({\n            namespace: this.state.scaleResData.metadata.namespace,\n            resType: this.state.scaleResType,\n            resName: this.state.scaleResData.metadata.name,\n            replicaCount: this.state.replicaCount,\n        }).then((res)=>{\n            if(res.code===0){\n                this.setState({scaleModalVisible: false});\n                message.success(\"提交成功\");\n                this.showLoading();\n                switch (this.state.scaleResType) {\n                    case \"rc\":\n                        this.getNamespaceReplicationControllers();\n                        break;\n                    default:\n                        break;\n                }\n            } else {\n                message.error(res.msg);\n            }\n        }).catch((err)=>{\n            message.error(err.toLocaleString());\n        })\n    }\n\n    onInputNumberChange(data) {\n        this.setState({ replicaCount: data });\n    }\n\n    render() {\n        let modelTitle = (\n            \"新建资源 - \" + this.state.currentNamespace\n        );\n        let alertTitle = (\n            <div>\n                填入 YAML 文件内容，将指定资源部署到当前所选命名空间。\n                <Tooltip title={<div>更多配置信息请查看: <a href='https://kubernetes.io/docs/home/' target=\"_blank\">官方文档</a></div>}>\n                    <Icon type=\"question-circle\" />\n                </Tooltip>\n            </div>\n        );\n        let configList = [];\n        for (let key in this.state.dictConfigValue) {\n            configList.push(\n                <Panel header={key} key={key} style={customPanelStyle}>\n                    <CodeMirror\n                        value={this.state.dictConfigValue[key]}\n                    />\n                </Panel>\n            );\n        }\n        return (\n            <Content\n                style={{ background: '#fff', padding: \"5px 20px\", margin: 0, height: \"100%\" }}\n            >\n                <OpsBreadcrumbPath pathData={[\"Kubernetes\", \"集群管理\"]} />\n\n                <Row>\n                    <span style={{ lineHeight: '30px', fontWeight: '500', marginRight: '20px' }}>命名空间: </span>\n                    <Select defaultValue=\"default\" style={{ width: '200px', marginRight: '20px' }} onChange={this.selectChange}>\n                        {/*<Option key=\"0\" value=\"\">所有</Option>*/}\n                        {\n                            this.state.namespaceList.map((item, index)=>{\n                                let disabled = false;\n                                if(item[\"status\"][\"phase\"]!==\"Active\"){\n                                    disabled = true;\n                                }\n                                return (\n                                    <Option key={index} value={item.metadata.name} disabled={disabled}>{item.metadata.name}</Option>\n                                )\n                            })\n                        }\n                    </Select>\n                    <Button onClick={this.refreshNamespaceResources} style={{marginRight: '20px'}}>刷 新</Button>\n                    <Button type=\"primary\" onClick={this.yarmCreateK8sResource}>新 建</Button>\n                </Row>\n\n                <Modal\n                    title={modelTitle}\n                    destroyOnClose={true}\n                    visible={this.state.createModalVisible}\n                    onOk={this.handleOk}\n                    onCancel={this.handleCancel}\n                    width={700}\n                    centered={true}\n                >\n                    <Alert message={alertTitle} banner style={{ marginBottom: '10px', marginTop: '-20px' }}/>\n                    <Row style={{ marginBottom: '10px' }}>\n                        <Col span={4}>\n                            <span style={{ lineHeight: '30px', fontWeight: '500' }}>选择资源模板: </span>\n                        </Col>\n                        <Col span={6} style={{ marginRight: '20px' }}>\n                            <Select defaultValue=\"\" style={{ width: '100%' }} onChange={this.selectTemplateChange}>\n                                <Option key=\"0\" value=\"\">无</Option>\n                                <Option key=\"1\" value=\"deployment\">部 署</Option>\n                                <Option key=\"2\" value=\"rc\">副本控制器</Option>\n                                <Option key=\"3\" value=\"rs\">副本集</Option>\n                                <Option key=\"4\" value=\"statefull_rs\">有状态副本集</Option>\n                                <Option key=\"5\" value=\"service\">服 务</Option>\n                                <Option key=\"6\" value=\"daemon_set\">守护进程集</Option>\n                                <Option key=\"7\" value=\"config_map\">配置字典</Option>\n                                <Option key=\"8\" value=\"secret_map\">保密字典</Option>\n                            </Select>\n                        </Col>\n                    </Row>\n                    <CodeMirror\n                        value={this.state.yamlCode}\n                        options={{\n                            mode: 'xml',\n                            theme: 'material',\n                        }}\n                        onBeforeChange={(editor, data, value) => {\n                            this.setState({yamlCode: value});\n                        }}\n                    />\n                </Modal>\n\n                <Modal\n                    title=\"YAML详情\"\n                    destroyOnClose={true}\n                    visible={this.state.yamlModalVisible}\n                    onCancel={this.handleYamlDetailCancel}\n                    width={700}\n                    centered={true}\n                    footer={[\n                        <Button onClick={this.handleYamlDetailCancel}>\n                            取消\n                        </Button>,\n                    ]}\n                >\n                    <CodeMirror\n                        value={this.state.yamlDetail}\n                        options={{\n                            mode: 'xml',\n                            theme: 'material',\n                        }}\n                        onBeforeChange={(editor, data, value) => {\n                            this.setState({yamlDetail: value});\n                        }}\n                    />\n                </Modal>\n\n                <Modal\n                    title=\"自动伸缩\"\n                    destroyOnClose={true}\n                    visible={this.state.scaleModalVisible}\n                    onCancel={this.handleScaleCancel}\n                    width={400}\n                    centered={true}\n                    bodyStyle={{ textAlign: 'center' }}\n                    footer={[\n                        <Button onClick={this.handleScaleCancel}>\n                            取消\n                        </Button>,\n                        <Button type=\"primary\" onClick={this.handleScaleCommit}>\n                            确定\n                        </Button>,\n                    ]}\n                >\n                    <InputNumber\n                        min={0}\n                        defaultValue={this.state.scaleResData.spec.replicas}\n                        onChange={this.onInputNumberChange}\n                        style={{ width: \"70%\" }}\n                    />\n                </Modal>\n\n\n                <Modal\n                    title=\"配置字典值\"\n                    destroyOnClose={true}\n                    visible={this.state.configModalVisible}\n                    onCancel={this.handleConfigCancel}\n                    width={600}\n                    footer={[]}\n                >\n                    <Collapse bordered={false}>\n                    {configList}\n                    </Collapse>\n                </Modal>\n\n                <Drawer\n                    placement=\"left\"\n                    closable={true}\n                    destroyOnClose={true}\n                    onClose={this.onDrawerClose}\n                    visible={this.state.detailDrawerVisible}\n                    width=\"70%\"\n                >\n                    <Switch>\n                        <Route path=\"/admin/k8s_cluster/manage/node_detail\" component={NodeDetailContent}/>\n                        <Route path=\"/admin/k8s_cluster/manage/rc_detail\" component={RcDetailContent}/>\n                        <Route path=\"/admin/k8s_cluster/manage/rs_detail\" component={RsDetailContent}/>\n                        <Route path=\"/admin/k8s_cluster/manage/deployment_detail\" component={DeploymentDetailContent}/>\n                        <Route path=\"/admin/k8s_cluster/manage/service_detail\" component={ServiceDetailContent}/>\n                        <Route path=\"/admin/k8s_cluster/manage/pod_detail\" component={PodDetailContent}/>\n                        <Route path=\"/admin/k8s_cluster/manage/container_log\" component={ContainerLogContent}/>\n                        <Route path=\"/admin/k8s_cluster/manage/container_terminal\" component={WebTerminalContent}/>\n                    </Switch>\n                </Drawer>\n\n                <Row style={{ marginTop: '10px' }}>\n                    <Card size=\"small\" title=\"资源总览\" style={{ width: '100%' }}>\n                        <Spin spinning={this.state.refreshDataLoading}>\n                        <Tabs defaultActiveKey=\"1\" tabPosition=\"left\" style={{ width: '100%' }} tabBarStyle={{ textAlign: 'left' }}>\n                            <TabPane tab={<div style={{fontSize: '13px', width:'80px', textAlign: 'left'}}>节点</div>} key={1}>\n                                <Table size=\"small\" columns={this.state.nodeColumns} dataSource={this.state.nodeList} scroll={{x: 'max-content'}}/>\n                            </TabPane>\n                            <TabPane tab={<div style={{fontSize: '13px', width:'80px', textAlign: 'left'}}>副本集</div>} key={2}>\n                                <Table size=\"small\" columns={this.state.rsColumns} dataSource={this.state.replicaSetList} scroll={{x: 'max-content'}}/>\n                            </TabPane>\n                            <TabPane tab={<div style={{fontSize: '13px', width:'80px', textAlign: 'left'}}>部署</div>} key={3}>\n                                <Table size=\"small\" columns={this.state.deploymentColumns} dataSource={this.state.deploymentList} scroll={{x: 'max-content'}}/>\n                            </TabPane>\n                            <TabPane tab={<div style={{fontSize: '13px', width:'80px', textAlign: 'left'}}>副本控制器</div>} key={4}>\n                                <Table size=\"small\" columns={this.state.rcColumns} dataSource={this.state.replicationControllerList} scroll={{x: 'max-content'}}/>\n                            </TabPane>\n                            <TabPane tab={<div style={{fontSize: '13px', width:'80px', textAlign: 'left'}}>服务</div>} key={5}>\n                                <Table size=\"small\" columns={this.state.serviceColumns} dataSource={this.state.serviceList} scroll={{x: 'max-content'}}/>\n                            </TabPane>\n                            <TabPane tab={<div style={{fontSize: '13px', width:'80px', textAlign: 'left'}}>容器组</div>} key={6}>\n                                <Table size=\"small\" columns={this.state.podColumns} dataSource={this.state.podList} scroll={{x: 'max-content'}}/>\n                            </TabPane>\n                            <TabPane tab={<div style={{fontSize: '13px', width:'80px', textAlign: 'left'}}>配置字典</div>} key={7}>\n                                <Table size=\"small\" columns={this.state.configDictColumns} dataSource={this.state.configDictList} scroll={{x: 'max-content'}}/>\n                            </TabPane>\n                            <TabPane tab={<div style={{fontSize: '13px', width:'80px', textAlign: 'left'}}>保密字典</div>} key={8}>\n                                <Table size=\"small\" columns={this.state.secretDictColumns} dataSource={this.state.secretDictList} scroll={{x: 'max-content'}}/>\n                            </TabPane>\n                        </Tabs>\n                        </Spin>\n                    </Card>\n                </Row>\n            </Content>\n        )\n    }\n}\n\nexport default K8sNamespacesContent;\n","import React, {Component} from 'react';\nimport OpsBreadcrumbPath from \"../breadcrumb_path\";\nimport {Row, Layout, Button, Modal, List, Card, Empty, Form, Input, Icon, Upload, message, Popconfirm, Col} from \"antd\";\nimport {ServerBase} from \"../../config\";\nimport {getLocalToken} from \"../../utils/axios\";\nimport {deleteCluster, getClusterData, postCluster, postSwitchCluster, postPrometheus} from \"../../api/kubernetes\";\n\nconst {Content} = Layout;\n\nlet kubeConfigPath = \"\";\n\nclass ClusterManageContent extends Component {\n\n    constructor(props) {\n        super(props);\n        this.addCluster = this.addCluster.bind(this);\n        this.handleClusterAddOk = this.handleClusterAddOk.bind(this);\n        this.handleClusterAddCancel = this.handleClusterAddCancel.bind(this);\n        this.handleSetPrometheusAddOk = this.handleSetPrometheusAddOk.bind(this);\n        this.handleSetPrometheusAddCancel = this.handleSetPrometheusAddCancel.bind(this);\n        this.loadClusterData = this.loadClusterData.bind(this);\n        this.state = {\n            addModelVisible: false,\n            setPrometheusModelVisible: false,\n            uploadProps: {\n                action: ServerBase + 'kubernetes/upload_cluster_kubeconfig',\n                headers: {\n                    Authorization: getLocalToken()\n                },\n                onChange(info) {\n                    if (info.file.status === 'done') {\n                        let resp = info.file.response;\n                        if(resp.code===0){\n                            kubeConfigPath = resp.data;\n                            message.success(\"上传成功\")\n                        } else {\n                            message.error(\"上传失败: \", resp.msg)\n                        }\n                    } else if (info.file.status === 'error') {\n                        message.error(`${info.file.name} file upload failed.`);\n                    }\n                },\n            },\n            clusterData: [],\n            prometheusHost: \"\",\n        }\n    }\n\n    componentDidMount() {\n        this.loadClusterData();\n    }\n\n    enterToCluster(clusterId) {\n        let that = this;\n        message.loading('集群连接初始化中，即将跳转...', 0.6);\n        localStorage.setItem('clusterId', clusterId);\n        setTimeout(function () {\n            that.props.history.push({'pathname': '/admin/k8s_cluster/manage'});\n        }, 600);\n    }\n\n    loadClusterData() {\n        getClusterData().then((res)=>{\n            if(res.code===0){\n                this.setState({clusterData: res.data.k8sData});\n            } else {\n                message.error(res.msg);\n            }\n        }).catch((err)=>{\n            message.error(err.toLocaleString())\n        })\n    }\n\n    addCluster() {\n        this.setState({addModelVisible: true});\n    }\n\n    setPrometheus() {\n        this.setState({setPrometheusModelVisible: true}); \n    }\n\n    handleClusterAddOk() {\n        if(kubeConfigPath===\"\"){\n            message.warn(\"kubeconfig文件必须要上传!\");\n            return;\n        }\n        this.props.form.validateFields((err, values) => {\n            if(!err){\n                let reqData = {\n                    ...values,\n                    kubeconfig_file_path: kubeConfigPath,\n                };\n                postCluster(reqData).then((res)=>{\n                    if(res.code===0) {\n                        message.success(\"添加成功\");\n                        kubeConfigPath = \"\";\n                        this.setState({addModelVisible: false});\n                        this.loadClusterData();\n                    } else {\n                        message.error(res.msg);\n                    }\n                }).catch((err)=>{\n                    message.error(err.toLocaleString());\n                })\n            }\n        });\n    }\n\n    handleClusterAddCancel() {\n        this.setState({addModelVisible: false});\n    }\n\n    handleSetPrometheusAddOk() {\n        if(this.state.prometheusHost.trim()===\"\"){\n            message.warn(\"prometheus访问地址必须填写\");\n        } else {\n            let reqData = {\n                host: \"http://\"+this.state.prometheusHost.trim(),\n            };\n            postPrometheus(reqData).then((res)=>{\n                if(res.code===0) {\n                    message.success(\"设置成功\");\n                    this.setState({setPrometheusModelVisible: false});\n                } else {\n                    message.error(res.msg);\n                }\n            }).catch((err)=>{\n                message.error(err.toLocaleString());\n            })\n        }\n    }\n\n    handleSetPrometheusAddCancel() {\n        this.setState({setPrometheusModelVisible: false});\n    }\n\n    hostChange(e) {\n        this.setState({prometheusHost: e.target.value});\n    }\n\n    confirmDeleteCluster(id) {\n        deleteCluster({id: id}).then((res)=>{\n            if(res.code===0){\n                message.success(\"移除成功\");\n                this.loadClusterData();\n            } else {\n                message.error(res.msg);\n            }\n        }).catch((err)=>{\n            message.error(err.toLocaleString());\n        })\n    }\n\n    render() {\n        const { getFieldDecorator } = this.props.form;\n        const formItemLayout = {\n            labelCol: { span: 7 },\n            wrapperCol: { span: 14 },\n        };\n        return (\n            <Content\n                style={{ background: '#fff', padding: \"5px 20px\", margin: 0, height: \"100%\" }}\n            >\n                <OpsBreadcrumbPath pathData={[\"Kubernetes\", \"集群信息\"]} />\n                <Row>\n                    <Col span={2}>\n                        <Button type=\"primary\" onClick={this.addCluster} style={{width:\"100%\"}}>新增集群</Button>\n                    </Col>\n                    <Col span={4} offset={1}>\n                        <Button onClick={this.setPrometheus.bind(this)} style={{width:\"100%\"}}>设置Prometheus</Button>\n                    </Col>\n                </Row>\n\n                <Row style={{ marginTop: '10px' }}>\n                    {\n                        this.state.clusterData.length === 0 ? (\n                            <Empty description=\"暂未添加任何kubernetes集群\"/>\n                        ) : (\n                            <List\n                                grid={{ gutter: 16, column: 4 }}\n                                dataSource={this.state.clusterData}\n                                renderItem={item => (\n                                    <List.Item>\n                                        <Card title={item.name} size=\"small\">\n                                            <div style={{height: '50px', fontSize: '13px'}}>{item.description}</div>\n                                            <div style={{marginTop: '10px'}}>\n                                                <Button type=\"link\" size=\"small\" style={{float: 'left'}} onClick={this.enterToCluster.bind(this, item.clusterId)}>进入集群</Button>\n                                                <Popconfirm\n                                                    title=\"确定移除该集群吗?\"\n                                                    okText=\"确认\"\n                                                    cancelText=\"取消\"\n                                                    onConfirm={this.confirmDeleteCluster.bind(this, item.id)}\n                                                >\n                                                    <Button type=\"link\" size=\"small\" style={{color: 'red', float: 'right'}}>删除集群</Button>\n                                                </Popconfirm>\n                                            </div>\n                                        </Card>\n                                    </List.Item>\n                                )}\n                            />\n                        )\n                    }\n                </Row>\n\n                <Modal\n                    title=\"新增集群信息\"\n                    destroyOnClose={true}\n                    visible={this.state.addModelVisible}\n                    onOk={this.handleClusterAddOk}\n                    onCancel={this.handleClusterAddCancel}\n                >\n                    <Form>\n                        <Form.Item label=\"集群名称\" {...formItemLayout}>\n                            {getFieldDecorator('name', {\n                                rules: [{ required: true, message: \"该项为必填项\" }],\n                            })(\n                                <Input />\n                            )}\n                        </Form.Item>\n                        <Form.Item label=\"集群描述\" {...formItemLayout}>\n                            {getFieldDecorator('description', {\n                                rules: [{ required: true, message: \"该项为必填项\" }],\n                            })(\n                                <Input />\n                            )}\n                        </Form.Item>\n                        <Form.Item label=\"KubeConfig文件\" {...formItemLayout}>\n                            {getFieldDecorator('kubeconfig_file_path', {\n                                rules: [{ required: true, message: \"该项为必填项\" }],\n                            })(\n                                <Upload {...this.state.uploadProps}>\n                                    <Button>\n                                        <Icon type=\"upload\" /> 点击上传\n                                    </Button>\n                                </Upload>\n                            )}\n                        </Form.Item>\n                    </Form>\n                </Modal>\n\n                <Modal\n                    title=\"设置Prometheus访问地址\"\n                    destroyOnClose={true}\n                    visible={this.state.setPrometheusModelVisible}\n                    onOk={this.handleSetPrometheusAddOk}\n                    onCancel={this.handleSetPrometheusAddCancel}\n                >\n                    <Input addonBefore=\"http://\" defaultValue={this.state.prometheusHost} onChange={this.hostChange.bind(this)}/>\n                </Modal>\n\n            </Content>\n        )\n    }\n}\n\nClusterManageContent = Form.create({ name: 'ClusterManageContent' })(ClusterManageContent);\n\nexport default ClusterManageContent;\n","import React, {Component} from 'react';\nimport {Layout} from \"antd\";\nimport {Route, Switch} from \"react-router-dom\";\nimport K8sNamespacesContent from \"./namespaces\";\nimport ClusterManageContent from \"./k8s_cluster\";\n\nconst {Content} = Layout;\n\nclass KubernetesContent extends Component {\n\n    render() {\n        return (\n            <Content style={{\n                background: '#fff', padding: 0, margin: 0, height: \"100%\",\n            }}>\n                <Switch>\n                    <Route path=\"/admin/k8s_cluster/info\" component={ClusterManageContent} />\n                    <Route path=\"/admin/k8s_cluster/manage\" component={K8sNamespacesContent} />\n                </Switch>\n            </Content>\n        )\n    }\n}\n\nexport default KubernetesContent;\n","import React, { Component } from \"react\";\nimport {Layout, message} from 'antd';\nimport { Route, Switch } from 'react-router-dom';\nimport WelcomeContent from \"./WelcomeContent\";\nimport ServerContent from \"../components/cloud_resource/server_content\";\nimport RdsContent from \"../components/cloud_resource/rds_content\";\nimport KvContent from \"../components/cloud_resource/kv_content\";\nimport SlbContent from \"../components/cloud_resource/slb_content\";\nimport CloudContent from \"../components/cloud_resource/account_content\";\nimport Task_content from \"../components/task/task_content\";\nimport UserManager from \"../components/permissions/user_manager\";\nimport RolesManager from \"../components/permissions/role_manager\";\nimport PermissionsManager from \"../components/permissions/permission_manager\";\nimport PasswordManager from \"../components/permissions/password_manager\";\nimport {getUserTokenRefresh} from \"../api/user\";\nimport jwt_decode from \"jwt-decode\";\nimport SyncAliyunContent from \"../components/data/sync_aliyun\";\nimport OtherContent from \"../components/cloud_resource/other_content\";\nimport SettingsContent from \"../components/system/settings_content\";\nimport LogoutContent from \"../components/logout\";\nimport UserFeedbackManager from \"../components/system/feedback_manager\";\nimport JenkinsContent from \"../components/ci_cd/jenkins\";\nimport KubernetesContent from \"../components/kubernetes/kubernetes\";\n\nconst { Content } = Layout;\n\nclass ContentLayout extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            isSuperAdmin: false,\n        }\n    }\n\n    componentWillMount() {\n        getUserTokenRefresh().then((res)=>{\n            if(res.code === 0){\n                localStorage.setItem('ops_token', res.data.token);\n                let info = jwt_decode(res.data.token);\n                this.setState({\n                   isSuperAdmin: info['userInfo']['isSuperAdmin']\n                });\n            }\n        }).catch((err)=>{\n            message.error(err.toLocaleString());\n        });\n    }\n\n    render() {\n        return (\n            <Content style={{ height: \"100%\", minWidth: '900px', overflow: 'scroll' }}>\n                <Switch>\n                    <Route exact path=\"/admin\" component={WelcomeContent}/>\n                    <Route path=\"/admin/cloud_resource/cloud_server\" render={() => (<ServerContent isSuperAdmin={this.state.isSuperAdmin}/>)} />\n                    <Route path=\"/admin/cloud_resource/cloud_rds\" render={() => (<RdsContent isSuperAdmin={this.state.isSuperAdmin}/>)} />\n                    <Route path=\"/admin/cloud_resource/cloud_kv\" render={() => (<KvContent isSuperAdmin={this.state.isSuperAdmin}/>)} />\n                    <Route path=\"/admin/cloud_resource/cloud_slb\" render={() => (<SlbContent isSuperAdmin={this.state.isSuperAdmin}/>)} />\n                    <Route path=\"/admin/cloud_resource/cloud_account\" render={() => (<CloudContent isSuperAdmin={this.state.isSuperAdmin}/>)} />\n                    <Route path=\"/admin/cloud_resource/cloud_other\" render={() => (<OtherContent isSuperAdmin={this.state.isSuperAdmin}/>)} />\n                    <Route path=\"/admin/task\" render={() => (<Task_content isSuperAdmin={this.state.isSuperAdmin}/>)} />\n                    <Route path=\"/admin/cicd\" render={() => (<JenkinsContent/>)} />\n                    <Route path=\"/admin/k8s_cluster\" render={() => (<KubernetesContent/>)} />\n                    <Route path=\"/admin/data/syncAliyun\" component={SyncAliyunContent}/>\n                    <Route path=\"/admin/permission/users\" component={UserManager}/>\n                    <Route path=\"/admin/permission/roles\" component={RolesManager}/>\n                    <Route path=\"/admin/permission/permissions\" component={PermissionsManager}/>\n                    <Route path=\"/admin/permission/password\" component={PasswordManager}/>\n                    <Route path=\"/admin/system/setting\" component={SettingsContent}/>\n                    <Route path=\"/admin/system/user_feedback\" component={UserFeedbackManager}/>\n                    <Route path=\"/admin/logout\" component={LogoutContent}/>\n                </Switch>\n            </Content>\n        )\n    }\n\n}\n\nexport default ContentLayout;\n","import React, { Component } from 'react';\nimport {Layout} from 'antd';\nimport { BrowserRouter as Router, Route, withRouter } from 'react-router-dom';\nimport OpsHeader from '../components/header';\nimport OpsSider from '../components/sidebar';\nimport OpsFooter from '../components/footer';\nimport ContentLayout from \"./ContentLayout\";\nimport {Steps} from \"intro.js-react\";\n\nimport 'intro.js/introjs.css';\nimport {isShowIntroPage} from \"../services/common\";\n\nclass AdminContent extends Component {\n\n    constructor(props) {\n        super(props);\n        this.handleSiderMenu = this.handleSiderMenu.bind(this);\n        this.state = {\n            collapsed: false,\n            stepsEnabled: false,\n            initialStep: 0,\n            options: {\n                prevLabel: \"上一步\",\n                nextLabel: \"下一步\",\n                skipLabel: \"跳过\",\n                doneLabel: \"结束\",\n                hintButtonLabel: \"开始使用\"\n            },\n            steps: [\n                {\n                    element: '.introStep2',\n                    intro: '用户可以点击这里进行bug&需求的反馈，系统管理员可在系统管理->用户反馈中进行查看！',\n                },\n                {\n                    element: '.introStep4',\n                    intro: '在这里进入各细分功能列表，完成相应的操作；管理员可以在权限管理中控制用户访问菜单的权限！',\n                },\n            ]\n        };\n    }\n\n    componentDidMount() {\n        let show = isShowIntroPage();\n        if(show===1){\n            this.setState({\n                stepsEnabled: true\n            })\n        }\n    }\n\n    handleSiderMenu() {\n        this.setState({collapsed: !this.state.collapsed});\n    };\n\n    onExit = () => {\n        this.setState(() => ({ stepsEnabled: false }));\n    };\n\n    render() {\n        const { stepsEnabled, steps, initialStep, options } = this.state;\n\n        return (\n            <Router>\n                <Layout style={{ minHeight: '100vh' }}>\n                    <Steps\n                        enabled={stepsEnabled}\n                        steps={steps}\n                        initialStep={initialStep}\n                        onExit={this.onExit}\n                        options={options}\n                    />\n                    <OpsSider menuCollapsed={this.state.collapsed} />\n                    <Layout>\n                        <OpsHeader menuCollapsed={this.state.collapsed} handleSiderMenu={this.handleSiderMenu}/>\n                        <Route path=\"/admin\" component={ContentLayout}/>\n                        <OpsFooter/>\n                    </Layout>\n                </Layout>\n            </Router>\n        );\n    }\n}\n\n\nexport default withRouter(AdminContent);\n\n","import React, { Component } from 'react';\nimport {Form, Icon, Input, Button, Row, Col, message} from 'antd';\nimport '../assets/css/login.css';\nimport {postUserLogin} from \"../api/user\";\n\nclass LoginContent extends Component {\n\n    constructor(props) {\n        super(props);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.state = {};\n    }\n\n    componentDidMount() {\n        let code = new URLSearchParams(this.props.location.search).get(\"code\");\n        if(code!==undefined && code !== null){\n            code = parseInt(code);\n            if(code === 401) {\n                message.error(\"token过期，请重新登录!\", 4);\n            }\n            if(code === 403) {\n                message.error(\"用户不存在或被禁用，请联系管理员!\", 4);\n            }\n        }\n    }\n\n    handleEnterKey = (e) => {\n        if(e.nativeEvent.keyCode === 13){\n            this.handleSubmit();\n        }\n    };\n\n    handleSubmit(e) {\n        this.props.form.validateFields((err, values) => {\n            if (!err) {\n                postUserLogin(values).then((res)=>{\n                    if(res.code === 0){\n                         localStorage.setItem('ops_token', res.data.token);\n                         message.success(\"欢迎使用运维平台！\");\n                         this.props.history.push('/admin');\n                    } else {\n                        this.props.form.setFields({\n                            password: {\n                                value: '',\n                                errors: [new Error(res.msg)],\n                            },\n                        });\n                        message.error(res.msg);\n                    }\n                }).catch((err)=>{\n                    message.error(err.toLocaleString());\n                });\n            }\n        });\n    };\n\n  render() {\n    const { getFieldDecorator } = this.props.form;\n    let loginPanel = (\n        <div>\n            <Form onSubmit={this.handleSubmit} className=\"login-form\">\n                <Form.Item>\n                    {getFieldDecorator('username', {\n                        rules: [{ required: true, message: '请输入您的注册邮箱!' }],\n                    })(\n                        <Input\n                            size=\"large\"\n                            prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                            placeholder=\"用户账号\"\n                            onKeyPress={this.handleEnterKey}\n                        />,\n                    )}\n                </Form.Item>\n                <Form.Item>\n                    {getFieldDecorator('password', {\n                        rules: [{ required: true, message: '请输入您的密码!' }],\n                    })(\n                        <Input\n                            size=\"large\"\n                            prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                            type=\"password\"\n                            placeholder=\"用户密码\"\n                            onKeyPress={this.handleEnterKey}\n                        />,\n                    )}\n                </Form.Item>\n                <Form.Item>\n                    <Button type=\"primary\" block className=\"login-form-button\" size=\"large\" onClick={this.handleSubmit}>\n                        登 录\n                    </Button>\n                </Form.Item>\n            </Form>\n        </div>\n    );\n    return (\n        <div>\n            <Row style={{height: \"25vh\", paddingTop: \"10vh\"}}>\n              <Col span={9}/>\n              <Col span={6} style={{ padding: \"0px 30px\" }}>\n                  <span className=\"login-logo\"/>\n                  <span className=\"login-logo-text\">运维平台</span>\n              </Col>\n              <Col span={9}/>\n            </Row>\n            <Row style={{height: \"30vh\"}}>\n                <Col span={9}/>\n                <Col span={6} style={{ textAlign: 'center' }}>\n\n                    { loginPanel }\n\n                </Col>\n                <Col span={9}/>\n            </Row>\n            <Row style={{height: \"30vh\"}} />\n            <Row style={{height: \"15vh\", textAlign: 'center', paddingTop: 50}}>\n                ©2019 Created by KevinYang\n            </Row>\n        </div>\n    );\n  }\n}\n\nLoginContent = Form.create({ name: 'normalogin' })(LoginContent);\n\nexport default LoginContent;\n\n\n\n","import React, {Component} from 'react';\nimport { Result, Button } from 'antd';\n\n\nclass Exception500 extends Component {\n\n    constructor(props) {\n        super(props);\n        this.backToLogin = this.backToLogin.bind(this);\n        this.state = {}\n    }\n\n    backToLogin() {\n        this.props.history.push('/admin');\n    }\n\n    render() {\n        return (\n            <Result\n                status=\"500\"\n                title=\"异常提醒\"\n                subTitle=\"服务异常，请联系运维中心处理\"\n                style={{height: \"100vh\"}}\n                extra={\n                    <Button type=\"primary\" onClick={this.backToLogin}>\n                        返回主页\n                    </Button>\n                }\n            />\n        )\n    }\n}\n\nclass Exception403 extends Component {\n\n    constructor(props) {\n        super(props);\n        this.backToLogin = this.backToLogin.bind(this);\n        this.state = {}\n    }\n\n    backToLogin() {\n        this.props.history.push('/admin');\n    }\n\n    render() {\n        return (\n            <Result\n                status=\"403\"\n                title=\"403\"\n                subTitle=\"您没有访问权限\"\n                style={{height: \"100vh\"}}\n                extra={\n                    <Button type=\"primary\" onClick={this.backToLogin}>\n                        返回主页\n                    </Button>\n                }\n            />\n        )\n    }\n}\n\nclass Exception404 extends Component {\n\n    constructor(props) {\n        super(props);\n        this.backToLogin = this.backToLogin.bind(this);\n        this.state = {}\n    }\n\n    backToLogin() {\n        this.props.history.push('/admin');\n    }\n\n    render() {\n        return (\n            <Result\n                status=\"404\"\n                title=\"404\"\n                subTitle=\"访问的页面不存在\"\n                style={{height: \"100vh\"}}\n                extra={\n                    <Button type=\"primary\" onClick={this.backToLogin}>\n                        返回主页\n                    </Button>\n                }\n            />\n        )\n    }\n}\n\nexport { Exception403, Exception404, Exception500 };","import React,{Component} from 'react'; \nimport {BrowserRouter,Route,Switch} from 'react-router-dom';\nimport AdminContent from './layouts/AdminLayout';\nimport LoginContent from './layouts/LoginLayout';\nimport {Exception404, Exception500} from \"./layouts/ExceptionContent\";\n\nexport default class RouterWrap extends Component{ \n    \n    render(){ \n        return ( \n            <div id=\"router\" style={{backgroundColor:\"#f0f2f5\"}}>\n                <BrowserRouter>\n                    <Switch>\n                        <Route path=\"/\" component={LoginContent} exact />\n                        <Route path=\"/admin\" component={AdminContent} />\n                        <Route path=\"/login\" component={LoginContent} />\n                        <Route component={Exception404} />\n                        <Route path=\"/exception500\" component={Exception500} />\n                    </Switch>\n                </BrowserRouter>\n            </div> \n        )\n    } \n\n}\n","import React, { Component } from 'react';\nimport '../assets/css/main.css';\nimport RouterWrap from '../router';\n\nclass App extends Component {\n  render() {\n    return (\n        <div className=\"App\">\n            <RouterWrap/>\n        </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './layouts/main';\nimport * as serviceWorker from './serviceWorker';\nimport zhCN from 'antd/es/locale-provider/zh_CN';\nimport {ConfigProvider} from \"antd\";\n\n\nReactDOM.render(\n    <ConfigProvider locale={zhCN}>\n        <App/>\n    </ConfigProvider>\n    ,\n    document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}